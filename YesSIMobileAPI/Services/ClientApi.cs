//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.10.6.0 (NJsonSchema v10.3.8.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"

namespace Service
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.10.6.0 (NJsonSchema v10.3.8.0 (Newtonsoft.Json v12.0.0.0))")]
    public partial class Client
    {
        private string _baseUrl = "";
        private System.Net.Http.HttpClient _httpClient;
        private System.Lazy<Newtonsoft.Json.JsonSerializerSettings> _settings;

        public Client(string baseUrl, System.Net.Http.HttpClient httpClient)
        {
            BaseUrl = baseUrl;
            _httpClient = httpClient;
            _settings = new System.Lazy<Newtonsoft.Json.JsonSerializerSettings>(CreateSerializerSettings);
        }

        private Newtonsoft.Json.JsonSerializerSettings CreateSerializerSettings()
        {
            var settings = new Newtonsoft.Json.JsonSerializerSettings();
            UpdateJsonSerializerSettings(settings);
            return settings;
        }

        public string BaseUrl
        {
            get { return _baseUrl; }
            set { _baseUrl = value; }
        }

        protected Newtonsoft.Json.JsonSerializerSettings JsonSerializerSettings { get { return _settings.Value; } }

        partial void UpdateJsonSerializerSettings(Newtonsoft.Json.JsonSerializerSettings settings);


        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, string url);
        partial void PrepareRequest(System.Net.Http.HttpClient client, System.Net.Http.HttpRequestMessage request, System.Text.StringBuilder urlBuilder);
        partial void ProcessResponse(System.Net.Http.HttpClient client, System.Net.Http.HttpResponseMessage response);
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AdmUser>> LoginAsync(string email, string pwd)
        {
            return LoginAsync(email, pwd, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public async System.Threading.Tasks.Task<System.Collections.Generic.ICollection<AdmUser>> LoginAsync(string email, string pwd, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/Login?");
            if (email != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("email") + "=").Append(System.Uri.EscapeDataString(ConvertToString(email, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            if (pwd != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("pwd") + "=").Append(System.Uri.EscapeDataString(ConvertToString(pwd, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");
                    request_.Headers.Accept.Add(System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse("text/plain"));

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            var objectResponse_ = await ReadObjectResponseAsync<System.Collections.Generic.ICollection<AdmUser>>(response_, headers_).ConfigureAwait(false);
                            if (objectResponse_.Object == null)
                            {
                                throw new ApiException("Response was null which was not expected.", status_, objectResponse_.Text, headers_, null);
                            }
                            return objectResponse_.Object;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task GetProspetAsync(string nom)
        {
            return GetProspetAsync(nom, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public async System.Threading.Tasks.Task GetProspetAsync(string nom, System.Threading.CancellationToken cancellationToken)
        {
            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/Prospet/GetProspet?");
            if (nom != null)
            {
                urlBuilder_.Append(System.Uri.EscapeDataString("nom") + "=").Append(System.Uri.EscapeDataString(ConvertToString(nom, System.Globalization.CultureInfo.InvariantCulture))).Append("&");
            }
            urlBuilder_.Length--;

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    request_.Method = new System.Net.Http.HttpMethod("GET");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public System.Threading.Tasks.Task AddProspetAsync(CfgTier body)
        {
            return AddProspetAsync(body, System.Threading.CancellationToken.None);
        }

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <returns>Success</returns>
        /// <exception cref="ApiException">A server side error occurred.</exception>
        public async System.Threading.Tasks.Task AddProspetAsync(CfgTier body, System.Threading.CancellationToken cancellationToken)
        {
            if (body == null)
                throw new System.ArgumentNullException("body");

            var urlBuilder_ = new System.Text.StringBuilder();
            urlBuilder_.Append(BaseUrl != null ? BaseUrl.TrimEnd('/') : "").Append("/Prospet/AddProspet");

            var client_ = _httpClient;
            var disposeClient_ = false;
            try
            {
                using (var request_ = new System.Net.Http.HttpRequestMessage())
                {
                    var content_ = new System.Net.Http.StringContent(Newtonsoft.Json.JsonConvert.SerializeObject(body, _settings.Value));
                    content_.Headers.ContentType = System.Net.Http.Headers.MediaTypeHeaderValue.Parse("application/json");
                    request_.Content = content_;
                    request_.Method = new System.Net.Http.HttpMethod("POST");

                    PrepareRequest(client_, request_, urlBuilder_);

                    var url_ = urlBuilder_.ToString();
                    request_.RequestUri = new System.Uri(url_, System.UriKind.RelativeOrAbsolute);

                    PrepareRequest(client_, request_, url_);

                    var response_ = await client_.SendAsync(request_, System.Net.Http.HttpCompletionOption.ResponseHeadersRead, cancellationToken).ConfigureAwait(false);
                    var disposeResponse_ = true;
                    try
                    {
                        var headers_ = System.Linq.Enumerable.ToDictionary(response_.Headers, h_ => h_.Key, h_ => h_.Value);
                        if (response_.Content != null && response_.Content.Headers != null)
                        {
                            foreach (var item_ in response_.Content.Headers)
                                headers_[item_.Key] = item_.Value;
                        }

                        ProcessResponse(client_, response_);

                        var status_ = (int)response_.StatusCode;
                        if (status_ == 200)
                        {
                            return;
                        }
                        else
                        {
                            var responseData_ = response_.Content == null ? null : await response_.Content.ReadAsStringAsync().ConfigureAwait(false);
                            throw new ApiException("The HTTP status code of the response was not expected (" + status_ + ").", status_, responseData_, headers_, null);
                        }
                    }
                    finally
                    {
                        if (disposeResponse_)
                            response_.Dispose();
                    }
                }
            }
            finally
            {
                if (disposeClient_)
                    client_.Dispose();
            }
        }

        protected struct ObjectResponseResult<T>
        {
            public ObjectResponseResult(T responseObject, string responseText)
            {
                this.Object = responseObject;
                this.Text = responseText;
            }

            public T Object { get; }

            public string Text { get; }
        }

        public bool ReadResponseAsString { get; set; }

        protected virtual async System.Threading.Tasks.Task<ObjectResponseResult<T>> ReadObjectResponseAsync<T>(System.Net.Http.HttpResponseMessage response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers)
        {
            if (response == null || response.Content == null)
            {
                return new ObjectResponseResult<T>(default(T), string.Empty);
            }

            if (ReadResponseAsString)
            {
                var responseText = await response.Content.ReadAsStringAsync().ConfigureAwait(false);
                try
                {
                    var typedBody = Newtonsoft.Json.JsonConvert.DeserializeObject<T>(responseText, JsonSerializerSettings);
                    return new ObjectResponseResult<T>(typedBody, responseText);
                }
                catch (Newtonsoft.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body string as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, responseText, headers, exception);
                }
            }
            else
            {
                try
                {
                    using (var responseStream = await response.Content.ReadAsStreamAsync().ConfigureAwait(false))
                    using (var streamReader = new System.IO.StreamReader(responseStream))
                    using (var jsonTextReader = new Newtonsoft.Json.JsonTextReader(streamReader))
                    {
                        var serializer = Newtonsoft.Json.JsonSerializer.Create(JsonSerializerSettings);
                        var typedBody = serializer.Deserialize<T>(jsonTextReader);
                        return new ObjectResponseResult<T>(typedBody, string.Empty);
                    }
                }
                catch (Newtonsoft.Json.JsonException exception)
                {
                    var message = "Could not deserialize the response body stream as " + typeof(T).FullName + ".";
                    throw new ApiException(message, (int)response.StatusCode, string.Empty, headers, exception);
                }
            }
        }

        private string ConvertToString(object value, System.Globalization.CultureInfo cultureInfo)
        {
            if (value == null)
            {
                return "";
            }

            if (value is System.Enum)
            {
                var name = System.Enum.GetName(value.GetType(), value);
                if (name != null)
                {
                    var field = System.Reflection.IntrospectionExtensions.GetTypeInfo(value.GetType()).GetDeclaredField(name);
                    if (field != null)
                    {
                        var attribute = System.Reflection.CustomAttributeExtensions.GetCustomAttribute(field, typeof(System.Runtime.Serialization.EnumMemberAttribute))
                            as System.Runtime.Serialization.EnumMemberAttribute;
                        if (attribute != null)
                        {
                            return attribute.Value != null ? attribute.Value : name;
                        }
                    }

                    var converted = System.Convert.ToString(System.Convert.ChangeType(value, System.Enum.GetUnderlyingType(value.GetType()), cultureInfo));
                    return converted == null ? string.Empty : converted;
                }
            }
            else if (value is bool)
            {
                return System.Convert.ToString((bool)value, cultureInfo).ToLowerInvariant();
            }
            else if (value is byte[])
            {
                return System.Convert.ToBase64String((byte[])value);
            }
            else if (value.GetType().IsArray)
            {
                var array = System.Linq.Enumerable.OfType<object>((System.Array)value);
                return string.Join(",", System.Linq.Enumerable.Select(array, o => ConvertToString(o, cultureInfo)));
            }

            var result = System.Convert.ToString(value, cultureInfo);
            return result == null ? "" : result;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActAccountType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isActive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsActive { get; set; }

        [Newtonsoft.Json.JsonProperty("isPassive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPassive { get; set; }

        [Newtonsoft.Json.JsonProperty("isProduct", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("isCharge", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCharge { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActAccount> ActAccounts { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActJournalType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isActAccountMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsActAccountMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActJournal> ActJournals { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmRight
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmUserRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebRight
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("nodeKey", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NodeKey { get; set; }

        [Newtonsoft.Json.JsonProperty("roleId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid RoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("role", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole Role { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmAttachedFileTypeStrEntity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmAttachedFile
    {
        [Newtonsoft.Json.JsonProperty("category", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Category { get; set; }

        [Newtonsoft.Json.JsonProperty("categoryDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CategoryDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Type { get; set; }

        [Newtonsoft.Json.JsonProperty("extention", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Extention { get; set; }

        [Newtonsoft.Json.JsonProperty("attachedFile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public byte[] AttachedFile { get; set; }

        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("categoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("foderGroup", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FoderGroup { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("openBeeDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? OpenBeeDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentWorkFlowAdmRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("workFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? WorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("workFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentWorkFlow WorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySelectionKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketStatusHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketStatus PrjMarketStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketStatusReport
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportDataId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmReportDataId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportData", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmReportDatum AdmReportData { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketStatus PrjMarketStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketWorkFlow PrjMarketWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketWorkFlowAdmRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketWorkFlow PrjMarketWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusStartId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketStatusStartId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusEndId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketStatusEndId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketStatus PrjMarketStatusEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketStatus PrjMarketStatusStart { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketDocumentToAttach> PrjMarketDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketWorkFlowAdmRole> PrjMarketWorkFlowAdmRoles { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmWorkFlowStateTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("withPrevision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithPrevision { get; set; }

        [Newtonsoft.Json.JsonProperty("withBordereau", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithBordereau { get; set; }

        [Newtonsoft.Json.JsonProperty("withDepouillement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithDepouillement { get; set; }

        [Newtonsoft.Json.JsonProperty("withDecomposition", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithDecomposition { get; set; }

        [Newtonsoft.Json.JsonProperty("withMarketAdvance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithMarketAdvance { get; set; }

        [Newtonsoft.Json.JsonProperty("withWorkingOutAdvance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithWorkingOutAdvance { get; set; }

        [Newtonsoft.Json.JsonProperty("withWorkingOut", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("withTendersOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTendersOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("isCancellation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("isAmarketEffectif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAmarketEffectif { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWorkFlowStateType AdmWorkFlowStateType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketStatusHistory> PrjMarketStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusReports", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketStatusReport> PrjMarketStatusReports { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlowPrjMarketStatusEnds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketWorkFlow> PrjMarketWorkFlowPrjMarketStatusEnds { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlowPrjMarketStatusStarts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketWorkFlow> PrjMarketWorkFlowPrjMarketStatusStarts { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActDefaultAccount
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("ratioEnabled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? RatioEnabled { get; set; }

        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ratio { get; set; }

        [Newtonsoft.Json.JsonProperty("isSystem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSystem { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderStatusPaymentType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatus> ComFolderStatuses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderWorkFlowAdmRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderWorkFlow ComFolderWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusStartId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusStartId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusEndId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusEndId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("withAutomaticTransition", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithAutomaticTransition { get; set; }

        [Newtonsoft.Json.JsonProperty("isOnlyValidForCreditSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOnlyValidForCreditSale { get; set; }

        [Newtonsoft.Json.JsonProperty("isOnlyValidForCashSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOnlyValidForCashSale { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatusEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatusStart { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderWorkFlowAdmRole> ComFolderWorkFlowAdmRoles { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTrancheSettlementCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgtrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgtrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("percentOf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PercentOf { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgtranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche Cfgtranche { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSettlementCategory ComSettlementCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComDocumentPaymentMethod
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("discountRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSettlementCategory ComSettlementCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmEventType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admEvents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmEvent> AdmEvents { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComActionMessageCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessageSubCategory> ComActionMessageSubCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComActionMessageSubCategoryStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessageSubCategory> ComActionMessageSubCategories { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithProjectMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithProjectMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("alertDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AlertDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageSubCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageSubCategory ComActionMessageSubCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComActionMessageSubCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("isRevivalMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRevivalMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategoryStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageSubCategoryStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("updateFinancialSchema", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? UpdateFinancialSchema { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageCategory ComActionMessageCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategoryStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageSubCategoryStatus ComActionMessageSubCategoryStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("admEvents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmEvent> AdmEvents { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionKinds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionKind> ComProspectionKinds { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmEvent
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmloyeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgEmloyeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admEventTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmEventTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Subject { get; set; }

        [Newtonsoft.Json.JsonProperty("location", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Location { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("startHour", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartHour { get; set; }

        [Newtonsoft.Json.JsonProperty("endHour", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndHour { get; set; }

        [Newtonsoft.Json.JsonProperty("allDay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AllDay { get; set; }

        [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Color { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Status { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("eventStatus", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string EventStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageSubCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admEventType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmEventType AdmEventType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmloyee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgEmloyee { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageSubCategory ComActionMessageSubCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgDepartment
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDelegations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgDelegation> CfgDelegations { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgDelegation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDepartmentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgDepartmentId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDepartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgDepartment CfgDepartment { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTrancheLevel
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndLevelId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndLevel LndLevel { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class LndLevel
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheLevels", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheLevel> CfgTrancheLevels { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class LndVocation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComOffer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("maturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("comOfferItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOfferItem> ComOfferItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComOfferItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("comOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkCostCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("blok", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Blok { get; set; }

        [Newtonsoft.Json.JsonProperty("rawNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? RawNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("levelNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LevelNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("orientation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Orientation { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("contenance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Contenance { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("areaFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("alwaysAffected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AlwaysAffected { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComOffer ComOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkCostCategory StkCostCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjCoefficientCost
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("coefficient", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Coefficient { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkCostCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkCostCategory StkCostCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationEstimationLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("weightingRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WeightingRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping1Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping1Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping2Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping2Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping3Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping3Id { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedUnitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedUnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedUnitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedUnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("weightingRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WeightingRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping1Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping1Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping2Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping2Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping3Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping3Id { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrStatusType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrStatus> StrStatuses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhAdvanceLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAdvanceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhAdvanceId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAdvance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhAdvance GrhAdvance { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhAdvance
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAdvanceLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhAdvanceLine> GrhAdvanceLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhCreditLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountBase { get; set; }

        [Newtonsoft.Json.JsonProperty("amountInterest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountInterest { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhCreditId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhCreditId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhCredit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhCredit GrhCredit { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhCredit
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("grhCreditLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhCreditLine> GrhCreditLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhDiscipline
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhOverTimeType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isChargedWorkedDay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsChargedWorkedDay { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhOverTimes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhOverTime> GrhOverTimes { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhOverTime
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("hoursNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? HoursNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhOverTimeTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhOverTimeTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("grhOverTimeType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhOverTimeType GrhOverTimeType { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhResignation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhTermination
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhVacationGroupGrhEmployee
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhVacationGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhVacationGroup GrhVacationGroup { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacation> GrhVacations { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhVacation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("dateFrom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DateFrom { get; set; }

        [Newtonsoft.Json.JsonProperty("dateTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DateTo { get; set; }

        [Newtonsoft.Json.JsonProperty("daysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhVacationTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroupGrhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhVacationGroupGrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroupGrhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhVacationGroupGrhEmployee GrhVacationGroupGrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhVacationType GrhVacationType { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhVacationType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isCharged", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCharged { get; set; }

        [Newtonsoft.Json.JsonProperty("isChargedWorkedDay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsChargedWorkedDay { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacationGroup> GrhVacationGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacation> GrhVacations { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhVacationGroup
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("dateFrom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DateFrom { get; set; }

        [Newtonsoft.Json.JsonProperty("dateTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DateTo { get; set; }

        [Newtonsoft.Json.JsonProperty("daysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhVacationTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhVacationType GrhVacationType { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroupGrhEmployees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacationGroupGrhEmployee> GrhVacationGroupGrhEmployees { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulMeetingType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(25)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeeting> BulMeetings { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulDelegateContact
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("bulDelegateId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulDelegateId { get; set; }

        [Newtonsoft.Json.JsonProperty("contactId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ContactId { get; set; }

        [Newtonsoft.Json.JsonProperty("isPresent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPresent { get; set; }

        [Newtonsoft.Json.JsonProperty("notify", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Notify { get; set; }

        [Newtonsoft.Json.JsonProperty("bulDelegate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulDelegate BulDelegate { get; set; }

        [Newtonsoft.Json.JsonProperty("contact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier Contact { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulDelegate
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulMeetingId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("effectif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Effectif { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeeting", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulMeeting BulMeeting { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("bulDelegateContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulDelegateContact> BulDelegateContacts { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulMeetingContact
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulMeetingId { get; set; }

        [Newtonsoft.Json.JsonProperty("contactId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ContactId { get; set; }

        [Newtonsoft.Json.JsonProperty("isPresent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPresent { get; set; }

        [Newtonsoft.Json.JsonProperty("notify", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Notify { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeeting", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulMeeting BulMeeting { get; set; }

        [Newtonsoft.Json.JsonProperty("contact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier Contact { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulObservationStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isColsed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsColsed { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingLine> BulMeetingLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulMeetingLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("dueDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DueDate { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("note", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Note { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosed { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulMeetingId { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulMeetingLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("bulObservationStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulObservationStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isInternal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsInternal { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeeting", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulMeeting BulMeeting { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingLineNavigation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulMeetingLine BulMeetingLineNavigation { get; set; }

        [Newtonsoft.Json.JsonProperty("bulObservationStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulObservationStatus BulObservationStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseBulMeetingLineNavigation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingLine> InverseBulMeetingLineNavigation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulMeeting
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("meetingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MeetingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("nextDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? NextDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("note", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Note { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulMeetingTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulMeetingType BulMeetingType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("bulDelegates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulDelegate> BulDelegates { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingContact> BulMeetingContacts { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingLine> BulMeetingLines { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingPrjProjectProgressCriteriaLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingPrjProjectProgressCriteriaLine> BulMeetingPrjProjectProgressCriteriaLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjProjectProgressCriteriaLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingPrjProjectProgressCriteriaLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingPrjProjectProgressCriteriaLine> BulMeetingPrjProjectProgressCriteriaLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BulMeetingPrjProjectProgressCriteriaLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("achievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Achievement { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BulMeetingId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectProgressCriteriaLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectProgressCriteriaLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheLevelingdefinitionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheLevelingdefinitionId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeeting", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BulMeeting BulMeeting { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheLevelingdefinition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTrancheLevelingDefinition CfgTrancheLevelingdefinition { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectProgressCriteriaLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProjectProgressCriteriaLine PrjProjectProgressCriteriaLine { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkLevelingLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkLevelId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkLeveling StkLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViews", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketView> PrjMarketViews { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjClause
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocRef { get; set; }

        [Newtonsoft.Json.JsonProperty("supplierDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SupplierDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WarrantyBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("decbasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DecbasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecamount { get; set; }

        [Newtonsoft.Json.JsonProperty("trcbasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? TrcbasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcamount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcratio { get; set; }

        [Newtonsoft.Json.JsonProperty("prorataBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ProrataBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("proportionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProportionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("proportionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProportionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjClauseLine> PrjClauseLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjClauseLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClauseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjClauseId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjClause PrjClause { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketLine PrjMarketLine { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjWorkingOutLineSubLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("coefficient", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Coefficient { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjWorkingOutLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjWorkingOutLine PrjWorkingOutLine { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjWorkingOutLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? QuantityOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("coefficient", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Coefficient { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? QuantityOld { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjWorkingOutId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketLine PrjMarketLine { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOut", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjWorkingOut PrjWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLineSubLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLineSubLine> PrjWorkingOutLineSubLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjWorkingOutRetainedLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjWorkingOutId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOut", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjWorkingOut PrjWorkingOut { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjStockLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutStockLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutStockLine> PrjWorkingOutStockLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjWorkingOutStockLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjWorkingOutId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjStockLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjStockLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjStockLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjStockLine PrjStockLine { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOut", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjWorkingOut PrjWorkingOut { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjWorkingOutViewHierarchy
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjWorkingOutId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewHierarchyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjMarketViewHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("advancementQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvancementQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("advancementRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvancementRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketViewHierarchy PrjMarketViewHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOut", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjWorkingOut PrjWorkingOut { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjWorkingOut
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocRef { get; set; }

        [Newtonsoft.Json.JsonProperty("supplierDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SupplierDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("parentDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string ParentDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRegul", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRegul { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("linesCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LinesCount { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtcafterDeductions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtcafterDeductions { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("achievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Achievement { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecamount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcamount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcratio { get; set; }

        [Newtonsoft.Json.JsonProperty("proportionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProportionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("proportionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProportionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("extraAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ExtraAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("nonRefundableRetainer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NonRefundableRetainer { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToBePaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToBePaid { get; set; }

        [Newtonsoft.Json.JsonProperty("refundableRetainer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RefundableRetainer { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceRest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceRest { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecrest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecrest { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcrest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcrest { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("workingOutAdvanceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WorkingOutAdvanceAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("workingOutAdvanceAmountRestAtCreation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WorkingOutAdvanceAmountRestAtCreation { get; set; }

        [Newtonsoft.Json.JsonProperty("workingOutAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WorkingOutAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("stockPileRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockPileRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmountOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmountOld { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcamountMax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcamountMax { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecamountMax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecamountMax { get; set; }

        [Newtonsoft.Json.JsonProperty("prorataRefundAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProrataRefundAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AdvanceBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WarrantyBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("trcbasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? TrcbasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("decbasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DecbasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("prorataBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ProrataBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuationsOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FluctuationsOld { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fluctuations { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuationsToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FluctuationsToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("finalWorkingOut", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? FinalWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("sourceRatioOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SourceRatioOld { get; set; }

        [Newtonsoft.Json.JsonProperty("rsamountOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RsamountOld { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultRsbasedOnRetainedAmountsOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DefaultRsbasedOnRetainedAmountsOld { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmountOldHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmountOldHt { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmountToPayHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmountToPayHt { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuationsOldHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FluctuationsOldHt { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuationsHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FluctuationsHt { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuationsToPayHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FluctuationsToPayHt { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLineExtras", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLineExtra> PrjWorkingOutLineExtras { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLine> PrjWorkingOutLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutRetainedLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutRetainedLine> PrjWorkingOutRetainedLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutStockLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutStockLine> PrjWorkingOutStockLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutViewHierarchies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutViewHierarchy> PrjWorkingOutViewHierarchies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjWorkingOutLineExtra
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjWorkingOutId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketLine PrjMarketLine { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOut", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjWorkingOut PrjWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedUnitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedUnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedUnitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedUnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("weightingRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WeightingRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineGroupingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineGroupingId { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping1Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping1Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping2Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping2Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping3Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping3Id { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjClauseLine> PrjClauseLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketViewLine> PrjMarketViewLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLineExtras", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLineExtra> PrjWorkingOutLineExtras { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLine> PrjWorkingOutLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketViewLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjMarketViewId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("percentage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Percentage { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketLine PrjMarketLine { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketView", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketView PrjMarketView { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketView
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("percentage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Percentage { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("isTask", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTask { get; set; }

        [Newtonsoft.Json.JsonProperty("isMarket", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelingLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkLevelingLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("pointsNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointsNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("pointsAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointsAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelingLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkLevelingLine StkLevelingLine { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewHierarchies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketViewHierarchy> PrjMarketViewHierarchies { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketViewLine> PrjMarketViewLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketViewHierarchy
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjMarketViewId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketHierarchyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjMarketHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketHierarchy PrjMarketHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketView", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketView PrjMarketView { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutViewHierarchies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutViewHierarchy> PrjWorkingOutViewHierarchies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketHierarchy
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTrancheLevelingDefinition StkHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViewHierarchies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketViewHierarchy> PrjMarketViewHierarchies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTrancheLevelingDefinition
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("parent", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTrancheLevelingDefinition Parent { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingPrjProjectProgressCriteriaLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingPrjProjectProgressCriteriaLine> BulMeetingPrjProjectProgressCriteriaLines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDays { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseParent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheLevelingDefinition> InverseParent { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketHierarchies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketHierarchy> PrjMarketHierarchies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjProjectBuildingPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDayTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhWorkedDayTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDayType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhWorkedDayType GrhWorkedDayType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhWorkedDayType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("groupDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GroupDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unity1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity1 { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt1 { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio1 { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDays { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectBuildingPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectBuildingPrevision> PrjProjectBuildingPrevisions { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhWorkedDay
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDayTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhWorkedDayTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity1 { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt1 { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInvoiceCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string StlInvoiceCode { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInvoiceProformaCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string StlInvoiceProformaCode { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheLevelingDefinitionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheLevelingDefinitionId { get; set; }

        [Newtonsoft.Json.JsonProperty("timeStart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TimeStart { get; set; }

        [Newtonsoft.Json.JsonProperty("timeEnd", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TimeEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("unity1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity1 { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio1 { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheLevelingDefinition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTrancheLevelingDefinition CfgTrancheLevelingDefinition { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDayType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhWorkedDayType GrhWorkedDayType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlItemPricing
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinitionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlItemDefinitionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlItemDefinition StlItemDefinition { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyLoanType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isSupplierFinancing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSupplierFinancing { get; set; }

        [Newtonsoft.Json.JsonProperty("isLeasing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsLeasing { get; set; }

        [Newtonsoft.Json.JsonProperty("baseStlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BaseStlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("interestStlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? InterestStlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionStlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CommissionStlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("baseStlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory BaseStlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionStlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory CommissionStlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("interestStlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory InterestStlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoan> BuyLoans { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyLoanSchedule
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amountBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountBase { get; set; }

        [Newtonsoft.Json.JsonProperty("interestRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InterestRate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountInterest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountInterest { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buySubLoanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySubLoanId { get; set; }

        [Newtonsoft.Json.JsonProperty("commision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Commision { get; set; }

        [Newtonsoft.Json.JsonProperty("amountBaseHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountBaseHt { get; set; }

        [Newtonsoft.Json.JsonProperty("baseVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("amountInterestHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountInterestHt { get; set; }

        [Newtonsoft.Json.JsonProperty("interestVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InterestVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("commisionHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommisionHt { get; set; }

        [Newtonsoft.Json.JsonProperty("commisionVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommisionVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPayHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPayHt { get; set; }

        [Newtonsoft.Json.JsonProperty("buySubLoan", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySubLoan BuySubLoan { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySubLoan
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("monthsCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MonthsCount { get; set; }

        [Newtonsoft.Json.JsonProperty("gracePeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? GracePeriod { get; set; }

        [Newtonsoft.Json.JsonProperty("monthsStep", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MonthsStep { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyLoanId { get; set; }

        [Newtonsoft.Json.JsonProperty("annualRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AnnualRate { get; set; }

        [Newtonsoft.Json.JsonProperty("amortizationDeferredDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AmortizationDeferredDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("totalDeferredDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? TotalDeferredDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("isMensualRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMensualRate { get; set; }

        [Newtonsoft.Json.JsonProperty("isActoriel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsActoriel { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoan", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyLoan BuyLoan { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanSchedules", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoanSchedule> BuyLoanSchedules { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyLoan
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("interestRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InterestRate { get; set; }

        [Newtonsoft.Json.JsonProperty("fees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fees { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("feesPrevention", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FeesPrevention { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyLoanTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("baseVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("commisionVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommisionVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("interestVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InterestVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultCommisionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultCommisionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosed { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyLoanType BuyLoanType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buySubLoans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySubLoan> BuySubLoans { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlAccountPosition
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("positionDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset PositionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("position", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Position { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("positionCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PositionCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSlipLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlipId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSlipId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlip", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSlip StlSlip { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSlip
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("emissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EmissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierEmissionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierEmissionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTransmissionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierTransmissionId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("transmissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TransmissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierEmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierEmission { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTransmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierTransmission { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDeposit { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlipLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlipLine> StlSlipLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySettlementLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSettlementDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSettlement ComSettlement { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSettlementLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComDocument ComDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSettlement ComSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSettlement
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlementDocumentToAttach> ComSettlementDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlementLine> ComSettlementLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActTier
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntryLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntryLine> ActEntryLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActEntryLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ActAccountCode { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ActAccountDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("amountDebit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountDebit { get; set; }

        [Newtonsoft.Json.JsonProperty("amountCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActEntryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntSettlementLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("actTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("actTierCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ActTierCode { get; set; }

        [Newtonsoft.Json.JsonProperty("actTierDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ActTierDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActEntry ActEntry { get; set; }

        [Newtonsoft.Json.JsonProperty("actTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActTier ActTier { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntSettlementLine RntSettlementLine { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntSettlementLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntDocument RntDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntSettlement RntSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntryLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntryLine> ActEntryLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntSettlement
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntSettlementLine> RntSettlementLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlAccountingEntry
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("docNumberRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocNumberRef { get; set; }

        [Newtonsoft.Json.JsonProperty("docLabel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocLabel { get; set; }

        [Newtonsoft.Json.JsonProperty("codeCountable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeCountable { get; set; }

        [Newtonsoft.Json.JsonProperty("codeCountableCollective", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeCountableCollective { get; set; }

        [Newtonsoft.Json.JsonProperty("codeCountableJournal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeCountableJournal { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("amountCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("amountDebit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountDebit { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSettlementHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("echeanceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EcheanceDate { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Reference { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlTransmissionSheet
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("emissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EmissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierEmissionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierEmissionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTransmissionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierTransmissionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierReceptionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierReceptionId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("transmissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TransmissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyFromId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyFromId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositFromId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositFromId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyToId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositToId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompanyFrom { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompanyTo { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierEmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierEmission { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierReception", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierReception { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTransmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierTransmission { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDepositFrom { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDepositTo { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheetLine> StlTransmissionSheetLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlTransmissionSheetLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlTransmissionSheetId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheet", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlTransmissionSheet StlTransmissionSheet { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSettlement
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("echeanceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EcheanceDate { get; set; }

        [Newtonsoft.Json.JsonProperty("settlementDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? SettlementDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Status { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBankId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgBankId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("tierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? TierId { get; set; }

        [Newtonsoft.Json.JsonProperty("tierType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TierType { get; set; }

        [Newtonsoft.Json.JsonProperty("category", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Category { get; set; }

        [Newtonsoft.Json.JsonProperty("categoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("itemNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("group1Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Group1Label { get; set; }

        [Newtonsoft.Json.JsonProperty("group2Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Group2Label { get; set; }

        [Newtonsoft.Json.JsonProperty("group3Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Group3Label { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("itemDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ItemDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("receiptCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ReceiptCode { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountPositionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountPositionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierOtherId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierOtherId { get; set; }

        [Newtonsoft.Json.JsonProperty("isDcoumentDeliveredToCenter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsDcoumentDeliveredToCenter { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgLawyerId { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveredToCenterDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveredToCenterDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountBase { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRs { get; set; }

        [Newtonsoft.Json.JsonProperty("rsRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RsRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("rsamountSettled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? RsamountSettled { get; set; }

        [Newtonsoft.Json.JsonProperty("tierPayerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? TierPayerId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanScheduleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyLoanScheduleId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySubLoanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySubLoanId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlInternalTransferId { get; set; }

        [Newtonsoft.Json.JsonProperty("rssettlementDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? RssettlementDate { get; set; }

        [Newtonsoft.Json.JsonProperty("rssheetCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RssheetCode { get; set; }

        [Newtonsoft.Json.JsonProperty("propositionSheetCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PropositionSheetCode { get; set; }

        [Newtonsoft.Json.JsonProperty("slipCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SlipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("slipDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? SlipDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccounted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccounted { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlipId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSlipId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("convertValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ConvertValue { get; set; }

        [Newtonsoft.Json.JsonProperty("amountBaseConverted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountBaseConverted { get; set; }

        [Newtonsoft.Json.JsonProperty("amountStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDepositId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAcountDepositId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyAffectationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyAffectationId { get; set; }

        [Newtonsoft.Json.JsonProperty("convertUnit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? ConvertUnit { get; set; }

        [Newtonsoft.Json.JsonProperty("buySettlementIdOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySettlementIdOld { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyLoanId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoan", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyLoan BuyLoan { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanSchedule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyLoanSchedule BuyLoanSchedule { get; set; }

        [Newtonsoft.Json.JsonProperty("buySubLoan", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySubLoan BuySubLoan { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBank", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgBank { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgLawyer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierOther", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierOther { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountPosition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccountPosition StlAccountPosition { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAcountDeposit StlAcountDeposit { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyAffectation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrencyAffectation { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDeposit { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransfer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlInternalTransfer StlInternalTransfer { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlip", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSlip StlSlip { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("tier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier Tier { get; set; }

        [Newtonsoft.Json.JsonProperty("tierPayer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier TierPayer { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("buySettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySettlementLine> BuySettlementLines { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlement> ComSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntSettlement> RntSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountingEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccountingEntry> StlAccountingEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlementHistory> StlSettlementHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlipLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlipLine> StlSlipLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheetLine> StlTransmissionSheetLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlInternalTransfer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyToId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountToId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeToId { get; set; }

        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Reference { get; set; }

        [Newtonsoft.Json.JsonProperty("referenceTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ReferenceTo { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierEmissionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierEmissionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTransmissionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierTransmissionId { get; set; }

        [Newtonsoft.Json.JsonProperty("transmissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TransmissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierReceptionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierReceptionId { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompanyTo { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierEmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierEmission { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierReception", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierReception { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTransmission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierTransmission { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccountTo { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementTypeTo { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSettlementKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isCashAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCashAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccount> StlAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeKinds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlementTypeKind> StlSettlementTypeKinds { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSettlementTypeKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementKind StlSettlementKind { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlTaxStampLevel
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("validationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ValidationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountMin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountMin { get; set; }

        [Newtonsoft.Json.JsonProperty("amountMax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountMax { get; set; }

        [Newtonsoft.Json.JsonProperty("amountStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSettlementType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isReferenceUnique", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsReferenceUnique { get; set; }

        [Newtonsoft.Json.JsonProperty("isReferenceMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsReferenceMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("isBankMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsBankMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("isNotContabilized", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsNotContabilized { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isTierUnique", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTierUnique { get; set; }

        [Newtonsoft.Json.JsonProperty("refFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RefFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("isLawyerMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsLawyerMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountCreditId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountCreditId { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountDebitId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountDebitId { get; set; }

        [Newtonsoft.Json.JsonProperty("isDeposit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsDeposit { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountCredit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccountCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountDebit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccountDebit { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultSettlement> ActDefaultSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellations { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferStlSettlementTypeTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferStlSettlementTypeTos { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferStlSettlementTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferStlSettlementTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlementHistory> StlSettlementHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeKinds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlementTypeKind> StlSettlementTypeKinds { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTaxStampLevels", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTaxStampLevel> StlTaxStampLevels { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActDefaultSettlement
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Status { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDeposit { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlDepositUser
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDeposit { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlDeposit
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isBank", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsBank { get; set; }

        [Newtonsoft.Json.JsonProperty("isSupplier", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("isCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultSettlement> ActDefaultSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDepositStlDepositTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAcountDeposit> StlAcountDepositStlDepositTos { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDepositStlDeposits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAcountDeposit> StlAcountDepositStlDeposits { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDepositUser> StlDepositUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlip> StlSlips { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetStlDepositFroms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheetStlDepositFroms { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetStlDepositTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheetStlDepositTos { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlAcountDeposit
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeClosingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeClosingId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDepositToId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountToId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("amountOpening", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountOpening { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeClosing", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployeeClosing { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccountTo { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDeposit { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDeposit StlDepositTo { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlPaymentAuthorizationLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlPaymentAuthorizationId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComDocument ComDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntDocument RntDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorization", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlPaymentAuthorization StlPaymentAuthorization { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlPaymentAuthorization
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierOtherId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierOtherId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDepositId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAcountDepositId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlRecoveryFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierOther", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierOther { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDeposit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAcountDeposit StlAcountDeposit { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlRecoveryFolder StlRecoveryFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorizationLine> StlPaymentAuthorizationLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlRecoveryFolderLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlRecoveryFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlRecoveryFolder StlRecoveryFolder { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlRecoveryFolder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("closingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClosingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgDebtManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollectorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgDebtCollectorId { get; set; }

        [Newtonsoft.Json.JsonProperty("statusValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StatusValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgDebtCollector { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgDebtManager { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> StlDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolderLine> StlRecoveryFolderLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntRevival
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRest { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComDocument ComDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntDocument RntDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlVentilationCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlDocument
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("maturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRegul", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRegul { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FiscalStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("docRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocRef { get; set; }

        [Newtonsoft.Json.JsonProperty("referenceType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ReferenceType { get; set; }

        [Newtonsoft.Json.JsonProperty("supplierDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SupplierDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("linesCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LinesCount { get; set; }

        [Newtonsoft.Json.JsonProperty("personToContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PersonToContact { get; set; }

        [Newtonsoft.Json.JsonProperty("notes1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes1 { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRefundedHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRefundedHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRefundedVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRefundedVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRefundedTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRefundedTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("totalHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalHt { get; set; }

        [Newtonsoft.Json.JsonProperty("totalVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalVat { get; set; }

        [Newtonsoft.Json.JsonProperty("totalTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("codeProforma", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeProforma { get; set; }

        [Newtonsoft.Json.JsonProperty("orderCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string OrderCode { get; set; }

        [Newtonsoft.Json.JsonProperty("isImported", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsImported { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccounted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccounted { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentAuthorizationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentAuthorizationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollectorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgDebtCollectorId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPenaltyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlPenaltyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlRecoveryFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgDebtCollector { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPenaltyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlPenaltyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlRecoveryFolder StlRecoveryFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlementLine> ComSettlementLines { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseStlPenaltyDocument", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> InverseStlPenaltyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("rntRevivals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntRevival> RntRevivals { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntSettlementLine> RntSettlementLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountingEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccountingEntry> StlAccountingEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocumentLine> StlDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorizationLine> StlPaymentAuthorizationLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlVentilationCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlVentilationCategory> StlVentilationCategories { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlDocumentLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("discountRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInvoiceLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlInvoiceLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHtnet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHtnet { get; set; }

        [Newtonsoft.Json.JsonProperty("totalHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalHt { get; set; }

        [Newtonsoft.Json.JsonProperty("totalVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalVat { get; set; }

        [Newtonsoft.Json.JsonProperty("totalTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComDocument ComDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntDocument RntDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInvoiceLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocumentLine StlInvoiceLine { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlItem StlItem { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseStlInvoiceLine", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocumentLine> InverseStlInvoiceLine { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("discountRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHtnet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHtnet { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("totalHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalHt { get; set; }

        [Newtonsoft.Json.JsonProperty("totalVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalVat { get; set; }

        [Newtonsoft.Json.JsonProperty("totalTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinitionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlItemDefinitionId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavServiceId { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavClaimGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavClaimGroup SavClaimGroup { get; set; }

        [Newtonsoft.Json.JsonProperty("savService", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavService SavService { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlItemDefinition StlItemDefinition { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocumentLine> StlDocumentLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlItemDefinition
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("reportDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string ReportDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("isInvoicable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsInvoicable { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlItemKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlItemGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlItemGroup StlItemGroup { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlItemKind StlItemKind { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemPricing> StlItemPricings { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItem> StlItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlItemKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("reportDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string ReportDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinitions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemDefinition> StlItemDefinitions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemGroup> StlItemGroups { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlItemGroup
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("reportDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string ReportDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlItemKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlItemKind StlItemKind { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinitions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemDefinition> StlItemDefinitions { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavService
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("closingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClosingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("priceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("priceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgServiceManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgServiceManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("savOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("statusValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StatusValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlItemGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgServiceManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgServiceManager { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("savOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavOrigin SavOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlItemGroup StlItemGroup { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItem> StlItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavOrigin
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaimGroup> SavClaimGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavClaimGroup
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("closingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClosingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isInReception", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsInReception { get; set; }

        [Newtonsoft.Json.JsonProperty("savOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("docRefDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocRefDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocRef { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WarrantyEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgClaimsManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgClaimsManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgClaimsManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgClaimsManager { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("savOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavOrigin SavOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItem> StlItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavServiceExpense
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavComplaintCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavComplaintTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceExpenseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ServiceExpenseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("folderExpenseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FolderExpenseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("priceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("priceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavComplaintCategory SavComplaintCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavComplaintType SavComplaintType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavComplaintType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavComplaintCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("resolutionDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? ResolutionDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavComplaintCategory SavComplaintCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavComplaintCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isForService", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForService { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavComplaintType> SavComplaintTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkItemContenance
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkContenanceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkContenanceId { get; set; }

        [Newtonsoft.Json.JsonProperty("option1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option1 { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithOption1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithOption1 { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOption1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? QuantityOption1 { get; set; }

        [Newtonsoft.Json.JsonProperty("option2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option2 { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithOption2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithOption2 { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOption2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? QuantityOption2 { get; set; }

        [Newtonsoft.Json.JsonProperty("option3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option3 { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithOption3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithOption3 { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOption3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? QuantityOption3 { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("itemsNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? ItemsNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("stkContenance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkContenance StkContenance { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkPresentationType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stkPresentationTypeContenances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkPresentationTypeContenance> StkPresentationTypeContenances { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkPresentationTypeContenance
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stkPresentationTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkPresentationTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkContenanceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkContenanceId { get; set; }

        [Newtonsoft.Json.JsonProperty("itemsNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? ItemsNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("option1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option1 { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithOption1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithOption1 { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOption1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? QuantityOption1 { get; set; }

        [Newtonsoft.Json.JsonProperty("option2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option2 { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithOption2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithOption2 { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOption2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? QuantityOption2 { get; set; }

        [Newtonsoft.Json.JsonProperty("option3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option3 { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithOption3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithOption3 { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOption3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? QuantityOption3 { get; set; }

        [Newtonsoft.Json.JsonProperty("stkContenance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkContenance StkContenance { get; set; }

        [Newtonsoft.Json.JsonProperty("stkPresentationType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkPresentationType StkPresentationType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkContenance
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("option1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option1 { get; set; }

        [Newtonsoft.Json.JsonProperty("isOption1WithQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOption1WithQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("option2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option2 { get; set; }

        [Newtonsoft.Json.JsonProperty("isOption2WithQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOption2WithQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("option3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Option3 { get; set; }

        [Newtonsoft.Json.JsonProperty("isOption3WithQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOption3WithQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimContenances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaimContenance> SavClaimContenances { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemContenances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemContenance> StkItemContenances { get; set; }

        [Newtonsoft.Json.JsonProperty("stkPresentationTypeContenances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkPresentationTypeContenance> StkPresentationTypeContenances { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavClaimContenance
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavClaimId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkContenanceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkContenanceId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaim", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavClaim SavClaim { get; set; }

        [Newtonsoft.Json.JsonProperty("stkContenance", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkContenance StkContenance { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SavClaim
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavClaimGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavComplaintCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavComplaintTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("statusValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StatusValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("interventionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? InterventionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("closingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClosingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("priceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("priceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketClaimId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketClaimId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketClaim", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarketClaim { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavClaimGroup SavClaimGroup { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavComplaintCategory SavComplaintCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavComplaintType SavComplaintType { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimContenances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaimContenance> SavClaimContenances { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrStatusIntervener
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strIntervenerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrIntervenerId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strIntervener", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrIntervener StrIntervener { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrWorkFlowIntervener
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strIntervenerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrIntervenerId { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("withPassword", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithPassword { get; set; }

        [Newtonsoft.Json.JsonProperty("strIntervener", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrIntervener StrIntervener { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrWorkFlow StrWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrIntervener
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("queryText", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string QueryText { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotificationInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrNotificationIntervener> StrNotificationInterveners { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrStatusIntervener> StrStatusInterveners { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowIntervener> StrWorkFlowInterveners { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrNotificationIntervener
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strIntervenerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrIntervenerId { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotificationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrNotificationId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strIntervener", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrIntervener StrIntervener { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrNotification StrNotification { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrNotification
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmReportId { get; set; }

        [Newtonsoft.Json.JsonProperty("groupedMail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? GroupedMail { get; set; }

        [Newtonsoft.Json.JsonProperty("afterAdd", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AfterAdd { get; set; }

        [Newtonsoft.Json.JsonProperty("afterUpDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AfterUpDate { get; set; }

        [Newtonsoft.Json.JsonProperty("afterDelete", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AfterDelete { get; set; }

        [Newtonsoft.Json.JsonProperty("subject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Subject { get; set; }

        [Newtonsoft.Json.JsonProperty("text", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Text { get; set; }

        [Newtonsoft.Json.JsonProperty("queryText", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string QueryText { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admReport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmReportDatum AdmReport { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotificationInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrNotificationIntervener> StrNotificationInterveners { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotificationWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrNotificationWorkFlow> StrNotificationWorkFlows { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrNotificationWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotificationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrNotificationId { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotification", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrNotification StrNotification { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrWorkFlow StrWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrAttachment
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowAttachments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowAttachment> StrWorkFlowAttachments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrWorkFlowAttachment
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strAttachmentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrAttachmentId { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strAttachment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrAttachment StrAttachment { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrWorkFlow StrWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrWorkFlowTierField
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strFieldId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrFieldId { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strField", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrField StrField { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrWorkFlow StrWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("statusFromId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StatusFromId { get; set; }

        [Newtonsoft.Json.JsonProperty("statusToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StatusToId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("withComment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithComment { get; set; }

        [Newtonsoft.Json.JsonProperty("withPassword", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithPassword { get; set; }

        [Newtonsoft.Json.JsonProperty("strFieldDateId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrFieldDateId { get; set; }

        [Newtonsoft.Json.JsonProperty("statusFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StatusFrom { get; set; }

        [Newtonsoft.Json.JsonProperty("statusTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StatusTo { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strFieldDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrField StrFieldDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotificationWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrNotificationWorkFlow> StrNotificationWorkFlows { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowAttachments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowAttachment> StrWorkFlowAttachments { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowField> StrWorkFlowFields { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowIntervener> StrWorkFlowInterveners { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowTierFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowTierField> StrWorkFlowTierFields { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrWorkFlowField
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strFieldId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrFieldId { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strField", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrField StrField { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrWorkFlow StrWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrField
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrStatusField> StrStatusFields { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowField> StrWorkFlowFields { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowTierFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlowTierField> StrWorkFlowTierFields { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlow> StrWorkFlows { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrStatusField
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strFieldId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrFieldId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strField", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrField StrField { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isReadOnly", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsReadOnly { get; set; }

        [Newtonsoft.Json.JsonProperty("canDelete", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanDelete { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField001", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField001 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField002", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField002 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField003", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField003 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField004", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField004 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField005", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField005 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField006", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField006 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField007", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField007 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField008", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField008 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField009", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField009 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField010", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField010 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField011", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField011 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField012", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField012 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField013", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField013 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField014", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField014 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField015", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField015 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField016", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField016 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField017", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField017 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField018", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField018 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField019", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField019 { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField020", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BoolField020 { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatusType StrStatusType { get; set; }

        [Newtonsoft.Json.JsonProperty("buyRequests", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyRequest> BuyRequests { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAdvances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhAdvance> GrhAdvances { get; set; }

        [Newtonsoft.Json.JsonProperty("grhCredits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhCredit> GrhCredits { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDisciplines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhDiscipline> GrhDisciplines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhOverTimes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhOverTime> GrhOverTimes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhResignations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhResignation> GrhResignations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhTerminations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhTermination> GrhTerminations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacationGroup> GrhVacationGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacation> GrhVacations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDays { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransfers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransfers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlip> StlSlips { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheets { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrStatusField> StrStatusFields { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrStatusIntervener> StrStatusInterveners { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowStatusFroms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlow> StrWorkFlowStatusFroms { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlowStatusTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlow> StrWorkFlowStatusTos { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyRequest
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("orderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? OrderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isPrivate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPrivate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySelectionLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySelection BuySelection { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySelectionStockLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySelection BuySelection { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketLineEstimation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("weightingRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WeightingRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineGroupingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineGroupingId { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping1Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping1Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping2Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping2Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping3Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping3Id { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationEstimationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationEstimationLine> BuyConsultationEstimationLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationLine> BuyConsultationLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentLine> BuyDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyRequests", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyRequest> BuyRequests { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionLine> BuySelectionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionStockLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionStockLine> BuySelectionStockLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineEstimations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLineEstimation> PrjMarketLineEstimations { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLine> PrjMarketLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLine> PrjWorkingOutLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("discountRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? QuantityOld { get; set; }

        [Newtonsoft.Json.JsonProperty("quantityOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? QuantityOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("coefficient", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Coefficient { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyItem BuyItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntReconductionHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityBeginDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PeriodicityBeginDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PeriodicityEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderClauseRntDocument
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PeriodDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("dayNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DayNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("vatExonorationNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? VatExonorationNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FiscalStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionHistoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntReconductionHistoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderClauseId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderClause RntFolderClause { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderClause
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("usage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Usage { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PeriodicityReconductionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionFrequency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityReconductionFrequency { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntReconductionTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("effectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EffectiveDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsValidated { get; set; }

        [Newtonsoft.Json.JsonProperty("nextAugmentationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? NextAugmentationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderClauseLine> RntFolderClauseLines { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauseRntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderClauseRntDocument> RntFolderClauseRntDocuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderClauseLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PeriodDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("dayNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DayNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("vatExonorationNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? VatExonorationNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FiscalStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderClauseId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderClause RntFolderClause { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntSettlementCategory RntSettlementCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolderClauseRntDocument
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PeriodDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("dayNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DayNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("vatExonorationNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? VatExonorationNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FiscalStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionHistoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntReconductionHistoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderClauseId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderClause SynFolderClause { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolderClause
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("usage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Usage { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PeriodicityReconductionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionFrequency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityReconductionFrequency { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntReconductionTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("effectiveDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EffectiveDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsValidated { get; set; }

        [Newtonsoft.Json.JsonProperty("nextAugmentationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? NextAugmentationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderClauseLine> SynFolderClauseLines { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauseRntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderClauseRntDocument> SynFolderClauseRntDocuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolderClauseLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PeriodDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("dayNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DayNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("vatExonorationNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? VatExonorationNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FiscalStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderClauseId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntSettlementCategory RntSettlementCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderClause SynFolderClause { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntSettlementCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentCaution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentCaution { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentExpense", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentExpense { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentResiliation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentResiliation { get; set; }

        [Newtonsoft.Json.JsonProperty("isSyndic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSyndic { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("canGenerateDocument", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanGenerateDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("withFiscalStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithFiscalStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("reportDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string ReportDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithReversment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithReversment { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderClauseLine> RntFolderClauseLines { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderClauseLine> SynFolderClauseLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntDocument
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PeriodDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("dayNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DayNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("vatExonorationNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? VatExonorationNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAgreementAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAgreementAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAdjustmentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAdjustmentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionHistoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntReconductionHistoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("amountInvoicedCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountInvoicedCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("amountInvoicedRestTtccalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountInvoicedRestTtccalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountInvoicedRestCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountInvoicedRestCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountInvoicedRestCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountInvoicedRestCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalStampCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FiscalStampCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPayCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPayCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("amountDocumentSettledCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountDocumentSettledCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("amountInvoiceSettledCalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountInvoiceSettledCalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRefundedHtcalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRefundedHtcalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRefundedTtccalculated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRefundedTtccalculated { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollectorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgDebtCollectorId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlRecoveryFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentLine BuyDocumentLine { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgDebtCollector { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionHistory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntReconductionHistory RntReconductionHistory { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntSettlementCategory RntSettlementCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlRecoveryFolder StlRecoveryFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntRevivals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntRevival> RntRevivals { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntSettlementLine> RntSettlementLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocumentLine> StlDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorizationLine> StlPaymentAuthorizationLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntPeriodicity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("monthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderClauseLine> RntFolderClauseLines { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauseRntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderClauseRntDocument> RntFolderClauseRntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderRntPeriodicities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolderRntPeriodicities { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderRntPeriodicityReverses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolderRntPeriodicityReverses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderClauseLine> SynFolderClauseLines { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauseRntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderClauseRntDocument> SynFolderClauseRntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntReconductionType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isAuto", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAuto { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolderWorkFlowAdmRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderWorkFlow SynFolderWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolderWorkFlowDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderWorkFlow SynFolderWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolderWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatusStartId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderStatusStartId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatusEndId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderStatusEndId { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatusEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderStatus SynFolderStatusEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatusStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderStatus SynFolderStatusStart { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderWorkFlowAdmRole> SynFolderWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderWorkFlowDocumentToAttach> SynFolderWorkFlowDocumentToAttaches { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolderStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isAsyndic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAsyndic { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("tierMandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string TierMandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmWorkFlowStateTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosing { get; set; }

        [Newtonsoft.Json.JsonProperty("isCancellation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWorkFlowStateType AdmWorkFlowStateType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgImage CfgImage { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlowSynFolderStatusEnds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderWorkFlow> SynFolderWorkFlowSynFolderStatusEnds { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlowSynFolderStatusStarts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderWorkFlow> SynFolderWorkFlowSynFolderStatusStarts { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynFolder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatusId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid SynFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemArea { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemSyndicHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemSyndicHt { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemSyndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemSyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemSyndicTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemSyndicTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercialId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCommercialId { get; set; }

        [Newtonsoft.Json.JsonProperty("isInvoiceCustomerGroupping", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsInvoiceCustomerGroupping { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("usage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Usage { get; set; }

        [Newtonsoft.Json.JsonProperty("contact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Contact { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PeriodicityReconductionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionFrequency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityReconductionFrequency { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityBeginDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PeriodicityBeginDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PeriodicityEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntReconductionTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicMonthAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicMonthAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicMonthAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicMonthAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicPeriodAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicPeriodAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicPeriodAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicPeriodAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicYearAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicYearAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicYearAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicYearAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgLawyerId { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementDate1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementDate1 { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementDate2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementDate2 { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDateReal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDateReal { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementSavingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementSavingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? InsuranceDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CancelDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CancelAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CancelDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("isSynPricing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSynPricing { get; set; }

        [Newtonsoft.Json.JsonProperty("nextAugmentationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? NextAugmentationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("lawyerTransmissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LawyerTransmissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("startContentiousDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartContentiousDate { get; set; }

        [Newtonsoft.Json.JsonProperty("lastLetterOfIncreaseDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastLetterOfIncreaseDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierBailiffId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierBailiffId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercial", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCommercial { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgLawyer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierBailiff", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierBailiff { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntReconductionType RntReconductionType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderStatus SynFolderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("actTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActTier> ActTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntReconductionHistory> RntReconductionHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItem> StlItems { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderClauses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderClause> SynFolderClauses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderStatusHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalClientId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalProductId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalCancellationId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalCancellation ComSaleWithdrawalCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClient", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalClient ComSaleWithdrawalClient { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProduct", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalProduct ComSaleWithdrawalProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderStatus RntFolderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolderStatus SynFolderStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderStatusDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderStatus RntFolderStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderWorkFlowAdmRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderWorkFlow RntFolderWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderWorkFlowDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderWorkFlow RntFolderWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusStartId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderStatusStartId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusEndId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderStatusEndId { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notesMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? NotesMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withNotification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithNotification { get; set; }

        [Newtonsoft.Json.JsonProperty("sendEmailToUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SendEmailToUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderStatus RntFolderStatusEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderStatus RntFolderStatusStart { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderWorkFlowAdmRole> RntFolderWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderWorkFlowDocumentToAttach> RntFolderWorkFlowDocumentToAttaches { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isArent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsArent { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("tierMandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string TierMandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmWorkFlowStateTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosing { get; set; }

        [Newtonsoft.Json.JsonProperty("isCancellation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailableForProspection", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAvailableForProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailableForRentInWebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAvailableForRentInWebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWorkFlowStateType AdmWorkFlowStateType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgImage CfgImage { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderStatusDocumentToAttach> RntFolderStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowRntFolderStatusEnds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderWorkFlow> RntFolderWorkFlowRntFolderStatusEnds { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowRntFolderStatusStarts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderWorkFlow> RntFolderWorkFlowRntFolderStatusStarts { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid RntFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemArea { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemRentHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemRentHt { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemRentVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemRentVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemRentTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StkItemRentTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercialId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCommercialId { get; set; }

        [Newtonsoft.Json.JsonProperty("isInvoiceCustomerGroupping", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsInvoiceCustomerGroupping { get; set; }

        [Newtonsoft.Json.JsonProperty("usage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Usage { get; set; }

        [Newtonsoft.Json.JsonProperty("contact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Contact { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PeriodicityReconductionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityReconductionFrequency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityReconductionFrequency { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityBeginDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PeriodicityBeginDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PeriodicityEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntReconductionTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cautionMonthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CautionMonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("cautionVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CautionVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("cautionAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CautionAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("cautionAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CautionAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentSyndicGroupping", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentSyndicGroupping { get; set; }

        [Newtonsoft.Json.JsonProperty("rentVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("rentMonthAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentMonthAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentMonthAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentMonthAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("rentPeriodAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentPeriodAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentPeriodAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentPeriodAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("rentYearAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentYearAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentYearAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentYearAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicMonthAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicMonthAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicMonthAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicMonthAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicPeriodAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicPeriodAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicPeriodAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicPeriodAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicYearAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicYearAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicYearAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicYearAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgLawyerId { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementDate1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementDate1 { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementDate2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementDate2 { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDateReal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDateReal { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementSavingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementSavingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? InsuranceDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CancelDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CancelAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CancelDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("isSynPricing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSynPricing { get; set; }

        [Newtonsoft.Json.JsonProperty("nextAugmentationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? NextAugmentationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isImported", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsImported { get; set; }

        [Newtonsoft.Json.JsonProperty("lawyerTransmissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LawyerTransmissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("startContentiousDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartContentiousDate { get; set; }

        [Newtonsoft.Json.JsonProperty("lastLetterOfIncreaseDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastLetterOfIncreaseDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierBailiffId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierBailiffId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwnerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgOwnerId { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommissionRate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityReverseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityReverseId { get; set; }

        [Newtonsoft.Json.JsonProperty("isReversmentBasedOnPayment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsReversmentBasedOnPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceMonthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceMonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionMonthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommissionMonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("registrationFees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RegistrationFees { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercial", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCommercial { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgLawyer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwner", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgOwner { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierBailiff", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierBailiff { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolderStatus RntFolderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityReverse", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicityReverse { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntReconductionType RntReconductionType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("actTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActTier> ActTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderClauses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderClause> RntFolderClauses { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("rntReconductionHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntReconductionHistory> RntReconductionHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaimGroup> SavClaimGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItem> StlItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkHierarchyPath
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("svgPath", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SvgPath { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFloorId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFloor StkFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkHierarchyPlan
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("planImage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PlanImage { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFloorId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("width", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Width { get; set; }

        [Newtonsoft.Json.JsonProperty("height", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Height { get; set; }

        [Newtonsoft.Json.JsonProperty("x", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? X { get; set; }

        [Newtonsoft.Json.JsonProperty("y", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Y { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFloor StkFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFloor
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductNewUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductNewUnderItem> ComSaleWithdrawalProductNewUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductUnderItem> ComSaleWithdrawalProductUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyPaths", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkHierarchyPath> StkHierarchyPaths { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyPlans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkHierarchyPlan> StkHierarchyPlans { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkCostCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOrientationId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFloorId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuildingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkBuildingId { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("alwaysAffected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AlwaysAffected { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItemOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItemOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("contenance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Contenance { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("areaFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("rentVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("rentAmountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RentAmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuilding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkBuilding StkBuilding { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkCostCategory StkCostCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFloor StkFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkOrientation StkOrientation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkCostCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comOfferItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOfferItem> ComOfferItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductNewUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductNewUnderItem> ComSaleWithdrawalProductNewUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductUnderItem> ComSaleWithdrawalProductUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("prjCoefficientCosts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjCoefficientCost> PrjCoefficientCosts { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalProductUnderItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("contenance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Contenance { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("areaFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("alwaysAffected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AlwaysAffected { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItemOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItemOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkCostCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOrientationId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuildingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkBuildingId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFloorId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalProductId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProduct", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalProduct ComSaleWithdrawalProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuilding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkBuilding StkBuilding { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkCostCategory StkCostCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFloor StkFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkOrientation StkOrientation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkBuilding
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductNewUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductNewUnderItem> ComSaleWithdrawalProductNewUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductUnderItem> ComSaleWithdrawalProductUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalProductNewUnderItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("contenance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Contenance { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("areaFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("alwaysAffected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AlwaysAffected { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItemOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItemOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkCostCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOrientationId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuildingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkBuildingId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFloorId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalProductId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProduct", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalProduct ComSaleWithdrawalProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuilding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkBuilding StkBuilding { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkCostCategory StkCostCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFloor StkFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkOrientation StkOrientation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkOrientation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductNewUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductNewUnderItem> ComSaleWithdrawalProductNewUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductUnderItem> ComSaleWithdrawalProductUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrvTurnoverPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrvTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("prvVersionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrvVersionId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("prvType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrvType PrvType { get; set; }

        [Newtonsoft.Json.JsonProperty("prvVersion", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrvVersion PrvVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrvVersion
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prvSettlementPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvSettlementPrevision> PrvSettlementPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTurnoverPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvTurnoverPrevision> PrvTurnoverPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudy> StkFeasibilityStudies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrvSettlementPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrvTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("prvVersionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrvVersionId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("prvType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrvType PrvType { get; set; }

        [Newtonsoft.Json.JsonProperty("prvVersion", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrvVersion PrvVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrvType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prvSettlementPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvSettlementPrevision> PrvSettlementPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTurnoverPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvTurnoverPrevision> PrvTurnoverPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudy> StkFeasibilityStudies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyStatusDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyStatus StkFeasibilityStudyStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyStatusHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudy StkFeasibilityStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyStatus StkFeasibilityStudyStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyWorkFlowAdmRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("workFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? WorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("workFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyWorkFlow WorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyWorkFlowDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyWorkFlow StkFeasibilityStudyWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("startStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StartStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("endStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? EndStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("notesMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? NotesMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("withNotification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithNotification { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sendEmailToUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SendEmailToUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("endStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyStatus EndStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("startStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyStatus StartStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyWorkFlowAdmRole> StkFeasibilityStudyWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyWorkFlowDocumentToAttach> StkFeasibilityStudyWorkFlowDocumentToAttaches { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmWorkFlowStateTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWorkFlowStateType AdmWorkFlowStateType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgImage CfgImage { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudy> StkFeasibilityStudies { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyStatusDocumentToAttach> StkFeasibilityStudyStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyStatusHistory> StkFeasibilityStudyStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlowEndStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyWorkFlow> StkFeasibilityStudyWorkFlowEndStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlowStartStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyWorkFlow> StkFeasibilityStudyWorkFlowStartStatuses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Fsreimbursement
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountBase { get; set; }

        [Newtonsoft.Json.JsonProperty("amountInterest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountInterest { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("interestRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InterestRate { get; set; }

        [Newtonsoft.Json.JsonProperty("fsfundingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FsfundingId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("fsfunding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Fsfunding Fsfunding { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Fsfunding
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("monthsCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MonthsCount { get; set; }

        [Newtonsoft.Json.JsonProperty("monthsStep", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MonthsStep { get; set; }

        [Newtonsoft.Json.JsonProperty("gracePeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? GracePeriod { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("chargeRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ChargeRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudy FeasibilityStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("fsreimbursements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Fsreimbursement> Fsreimbursements { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketPrevisionModelLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("pointTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointTime { get; set; }

        [Newtonsoft.Json.JsonProperty("pointAchivement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointAchivement { get; set; }

        [Newtonsoft.Json.JsonProperty("pointPayment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPrevisionModelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketPrevisionModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPrevisionModel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketPrevisionModel PrjMarketPrevisionModel { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketPrevisionModel
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("fsprevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Fsprevision> Fsprevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPrevisionModelLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketPrevisionModelLine> PrjMarketPrevisionModelLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class Fsprevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ratio { get; set; }

        [Newtonsoft.Json.JsonProperty("note", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Note { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("globalRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? GlobalRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? UnityId { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("undivided", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Undivided { get; set; }

        [Newtonsoft.Json.JsonProperty("applyOnDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ApplyOnDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isForProject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForProject { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPrevisionModelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketPrevisionModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudy FeasibilityStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPrevisionModel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketPrevisionModel PrjMarketPrevisionModel { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SpecificFunction
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isTotal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTotal { get; set; }

        [Newtonsoft.Json.JsonProperty("saleAbleArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SaleAbleArea { get; set; }

        [Newtonsoft.Json.JsonProperty("coveredArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CoveredArea { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("areaBrut", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AreaBrut { get; set; }

        [Newtonsoft.Json.JsonProperty("areaCos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AreaCos { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsbaseUnits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFsbaseUnit> StkFsbaseUnits { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFsbaseUnit
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("isArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsArea { get; set; }

        [Newtonsoft.Json.JsonProperty("specificFunctionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SpecificFunctionId { get; set; }

        [Newtonsoft.Json.JsonProperty("specificFunction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SpecificFunction SpecificFunction { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsbaseUnitStkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFsbaseUnitStkFeasibilityStudy> StkFsbaseUnitStkFeasibilityStudies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFsbaseUnitStkFeasibilityStudy
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsbaseUnitId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFsbaseUnitId { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudy FeasibilityStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsbaseUnit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFsbaseUnit StkFsbaseUnit { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTrancheStkBaseUnits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyCfgTrancheStkBaseUnit> StkFeasibilityStudyCfgTrancheStkBaseUnits { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyCfgTrancheStkBaseUnit
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBaseUnitId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkBaseUnitId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyCfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Weight { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBaseUnit", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFsbaseUnitStkFeasibilityStudy StkBaseUnit { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyCfgTranche StkFeasibilityStudyCfgTranche { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFsprevisionLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("dateMonth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DateMonth { get; set; }

        [Newtonsoft.Json.JsonProperty("dateYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DateYear { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyCfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PrevisionType { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyCfgTranche StkFeasibilityStudyCfgTranche { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFsprevisionStkTranche
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ratio { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("undivided", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Undivided { get; set; }

        [Newtonsoft.Json.JsonProperty("stkTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyCfgTranche StkTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudyCfgTranche
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FeasibilityStudyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("workStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MarketingStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDateConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDateConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("startDateFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDateFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MarketingEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("occupancyPermitsDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? OccupancyPermitsDate { get; set; }

        [Newtonsoft.Json.JsonProperty("weight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Weight { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("feasibilityStudy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudy FeasibilityStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTrancheStkBaseUnits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyCfgTrancheStkBaseUnit> StkFeasibilityStudyCfgTrancheStkBaseUnits { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsprevisionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFsprevisionLine> StkFsprevisionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsprevisionStkTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFsprevisionStkTranche> StkFsprevisionStkTranches { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFeasibilityStudy
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("occupationSolRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OccupationSolRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("occupationGroundArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OccupationGroundArea { get; set; }

        [Newtonsoft.Json.JsonProperty("cuf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Cuf { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCoveredArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCoveredArea { get; set; }

        [Newtonsoft.Json.JsonProperty("coefSaleableArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CoefSaleableArea { get; set; }

        [Newtonsoft.Json.JsonProperty("salableArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalableArea { get; set; }

        [Newtonsoft.Json.JsonProperty("noBuiltArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NoBuiltArea { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseUnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PurchaseUnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("priceArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceArea { get; set; }

        [Newtonsoft.Json.JsonProperty("registryCostsRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RegistryCostsRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("registryCosts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RegistryCosts { get; set; }

        [Newtonsoft.Json.JsonProperty("otherCostsLandRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherCostsLandRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("otherCostsLand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherCostsLand { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCostLand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCostLand { get; set; }

        [Newtonsoft.Json.JsonProperty("unitCostConstructionBuilt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitCostConstructionBuilt { get; set; }

        [Newtonsoft.Json.JsonProperty("costAreaBuilt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CostAreaBuilt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitCostConstructionNoBuilt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitCostConstructionNoBuilt { get; set; }

        [Newtonsoft.Json.JsonProperty("costAreaNoBuilt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CostAreaNoBuilt { get; set; }

        [Newtonsoft.Json.JsonProperty("otherCostsExecution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherCostsExecution { get; set; }

        [Newtonsoft.Json.JsonProperty("otherCostsExecutionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherCostsExecutionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCostExecution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCostExecution { get; set; }

        [Newtonsoft.Json.JsonProperty("unitBackCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitBackCost { get; set; }

        [Newtonsoft.Json.JsonProperty("unitSalePrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitSalePrice { get; set; }

        [Newtonsoft.Json.JsonProperty("turnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Turnover { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PercentageConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("finalizationAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FinalizationAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("conretisationAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ConretisationAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("startDateExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDateExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("endDateExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDateExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("startDateConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDateConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("endDateConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDateConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("startDateFinalization", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDateFinalization { get; set; }

        [Newtonsoft.Json.JsonProperty("endDateFinalization", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDateFinalization { get; set; }

        [Newtonsoft.Json.JsonProperty("startDatePeriodeOfValidation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDatePeriodeOfValidation { get; set; }

        [Newtonsoft.Json.JsonProperty("endDatePeriodeOfValidation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDatePeriodeOfValidation { get; set; }

        [Newtonsoft.Json.JsonProperty("startDatePermissionBatir", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDatePermissionBatir { get; set; }

        [Newtonsoft.Json.JsonProperty("endDatePermissionBatir", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDatePermissionBatir { get; set; }

        [Newtonsoft.Json.JsonProperty("startDateStudy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDateStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("endDateStudy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDateStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("ecartTypeExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EcartTypeExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("ecartTypeConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EcartTypeConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("ecartTypeFinalization", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EcartTypeFinalization { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCostFunding", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCostFunding { get; set; }

        [Newtonsoft.Json.JsonProperty("backGuaranteeRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BackGuaranteeRate { get; set; }

        [Newtonsoft.Json.JsonProperty("backGuaranteeApplicationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BackGuaranteeApplicationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("backTimeOnDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? BackTimeOnDays { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLandId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndLandId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("numberOfItemForSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NumberOfItemForSale { get; set; }

        [Newtonsoft.Json.JsonProperty("autofinancementRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AutofinancementRate { get; set; }

        [Newtonsoft.Json.JsonProperty("clientfinancementRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ClientfinancementRate { get; set; }

        [Newtonsoft.Json.JsonProperty("creditfinancementRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CreditfinancementRate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("isratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Isratio { get; set; }

        [Newtonsoft.Json.JsonProperty("isamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Isamount { get; set; }

        [Newtonsoft.Json.JsonProperty("netProfitMargin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NetProfitMargin { get; set; }

        [Newtonsoft.Json.JsonProperty("grossProfitMargin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? GrossProfitMargin { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCost { get; set; }

        [Newtonsoft.Json.JsonProperty("autofinancementAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AutofinancementAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("profitRatioByProjectCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProfitRatioByProjectCost { get; set; }

        [Newtonsoft.Json.JsonProperty("profitRatioByTurnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProfitRatioByTurnover { get; set; }

        [Newtonsoft.Json.JsonProperty("profitRatioByAutofinancementAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProfitRatioByAutofinancementAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCostExecutionHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCostExecutionHt { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCostHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCostHt { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultVat { get; set; }

        [Newtonsoft.Json.JsonProperty("equipementsCoef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EquipementsCoef { get; set; }

        [Newtonsoft.Json.JsonProperty("equipementsAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EquipementsAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("interestVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InterestVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("landDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string LandDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("startDatePurchaseLand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDatePurchaseLand { get; set; }

        [Newtonsoft.Json.JsonProperty("endDatePurchaseLand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDatePurchaseLand { get; set; }

        [Newtonsoft.Json.JsonProperty("delayPurchaseLand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayPurchaseLand { get; set; }

        [Newtonsoft.Json.JsonProperty("delayPeriodeOfValidation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayPeriodeOfValidation { get; set; }

        [Newtonsoft.Json.JsonProperty("delayPermissionBatir", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayPermissionBatir { get; set; }

        [Newtonsoft.Json.JsonProperty("delayStudy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("delayExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("delayConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("delayFinalization", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayFinalization { get; set; }

        [Newtonsoft.Json.JsonProperty("delayEndDatePurchaseLandStartDatePeriodeOfValidation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayEndDatePurchaseLandStartDatePeriodeOfValidation { get; set; }

        [Newtonsoft.Json.JsonProperty("delayEndDatePeriodeOfValidationStartDatePermissionBatir", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayEndDatePeriodeOfValidationStartDatePermissionBatir { get; set; }

        [Newtonsoft.Json.JsonProperty("delayStartDatePermissionBatirStartDateStudy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayStartDatePermissionBatirStartDateStudy { get; set; }

        [Newtonsoft.Json.JsonProperty("delayEndDatePermissionBatirStartDateExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayEndDatePermissionBatirStartDateExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("delayStartDateExpenseStartDateConcretisations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayStartDateExpenseStartDateConcretisations { get; set; }

        [Newtonsoft.Json.JsonProperty("delayStartDateExpenseStartDateFinalization", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayStartDateExpenseStartDateFinalization { get; set; }

        [Newtonsoft.Json.JsonProperty("landVatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? LandVatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("priceAreaHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceAreaHt { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseUnitCostHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PurchaseUnitCostHt { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseUnitCostVatAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PurchaseUnitCostVatAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("priceAreaVatAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceAreaVatAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("registryCostsHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RegistryCostsHt { get; set; }

        [Newtonsoft.Json.JsonProperty("registryCostsVatAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RegistryCostsVatAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("otherCostsExecutionHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherCostsExecutionHt { get; set; }

        [Newtonsoft.Json.JsonProperty("otherCostsExecutionVatAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherCostsExecutionVatAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFeasibilityStudyStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("useLandProportionForTvacalculation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? UseLandProportionForTvacalculation { get; set; }

        [Newtonsoft.Json.JsonProperty("isLocked", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsLocked { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrvTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prvVersionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrvVersionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLand", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndLand LndLand { get; set; }

        [Newtonsoft.Json.JsonProperty("prvType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrvType PrvType { get; set; }

        [Newtonsoft.Json.JsonProperty("prvVersion", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrvVersion PrvVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFeasibilityStudyStatus StkFeasibilityStudyStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("fsfundings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Fsfunding> Fsfundings { get; set; }

        [Newtonsoft.Json.JsonProperty("fsprevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Fsprevision> Fsprevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyCfgTranche> StkFeasibilityStudyCfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyStatusHistory> StkFeasibilityStudyStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsbaseUnitStkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFsbaseUnitStkFeasibilityStudy> StkFsbaseUnitStkFeasibilityStudies { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class LndLand
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("anomalies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Anomalies { get; set; }

        [Newtonsoft.Json.JsonProperty("adress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Adress { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("cos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Cos { get; set; }

        [Newtonsoft.Json.JsonProperty("cuf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Cuf { get; set; }

        [Newtonsoft.Json.JsonProperty("alinmentStop", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AlinmentStop { get; set; }

        [Newtonsoft.Json.JsonProperty("maxHeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxHeight { get; set; }

        [Newtonsoft.Json.JsonProperty("registryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? RegistryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("registryNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RegistryNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("registryPlace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RegistryPlace { get; set; }

        [Newtonsoft.Json.JsonProperty("immatriculationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ImmatriculationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("immatriculationCpf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ImmatriculationCpf { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PurchaseDate { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseUnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PurchaseUnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PurchaseCost { get; set; }

        [Newtonsoft.Json.JsonProperty("lndCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("lndTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("lndVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndLevelId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDelegationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgDelegationId { get; set; }

        [Newtonsoft.Json.JsonProperty("isInArchive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsInArchive { get; set; }

        [Newtonsoft.Json.JsonProperty("prospectionUnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProspectionUnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("prospectionPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProspectionPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("prospectionPriceProposed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProspectionPriceProposed { get; set; }

        [Newtonsoft.Json.JsonProperty("owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Owner { get; set; }

        [Newtonsoft.Json.JsonProperty("unitCostNonBuiltPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitCostNonBuiltPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("statusValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StatusValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgMiddlemanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgMiddlemanId { get; set; }

        [Newtonsoft.Json.JsonProperty("areaCos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaCos { get; set; }

        [Newtonsoft.Json.JsonProperty("areaCuf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaCuf { get; set; }

        [Newtonsoft.Json.JsonProperty("equipementsCoef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EquipementsCoef { get; set; }

        [Newtonsoft.Json.JsonProperty("equipementsArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EquipementsArea { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("salableArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalableArea { get; set; }

        [Newtonsoft.Json.JsonProperty("coefSaleableArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CoefSaleableArea { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCityId { get; set; }

        [Newtonsoft.Json.JsonProperty("gmapLink", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string GmapLink { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgLawyerId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOrientationId { get; set; }

        [Newtonsoft.Json.JsonProperty("isTransformedToLand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTransformedToLand { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCity AdmCity { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDelegation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgDelegation CfgDelegation { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgLawyer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgMiddleman", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgMiddleman { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("lndCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory LndCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndLevel LndLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("lndType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType LndType { get; set; }

        [Newtonsoft.Json.JsonProperty("lndVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndVocation LndVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkOrientation StkOrientation { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudy> StkFeasibilityStudies { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkFacade
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTrancheStkItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ratio { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComCommission
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isValidated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsValidated { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("toDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ToDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("isDelivery", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsDelivery { get; set; }

        [Newtonsoft.Json.JsonProperty("isDelivery2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsDelivery2 { get; set; }

        [Newtonsoft.Json.JsonProperty("isCancellation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComCommissionLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComCommissionId { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CommissionType { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommissionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("calculationMethod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CalculationMethod { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommission", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComCommission ComCommission { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionProject
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkExpenseType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketType PrjMarketType { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkExpense> StkExpenses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkExpense
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("isValidated", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool IsValidated { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpenseTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkExpenseTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpenseType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkExpenseType StkExpenseType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkVue
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemVues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemVue> StkItemVues { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkItemVue
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVueId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVueId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVue StkVue { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynPricing
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("synPricingItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynPricingItem> SynPricingItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class SynPricingItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("synPricingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynPricingId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("synPricing", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynPricing SynPricing { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleUnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSaleUnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleMinAdvance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSaleMinAdvance { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalePrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSalePrice { get; set; }

        [Newtonsoft.Json.JsonProperty("salePrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalePrice { get; set; }

        [Newtonsoft.Json.JsonProperty("contenance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Contenance { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNetOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNetOld { get; set; }

        [Newtonsoft.Json.JsonProperty("areaFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("alwaysAffected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AlwaysAffected { get; set; }

        [Newtonsoft.Json.JsonProperty("electricityRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string ElectricityRef { get; set; }

        [Newtonsoft.Json.JsonProperty("electricityMeter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string ElectricityMeter { get; set; }

        [Newtonsoft.Json.JsonProperty("electricityMeterIndex", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string ElectricityMeterIndex { get; set; }

        [Newtonsoft.Json.JsonProperty("electricityMeterPolice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string ElectricityMeterPolice { get; set; }

        [Newtonsoft.Json.JsonProperty("gasMeter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string GasMeter { get; set; }

        [Newtonsoft.Json.JsonProperty("gasMeterIndex", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string GasMeterIndex { get; set; }

        [Newtonsoft.Json.JsonProperty("gasMeterPolice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string GasMeterPolice { get; set; }

        [Newtonsoft.Json.JsonProperty("waterMeterPolice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string WaterMeterPolice { get; set; }

        [Newtonsoft.Json.JsonProperty("waterMeter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string WaterMeter { get; set; }

        [Newtonsoft.Json.JsonProperty("waterMeterIndex", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string WaterMeterIndex { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("anomalies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Anomalies { get; set; }

        [Newtonsoft.Json.JsonProperty("cos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Cos { get; set; }

        [Newtonsoft.Json.JsonProperty("cuf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Cuf { get; set; }

        [Newtonsoft.Json.JsonProperty("alinmentStop", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AlinmentStop { get; set; }

        [Newtonsoft.Json.JsonProperty("neighborStop", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NeighborStop { get; set; }

        [Newtonsoft.Json.JsonProperty("maxHeight", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxHeight { get; set; }

        [Newtonsoft.Json.JsonProperty("registryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? RegistryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("registryNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RegistryNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("registryPlace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RegistryPlace { get; set; }

        [Newtonsoft.Json.JsonProperty("immatriculationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ImmatriculationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("immatriculationCpf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ImmatriculationCpf { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PurchaseDate { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseUnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PurchaseUnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("purchaseCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PurchaseCost { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("cautionNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CautionNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkCostCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkKindId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkPresentationTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkPresentationTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("waterRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string WaterRef { get; set; }

        [Newtonsoft.Json.JsonProperty("gasRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GasRef { get; set; }

        [Newtonsoft.Json.JsonProperty("titleNumberMother", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TitleNumberMother { get; set; }

        [Newtonsoft.Json.JsonProperty("titleNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TitleNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("titleName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TitleName { get; set; }

        [Newtonsoft.Json.JsonProperty("titleDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TitleDate { get; set; }

        [Newtonsoft.Json.JsonProperty("titleNotes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TitleNotes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFloorId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuildingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkBuildingId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOrientationId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("propertyCalled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PropertyCalled { get; set; }

        [Newtonsoft.Json.JsonProperty("fractionDivided", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FractionDivided { get; set; }

        [Newtonsoft.Json.JsonProperty("dividedPart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DividedPart { get; set; }

        [Newtonsoft.Json.JsonProperty("undividedPart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UndividedPart { get; set; }

        [Newtonsoft.Json.JsonProperty("vat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Vat { get; set; }

        [Newtonsoft.Json.JsonProperty("areaCos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaCos { get; set; }

        [Newtonsoft.Json.JsonProperty("areaCuf", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaCuf { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleUnitCostFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSaleUnitCostFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("salePriceFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalePriceFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalePriceFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSalePriceFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItemOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItemOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("fractionDividedLand", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FractionDividedLand { get; set; }

        [Newtonsoft.Json.JsonProperty("discountMax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountMax { get; set; }

        [Newtonsoft.Json.JsonProperty("equipementsCoef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EquipementsCoef { get; set; }

        [Newtonsoft.Json.JsonProperty("equipementsArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EquipementsArea { get; set; }

        [Newtonsoft.Json.JsonProperty("salableArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalableArea { get; set; }

        [Newtonsoft.Json.JsonProperty("coefSaleAbleArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CoefSaleAbleArea { get; set; }

        [Newtonsoft.Json.JsonProperty("lndVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndLevelId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgMiddlemanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgMiddlemanId { get; set; }

        [Newtonsoft.Json.JsonProperty("prospectionUnitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProspectionUnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("prospectionPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProspectionPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("prospectionPriceProposed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProspectionPriceProposed { get; set; }

        [Newtonsoft.Json.JsonProperty("unitCostNonBuiltPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitCostNonBuiltPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("owner", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Owner { get; set; }

        [Newtonsoft.Json.JsonProperty("gmapLink", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string GmapLink { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgLawyerId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCityId { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLandId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndLandId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFacadeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFacadeId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleUnitCostFloorHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSaleUnitCostFloorHt { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleUnitCostHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSaleUnitCostHt { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("groupLandQuota", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GroupLandQuota { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("salePriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalePriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalePriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSalePriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("salePriceFloorHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalePriceFloorHt { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalePriceFloorHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ComSalePriceFloorHt { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailableForRentInWebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAvailableForRentInWebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailableForSaleInWebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAvailableForSaleInWebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanySyndicId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanySyndicId { get; set; }

        [Newtonsoft.Json.JsonProperty("buildingPermissionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BuildingPermissionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isTitled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTitled { get; set; }

        [Newtonsoft.Json.JsonProperty("interiorArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InteriorArea { get; set; }

        [Newtonsoft.Json.JsonProperty("wallsArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WallsArea { get; set; }

        [Newtonsoft.Json.JsonProperty("commonPartsArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommonPartsArea { get; set; }

        [Newtonsoft.Json.JsonProperty("discountMax2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountMax2 { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwnerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgOwnerId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("mapLatitude", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MapLatitude { get; set; }

        [Newtonsoft.Json.JsonProperty("mapLongitude", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MapLongitude { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommissionRate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("isReversmentBasedOnPayment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsReversmentBasedOnPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("admCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCity AdmCity { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanySyndic", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompanySyndic { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgLawyer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgMiddleman", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgMiddleman { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwner", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgOwner { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLand", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndLand LndLand { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndLevel LndLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("lndVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndVocation LndVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("parent", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem Parent { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuilding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkBuilding StkBuilding { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkCostCategory StkCostCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFacade", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFacade StkFacade { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFloor StkFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkKind StkKind { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkOrientation StkOrientation { get; set; }

        [Newtonsoft.Json.JsonProperty("stkPresentationType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkPresentationType StkPresentationType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoan> BuyLoans { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheStkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheStkItem> CfgTrancheStkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("comOfferItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOfferItem> ComOfferItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionProject> ComProspectionProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationStkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellationStkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationStkOldItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellationStkOldItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClients", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClient> ComSaleWithdrawalClients { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductStkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProduct> ComSaleWithdrawalProductStkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductStkOldItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProduct> ComSaleWithdrawalProductStkOldItems { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseParent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> InverseParent { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkExpense> StkExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudy> StkFeasibilityStudies { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyPaths", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkHierarchyPath> StkHierarchyPaths { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemContenances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemContenance> StkItemContenances { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemVues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemVue> StkItemVues { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("synPricingItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynPricingItem> SynPricingItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalProduct
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleId { get; set; }

        [Newtonsoft.Json.JsonProperty("totalToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("totalRest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalRest { get; set; }

        [Newtonsoft.Json.JsonProperty("totalSettled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalSettled { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("newStkItemTotalToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NewStkItemTotalToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOldItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOldItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("claimDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClaimDate { get; set; }

        [Newtonsoft.Json.JsonProperty("decisionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DecisionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("validityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("transfertExpenseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TransfertExpenseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("reimburseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ReimburseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("isLegalized", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsLegalized { get; set; }

        [Newtonsoft.Json.JsonProperty("legalizationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LegalizationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalReasonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalReasonId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("transfertExpenseAmountAfterDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TransfertExpenseAmountAfterDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("itemPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ItemPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("underItemsPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnderItemsPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("priceAfterDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceAfterDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("discountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccounted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccounted { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOrigin ComProspectionOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("comSale", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComSale { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalReason ComSaleWithdrawalReason { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOldItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkOldItem { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductNewUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductNewUnderItem> ComSaleWithdrawalProductNewUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductUnderItem> ComSaleWithdrawalProductUnderItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalReason
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellations { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClients", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClient> ComSaleWithdrawalClients { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProducts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProduct> ComSaleWithdrawalProducts { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalClientNewCustomer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("partPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PartPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalClientId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClient", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalClient ComSaleWithdrawalClient { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalClientOldCustomer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("partPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PartPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalClientId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClient", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalClient ComSaleWithdrawalClient { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalClient
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleId { get; set; }

        [Newtonsoft.Json.JsonProperty("newStkItemTotalToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NewStkItemTotalToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("totalToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("totalRest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalRest { get; set; }

        [Newtonsoft.Json.JsonProperty("totalSettled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalSettled { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOldItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOldItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOldCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgOldCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("claimDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClaimDate { get; set; }

        [Newtonsoft.Json.JsonProperty("decisionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DecisionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("validityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("transfertExpenseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TransfertExpenseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("reimburseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ReimburseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("isLegalized", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsLegalized { get; set; }

        [Newtonsoft.Json.JsonProperty("legalizationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LegalizationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalReasonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalReasonId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("transfertExpenseAmountAfterDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TransfertExpenseAmountAfterDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("partPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PartPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("newPartPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NewPartPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccounted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccounted { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOldCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgOldCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOrigin ComProspectionOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("comSale", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComSale { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalReason ComSaleWithdrawalReason { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOldItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkOldItem { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientNewCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClientNewCustomer> ComSaleWithdrawalClientNewCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientOldCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClientOldCustomer> ComSaleWithdrawalClientOldCustomers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComActionMessage
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isIn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsIn { get; set; }

        [Newtonsoft.Json.JsonProperty("withoutRevival", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithoutRevival { get; set; }

        [Newtonsoft.Json.JsonProperty("alertValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AlertValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("userName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserName { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalCancellationId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalClientId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalProductId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageSubCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnpaid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnpaid { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageId { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("alertMessage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AlertMessage { get; set; }

        [Newtonsoft.Json.JsonProperty("isSystem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSystem { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavClaimId { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SavClaimGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("admEventId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmEventId { get; set; }

        [Newtonsoft.Json.JsonProperty("isNotRead", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsNotRead { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrmRequestOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("admEvent", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmEvent AdmEvent { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageCategory ComActionMessageCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageNavigation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessage ComActionMessageNavigation { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageSubCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageSubCategory ComActionMessageSubCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageType ComActionMessageType { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComDocument ComDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalCancellation ComSaleWithdrawalCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClient", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalClient ComSaleWithdrawalClient { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProduct", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalProduct ComSaleWithdrawalProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrmRequestOffer PrmRequestOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaim", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavClaim SavClaim { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroup", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SavClaimGroup SavClaimGroup { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseComActionMessageNavigation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> InverseComActionMessageNavigation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComActionMessageType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isSystem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSystem { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrmRequestOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrmRequestOffer PrmRequestOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionProfileCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("multiSelect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? MultiSelect { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isVisible", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsVisible { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProfiles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionProfile> ComProspectionProfiles { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionProfile
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProfileCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionProfileCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProfileCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionProfileCategory ComProspectionProfileCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionSelectedProfiles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionSelectedProfile> ComProspectionSelectedProfiles { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionSelectedProfile
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProfileId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionProfileId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrmRequestOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProfile", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionProfile ComProspectionProfile { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrmRequestOffer PrmRequestOffer { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrmRequestOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrmRequestOffer PrmRequestOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrmRequestOffer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("address2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address2 { get; set; }

        [Newtonsoft.Json.JsonProperty("address3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address3 { get; set; }

        [Newtonsoft.Json.JsonProperty("zipCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ZipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("budget", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Budget { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("prmPropertyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrmPropertyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercialId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCommercialId { get; set; }

        [Newtonsoft.Json.JsonProperty("prmPropertyCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrmPropertyCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("prmPropertyTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrmPropertyTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgIntermediateId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgIntermediateId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwnerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgOwnerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("isOccupied", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOccupied { get; set; }

        [Newtonsoft.Json.JsonProperty("releaseDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReleaseDate { get; set; }

        [Newtonsoft.Json.JsonProperty("contractStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ContractStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("contractEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ContractEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommissionRate { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntPeriodicityId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginSupportId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginSupportId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProposerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProposerId { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("fundingCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FundingCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("fundingOwnBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FundingOwnBase { get; set; }

        [Newtonsoft.Json.JsonProperty("mapLatitude", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MapLatitude { get; set; }

        [Newtonsoft.Json.JsonProperty("mapLongitude", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MapLongitude { get; set; }

        [Newtonsoft.Json.JsonProperty("isReversmentBasedOnPayment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsReversmentBasedOnPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("admCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCity AdmCity { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercial", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCommercial { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgIntermediate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgIntermediate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwner", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgOwner { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProposer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgProposer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("comAction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComAction ComAction { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageType ComActionMessageType { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionKind ComProspectionKind { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOrigin ComProspectionOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginSupport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOriginSupport ComProspectionOriginSupport { get; set; }

        [Newtonsoft.Json.JsonProperty("prmProperty", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem PrmProperty { get; set; }

        [Newtonsoft.Json.JsonProperty("prmPropertyCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory PrmPropertyCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("prmPropertyType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType PrmPropertyType { get; set; }

        [Newtonsoft.Json.JsonProperty("rntPeriodicity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntPeriodicity RntPeriodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionCategory> ComProspectionCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionSelectedProfiles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionSelectedProfile> ComProspectionSelectedProfiles { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionType> ComProspectionTypes { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionOriginSupport
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOrigin ComProspectionOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionOrigin
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithProposer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithProposer { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithGift", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithGift { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithSupport", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithSupport { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginSupports", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionOriginSupport> ComProspectionOriginSupports { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellations { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClients", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClient> ComSaleWithdrawalClients { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProducts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProduct> ComSaleWithdrawalProducts { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSaleWithdrawalCancellation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleId { get; set; }

        [Newtonsoft.Json.JsonProperty("totalToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("totalRest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalRest { get; set; }

        [Newtonsoft.Json.JsonProperty("totalSettled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalSettled { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOldCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgOldCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("newStkItemTotalToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NewStkItemTotalToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOldItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOldItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("claimDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClaimDate { get; set; }

        [Newtonsoft.Json.JsonProperty("decisionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DecisionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("validityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("transfertExpenseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TransfertExpenseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("reimburseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ReimburseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("isLegalized", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsLegalized { get; set; }

        [Newtonsoft.Json.JsonProperty("legalizationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LegalizationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalReasonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalReasonId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("transfertExpenseAmountAfterDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TransfertExpenseAmountAfterDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Reference { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBankId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgBankId { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccounted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccounted { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContactId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgContactId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBank", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgBank { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgContact { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOldCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgOldCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOrigin ComProspectionOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("comSale", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComSale { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalReason ComSaleWithdrawalReason { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOldItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkOldItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComDocument
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSettlementCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("excludeFromPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ExcludeFromPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("vatratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Vatratio { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("quittanceCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string QuittanceCode { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("discountRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalProductId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalClientId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalCancellationId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContactId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgContactId { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentAuthorizationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentAuthorizationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollectorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgDebtCollectorId { get; set; }

        [Newtonsoft.Json.JsonProperty("comPenaltyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComPenaltyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlRecoveryFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgContact { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgDebtCollector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgDebtCollector { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("comPenaltyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComDocument ComPenaltyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalCancellation ComSaleWithdrawalCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClient", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalClient ComSaleWithdrawalClient { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProduct", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalProduct ComSaleWithdrawalProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSettlementCategory ComSettlementCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlRecoveryFolder StlRecoveryFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlementLine> ComSettlementLines { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseComPenaltyDocument", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> InverseComPenaltyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("rntRevivals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntRevival> RntRevivals { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocumentLine> StlDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorizationLine> StlPaymentAuthorizationLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSettlementCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleExpense", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleExpense { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleAdvance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleAdvance { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleAutoFinancment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleAutoFinancment { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleModification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleModification { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleResiliation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleResiliation { get; set; }

        [Newtonsoft.Json.JsonProperty("isSalePenality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSalePenality { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentCaution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentCaution { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentExpense", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentExpense { get; set; }

        [Newtonsoft.Json.JsonProperty("isRentResiliation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRentResiliation { get; set; }

        [Newtonsoft.Json.JsonProperty("isSyndic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSyndic { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isConfermentBasedDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsConfermentBasedDate { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("excludeFromPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ExcludeFromPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleBeforeReservation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleBeforeReservation { get; set; }

        [Newtonsoft.Json.JsonProperty("isInAgrementContext", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsInAgrementContext { get; set; }

        [Newtonsoft.Json.JsonProperty("canUpdateDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanUpdateDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("isForOthers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForOthers { get; set; }

        [Newtonsoft.Json.JsonProperty("isAlwaysPayed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAlwaysPayed { get; set; }

        [Newtonsoft.Json.JsonProperty("reportDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string ReportDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleIncome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleIncome { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithPenalty", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithPenalty { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheSettlementCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheSettlementCategory> CfgTrancheSettlementCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentPaymentMethods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocumentPaymentMethod> ComDocumentPaymentMethods { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkVocation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatus> ComFolderStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderWorkFlow> ComFolderWorkFlows { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlementCategory> ComSettlementCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaimGroup> SavClaimGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemPricing> StlItemPricings { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTrancheStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ComFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("thresholdOperator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? ThresholdOperator { get; set; }

        [Newtonsoft.Json.JsonProperty("thresholdRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ThresholdRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderStatusDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderStatusReport
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportDataId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmReportDataId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportData", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmReportDatum AdmReportData { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosing { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("isAsale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAsale { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isCancellation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmWorkFlowStateTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("thresholdOperator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? ThresholdOperator { get; set; }

        [Newtonsoft.Json.JsonProperty("thresholdRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ThresholdRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("forCashSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ForCashSale { get; set; }

        [Newtonsoft.Json.JsonProperty("forCreditSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ForCreditSale { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusPaymentTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusPaymentTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("canTransfertProduct", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanTransfertProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("canTransfertClient", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanTransfertClient { get; set; }

        [Newtonsoft.Json.JsonProperty("convertProspectToClient", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ConvertProspectToClient { get; set; }

        [Newtonsoft.Json.JsonProperty("tierMandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string TierMandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("applyFees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ApplyFees { get; set; }

        [Newtonsoft.Json.JsonProperty("whithShemaVerif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WhithShemaVerif { get; set; }

        [Newtonsoft.Json.JsonProperty("giftMandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GiftMandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("canCancelFolder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanCancelFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithGiftVerification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithGiftVerification { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithGiftOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithGiftOrder { get; set; }

        [Newtonsoft.Json.JsonProperty("withSalesManagerAffect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithSalesManagerAffect { get; set; }

        [Newtonsoft.Json.JsonProperty("associatedFolderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string AssociatedFolderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailableForProspection", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAvailableForProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailableForSaleInWebSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAvailableForSaleInWebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("isSaleIncome", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSaleIncome { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusPaymentType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatusPaymentType ComFolderStatusPaymentType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheComFolderStatusDeliveryId1Navigations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTrancheComFolderStatusDeliveryId1Navigations { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheComFolderStatusDeliveryId2Navigations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTrancheComFolderStatusDeliveryId2Navigations { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheStatus> CfgTrancheStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusDocumentToAttach> ComFolderStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusReports", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusReport> ComFolderStatusReports { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderWorkFlowComFolderStatusEnds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderWorkFlow> ComFolderWorkFlowComFolderStatusEnds { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderWorkFlowComFolderStatusStarts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderWorkFlow> ComFolderWorkFlowComFolderStatusStarts { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComLoanCompanyDecision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComPaymentMethod
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderCustomer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("partPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PartPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComGiftQuantity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comGiftId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComGiftId { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comGift", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComGift ComGift { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComGift
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderGifts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderGift> ComFolderGifts { get; set; }

        [Newtonsoft.Json.JsonProperty("comGiftQuantities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComGiftQuantity> ComGiftQuantities { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComGiftReason
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderGifts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderGift> ComFolderGifts { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderGift
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comGiftId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComGiftId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("delivered", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Delivered { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("isAvailable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAvailable { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("comGiftReasonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComGiftReasonId { get; set; }

        [Newtonsoft.Json.JsonProperty("voucherDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? VoucherDate { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("comGift", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComGift ComGift { get; set; }

        [Newtonsoft.Json.JsonProperty("comGiftReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComGiftReason ComGiftReason { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComModification
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("demandDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DemandDate { get; set; }

        [Newtonsoft.Json.JsonProperty("technicalValidationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TechnicalValidationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Cost { get; set; }

        [Newtonsoft.Json.JsonProperty("customerValidationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CustomerValidationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("commercialAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommercialAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Status { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("commercialAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommercialAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComRecondictionHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("beginDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BeginDate { get; set; }

        [Newtonsoft.Json.JsonProperty("lastDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastDate { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Periodicity { get; set; }

        [Newtonsoft.Json.JsonProperty("priceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("recondictionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RecondictionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("priceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("gracePeriodNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? GracePeriodNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("augmentationFrequency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AugmentationFrequency { get; set; }

        [Newtonsoft.Json.JsonProperty("periodicityNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PeriodicityNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCustomerId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid ComFolderStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercialId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCommercialId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("unitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("itemPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ItemPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("underItemsPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnderItemsPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("statusValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StatusValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("contact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Contact { get; set; }

        [Newtonsoft.Json.JsonProperty("usage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Usage { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CancelDate { get; set; }

        [Newtonsoft.Json.JsonProperty("modificationsAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ModificationsAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("penalityDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PenalityDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("discountAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DiscountAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("priceAfterDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceAfterDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("vatratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Vatratio { get; set; }

        [Newtonsoft.Json.JsonProperty("priceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("totalToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDateReal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDateReal { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryMaxNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DeliveryMaxNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DeliveryNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementDate { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementSavingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementSavingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("ownershipCertificateDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? OwnershipCertificateDate { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("priceWithModification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? PriceWithModification { get; set; }

        [Newtonsoft.Json.JsonProperty("creditApprovalDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreditApprovalDate { get; set; }

        [Newtonsoft.Json.JsonProperty("creditPossessionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreditPossessionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AdvanceDate { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AgreementAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AgreementPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgLawyerId { get; set; }

        [Newtonsoft.Json.JsonProperty("partPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PartPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("revival1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Revival1 { get; set; }

        [Newtonsoft.Json.JsonProperty("revival2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Revival2 { get; set; }

        [Newtonsoft.Json.JsonProperty("revival1ValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Revival1ValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("revival2ValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Revival2ValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("creditAgency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CreditAgency { get; set; }

        [Newtonsoft.Json.JsonProperty("creditBankId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CreditBankId { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? InsuranceDate { get; set; }

        [Newtonsoft.Json.JsonProperty("bankRecordDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BankRecordDate { get; set; }

        [Newtonsoft.Json.JsonProperty("interventionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? InterventionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementDatePrevisionel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementDatePrevisionel { get; set; }

        [Newtonsoft.Json.JsonProperty("isConfirmedAgreementDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsConfirmedAgreementDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isOldCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOldCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("discountChangeDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DiscountChangeDate { get; set; }

        [Newtonsoft.Json.JsonProperty("loanCompanySendDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LoanCompanySendDate { get; set; }

        [Newtonsoft.Json.JsonProperty("loanCompanyDecisionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LoanCompanyDecisionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("comLoanCompanyDecisionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComLoanCompanyDecisionId { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentDetail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ComDocumentDetail { get; set; }

        [Newtonsoft.Json.JsonProperty("cancelDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string CancelDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("reservationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReservationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithGiftChoiceLater", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithGiftChoiceLater { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSaleManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSaleManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementRegistryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementRegistryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("unitCostHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitCostHt { get; set; }

        [Newtonsoft.Json.JsonProperty("precisionActDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrecisionActDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("modificationsAmountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ModificationsAmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("itemPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ItemPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("underItemsPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnderItemsPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("itemPriceAfterHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ItemPriceAfterHt { get; set; }

        [Newtonsoft.Json.JsonProperty("underItemsPriceAfterHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnderItemsPriceAfterHt { get; set; }

        [Newtonsoft.Json.JsonProperty("priceAfterDiscountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceAfterDiscountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("itemPriceAfter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ItemPriceAfter { get; set; }

        [Newtonsoft.Json.JsonProperty("underItemsPriceAfter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnderItemsPriceAfter { get; set; }

        [Newtonsoft.Json.JsonProperty("globalArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? GlobalArea { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccounted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccounted { get; set; }

        [Newtonsoft.Json.JsonProperty("reservationDateCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReservationDateCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementSavingDateCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementSavingDateCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDateRealCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDateRealCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("precisionActDateCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrecisionActDateCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("reservationRegistryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReservationRegistryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryRegistryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryRegistryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("precisionActRegistryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrecisionActRegistryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("contractPrintDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ContractPrintDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSaleManager2Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSaleManager2Id { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwnerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgOwnerId { get; set; }

        [Newtonsoft.Json.JsonProperty("commissionRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CommissionRate { get; set; }

        [Newtonsoft.Json.JsonProperty("comPaymentMethodId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComPaymentMethodId { get; set; }

        [Newtonsoft.Json.JsonProperty("probabilityOfFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProbabilityOfFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("romInterest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RomInterest { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercial", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCommercial { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCustomer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgLawyer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgLawyer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgOwner", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgOwner { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSaleManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSaleManager { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSaleManager2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSaleManager2 { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("comLoanCompanyDecision", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComLoanCompanyDecision ComLoanCompanyDecision { get; set; }

        [Newtonsoft.Json.JsonProperty("comPaymentMethod", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComPaymentMethod ComPaymentMethod { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("creditBank", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CreditBank { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("actTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActTier> ActTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("admEvents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmEvent> AdmEvents { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentPaymentMethods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocumentPaymentMethod> ComDocumentPaymentMethods { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderCustomer> ComFolderCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderDocumentToAttach> ComFolderDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderGifts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderGift> ComFolderGifts { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comModifications", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComModification> ComModifications { get; set; }

        [Newtonsoft.Json.JsonProperty("comRecondictionHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComRecondictionHistory> ComRecondictionHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellations { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClients", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClient> ComSaleWithdrawalClients { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProducts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProduct> ComSaleWithdrawalProducts { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaimGroup> SavClaimGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocumentLine> StlDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItem> StlItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComFolderItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkCostCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("contenance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Contenance { get; set; }

        [Newtonsoft.Json.JsonProperty("areaNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaNet { get; set; }

        [Newtonsoft.Json.JsonProperty("areaFloor", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("discount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Discount { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("alwaysAffected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AlwaysAffected { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkOrientationId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloorId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkFloorId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuildingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkBuildingId { get; set; }

        [Newtonsoft.Json.JsonProperty("isUnderItemOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsUnderItemOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("priceBeforeDiscountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceBeforeDiscountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("priceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Vatratio { get; set; }

        [Newtonsoft.Json.JsonProperty("isTitled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTitled { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("stkBuilding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkBuilding StkBuilding { get; set; }

        [Newtonsoft.Json.JsonProperty("stkCostCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkCostCategory StkCostCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFloor", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkFloor StkFloor { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemType StkItemType { get; set; }

        [Newtonsoft.Json.JsonProperty("stkOrientation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkOrientation StkOrientation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkItemType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("forUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ForUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkKindId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("withAreaSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithAreaSale { get; set; }

        [Newtonsoft.Json.JsonProperty("reportDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string ReportDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stockVariationCoef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockVariationCoef { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkKind StkKind { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comOfferItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOfferItem> ComOfferItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionType> ComProspectionTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductNewUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductNewUnderItem> ComSaleWithdrawalProductNewUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductUnderItem> ComSaleWithdrawalProductUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemPricing> StlItemPricings { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemCategory> StkItemCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemType> StkItemTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTrancheCoveredFloor
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComSalesCommission
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("saleCommissionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SaleCommissionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("saleCommissionAmountExtern", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SaleCommissionAmountExtern { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionAmountExtern", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionAmountExtern { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionId { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionAmount2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionAmount2 { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionAmountExtern2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionAmountExtern2 { get; set; }

        [Newtonsoft.Json.JsonProperty("saleCommissionPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SaleCommissionPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("saleCommissionBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SaleCommissionBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("saleCommissionPercentExtern", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SaleCommissionPercentExtern { get; set; }

        [Newtonsoft.Json.JsonProperty("saleCommissionExternBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SaleCommissionExternBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DeliveryCommissionBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionPercentExtern", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionPercentExtern { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionExternBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DeliveryCommissionExternBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionPercent2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionPercent2 { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommission2BasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DeliveryCommission2BasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionPercentExtern2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DeliveryCommissionPercentExtern2 { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryCommissionExtern2BasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DeliveryCommissionExtern2BasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("comEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("comAction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComAction ComAction { get; set; }

        [Newtonsoft.Json.JsonProperty("comEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier ComEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkItemCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("forUnderItem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ForUnderItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkKindId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid StkKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("withAreaSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithAreaSale { get; set; }

        [Newtonsoft.Json.JsonProperty("reportDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string ReportDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("stockVariationCoef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockVariationCoef { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkKind StkKind { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationCoefs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationCoef> ActStockVariationCoefs { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheCoveredFloors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheCoveredFloor> CfgTrancheCoveredFloors { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderItem> ComFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comOfferItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOfferItem> ComOfferItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionCategory> ComProspectionCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductNewUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductNewUnderItem> ComSaleWithdrawalProductNewUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductUnderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProductUnderItem> ComSaleWithdrawalProductUnderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalesCommissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSalesCommission> ComSalesCommissions { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderItem> RntFolderItems { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsbaseUnits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFsbaseUnit> StkFsbaseUnits { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemPricing> StlItemPricings { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActStockVariationCoef
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("stockVariationCoef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockVariationCoef { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItemCategory StkItemCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActStockVariationExclusion
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("isBiggerOrEqual", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsBiggerOrEqual { get; set; }

        [Newtonsoft.Json.JsonProperty("exclusionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ExclusionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmUserHabilitation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgProject
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("mobile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Mobile { get; set; }

        [Newtonsoft.Json.JsonProperty("phone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Phone { get; set; }

        [Newtonsoft.Json.JsonProperty("fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Fax { get; set; }

        [Newtonsoft.Json.JsonProperty("webSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string WebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("address2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address2 { get; set; }

        [Newtonsoft.Json.JsonProperty("address3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address3 { get; set; }

        [Newtonsoft.Json.JsonProperty("zipCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ZipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string City { get; set; }

        [Newtonsoft.Json.JsonProperty("signatureCity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SignatureCity { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admSignatoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmSignatoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("workStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MarketingStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MarketingEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTechnicalManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTechnicalManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSalesManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSalesManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("admSignatory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier AdmSignatory { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSalesManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSalesManager { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTechnicalManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTechnicalManager { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultAccount> ActDefaultAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationCoefs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationCoef> ActStockVariationCoefs { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationExclusions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationExclusion> ActStockVariationExclusions { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserHabilitations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUserHabilitation> AdmUserHabilitations { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemPricing> StlItemPricings { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTrancheStanding
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTranches { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Month { get; set; }

        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Year { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("achievementAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AchievementAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("turnoverQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? TurnoverQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("turnoverAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TurnoverAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("turnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Turnover { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComActionCfgTranche
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("comAction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComAction ComAction { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComPrevisionVersion
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("versionDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset VersionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Month { get; set; }

        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Year { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("achievementAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AchievementAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("turnoverQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TurnoverQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("turnoverAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TurnoverAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("turnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Turnover { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Month { get; set; }

        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Year { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("achievementAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AchievementAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("turnoverQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? TurnoverQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("turnoverAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TurnoverAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("turnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Turnover { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjProjectCfgTrancheVentilation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkItemExonaration
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DocYear { get; set; }

        [Newtonsoft.Json.JsonProperty("unitCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitCost { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlProjectVentilation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PrevisionYear { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlSalePrevisionManual
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("month", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Month { get; set; }

        [Newtonsoft.Json.JsonProperty("year", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Year { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionTurnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PrevisionTurnover { get; set; }

        [Newtonsoft.Json.JsonProperty("encaissementPrev", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EncaissementPrev { get; set; }

        [Newtonsoft.Json.JsonProperty("concretisationQuantityPrev", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? ConcretisationQuantityPrev { get; set; }

        [Newtonsoft.Json.JsonProperty("caquantityPrev", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CaquantityPrev { get; set; }

        [Newtonsoft.Json.JsonProperty("concretisationPrev", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ConcretisationPrev { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlTrancheVentilation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTrancheVentilationItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTrancheVentilationItem> StlTrancheVentilationItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlTrancheVentilationItem
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTrancheVentilationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlTrancheVentilationId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheId { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranche", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche CfgTranche { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTrancheVentilation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlTrancheVentilation StlTrancheVentilation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTranche
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("mobile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Mobile { get; set; }

        [Newtonsoft.Json.JsonProperty("phone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Phone { get; set; }

        [Newtonsoft.Json.JsonProperty("fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Fax { get; set; }

        [Newtonsoft.Json.JsonProperty("webSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string WebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("address2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address2 { get; set; }

        [Newtonsoft.Json.JsonProperty("address3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address3 { get; set; }

        [Newtonsoft.Json.JsonProperty("zipCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ZipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string City { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("workStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MarketingStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("marketingEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MarketingEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("advancePercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvancePercent { get; set; }

        [Newtonsoft.Json.JsonProperty("concretisationPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ConcretisationPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("ecarttypeFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EcarttypeFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("ecarttypeConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EcarttypeConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("endDateConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDateConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("startDateFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDateFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("deliveryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkLevelingId { get; set; }

        [Newtonsoft.Json.JsonProperty("isForSale", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForSale { get; set; }

        [Newtonsoft.Json.JsonProperty("isForRent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForRent { get; set; }

        [Newtonsoft.Json.JsonProperty("isForProject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForProject { get; set; }

        [Newtonsoft.Json.JsonProperty("isForBuy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForBuy { get; set; }

        [Newtonsoft.Json.JsonProperty("isForSav", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForSav { get; set; }

        [Newtonsoft.Json.JsonProperty("occupancyPermitsDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? OccupancyPermitsDate { get; set; }

        [Newtonsoft.Json.JsonProperty("beforeReservationAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BeforeReservationAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicPeriod", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SyndicPeriod { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyDelayAdded", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? WarrantyDelayAdded { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? WarrantyDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementFirstDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AgreementFirstDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementSecondDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? AgreementSecondDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentBalanceDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PaymentBalanceDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("beforeReservationAmountDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BeforeReservationAmountDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("advancePercentDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvancePercentDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultExpenseAmountDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultExpenseAmountDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultExpenseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultExpenseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationPenalityPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CancellationPenalityPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationPenalityPercentDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CancellationPenalityPercentDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("articleTransferPenality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ArticleTransferPenality { get; set; }

        [Newtonsoft.Json.JsonProperty("articleTransferPenalityDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ArticleTransferPenalityDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("sliceTransferPenality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SliceTransferPenality { get; set; }

        [Newtonsoft.Json.JsonProperty("sliceTransferPenalityDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SliceTransferPenalityDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("customerTransferPenality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CustomerTransferPenality { get; set; }

        [Newtonsoft.Json.JsonProperty("customerTransferPenalityDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CustomerTransferPenalityDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("syndicAmountDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SyndicAmountDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("otherExpenseAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherExpenseAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("otherExpenseAmountDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OtherExpenseAmountDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationPenalityBasedOnItemPrice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CancellationPenalityBasedOnItemPrice { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementFirstPenaltyPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AgreementFirstPenaltyPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementSecondPenaltyPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AgreementSecondPenaltyPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("commerceTribunal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CommerceTribunal { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationRightCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CancellationRightCode { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgClaimsManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgClaimsManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("countItemBasePrevision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CountItemBasePrevision { get; set; }

        [Newtonsoft.Json.JsonProperty("totalSaleBasePrevision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalSaleBasePrevision { get; set; }

        [Newtonsoft.Json.JsonProperty("baseMarketingStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BaseMarketingStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("baseEndDateConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BaseEndDateConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("baseStartDateFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BaseStartDateFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("baseMarketingEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BaseMarketingEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("baseEcarttypeConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseEcarttypeConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("baseEcarttypeFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseEcarttypeFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("baseConcretisationPercent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseConcretisationPercent { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("revival1Date", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Revival1Date { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionMarketingStartDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrevisionMarketingStartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionEndDateConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrevisionEndDateConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionStartDateFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrevisionStartDateFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionMarketingEndDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrevisionMarketingEndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("delayLawyerMinute", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayLawyerMinute { get; set; }

        [Newtonsoft.Json.JsonProperty("delayMinuteAllSettled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayMinuteAllSettled { get; set; }

        [Newtonsoft.Json.JsonProperty("unitConcretisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitConcretisation { get; set; }

        [Newtonsoft.Json.JsonProperty("unitFinalisation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitFinalisation { get; set; }

        [Newtonsoft.Json.JsonProperty("unitTurnover", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitTurnover { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierOtherId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierOtherId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheStandingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTrancheStandingId { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? LndLevelId { get; set; }

        [Newtonsoft.Json.JsonProperty("coveredFloorArea", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? CoveredFloorArea { get; set; }

        [Newtonsoft.Json.JsonProperty("savAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SavAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithGiftForProposer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithGiftForProposer { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithGiftForOldCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithGiftForOldCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("interventionMinimumDelai", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? InterventionMinimumDelai { get; set; }

        [Newtonsoft.Json.JsonProperty("maxVisitNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? MaxVisitNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithGiftForProspectionOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithGiftForProspectionOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("accumulatedGifts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AccumulatedGifts { get; set; }

        [Newtonsoft.Json.JsonProperty("isActiveAdvancePercentDiscount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsActiveAdvancePercentDiscount { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusDeliveryId1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusDeliveryId1 { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusDeliveryId2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderStatusDeliveryId2 { get; set; }

        [Newtonsoft.Json.JsonProperty("receptionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReceptionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("withdrawalDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? WithdrawalDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceBasedOnAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AdvanceBasedOnAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("isForPrm", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForPrm { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("isForRom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForRom { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgClaimsManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgClaimsManager { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgProject CfgProject { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierOther", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierOther { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheStanding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTrancheStanding CfgTrancheStanding { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusDeliveryId1Navigation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatusDeliveryId1Navigation { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusDeliveryId2Navigation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolderStatus ComFolderStatusDeliveryId2Navigation { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public LndLevel LndLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLeveling", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkLeveling StkLeveling { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultAccount> ActDefaultAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationCoefs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationCoef> ActStockVariationCoefs { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationExclusions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationExclusion> ActStockVariationExclusions { get; set; }

        [Newtonsoft.Json.JsonProperty("admEvents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmEvent> AdmEvents { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserHabilitations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUserHabilitation> AdmUserHabilitations { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgPrevision> CfgPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheCoveredFloors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheCoveredFloor> CfgTrancheCoveredFloors { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheLevels", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheLevel> CfgTrancheLevels { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheSettlementCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheSettlementCategory> CfgTrancheSettlementCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheStatus> CfgTrancheStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheStkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheStkItem> CfgTrancheStkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionCfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionCfgTranche> ComActionCfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("comOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOffer> ComOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("comPrevisionVersions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComPrevisionVersion> ComPrevisionVersions { get; set; }

        [Newtonsoft.Json.JsonProperty("comPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComPrevision> ComPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionProject> ComProspectionProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalesCommissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSalesCommission> ComSalesCommissions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectCfgTrancheVentilations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectCfgTrancheVentilation> PrjProjectCfgTrancheVentilations { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("prvSettlementPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvSettlementPrevision> PrvSettlementPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTurnoverPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvTurnoverPrevision> PrvTurnoverPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyCfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyCfgTranche> StkFeasibilityStudyCfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyPlans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkHierarchyPlan> StkHierarchyPlans { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemExonarations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemExonaration> StkItemExonarations { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stkPresentationTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkPresentationType> StkPresentationTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemPricing> StlItemPricings { get; set; }

        [Newtonsoft.Json.JsonProperty("stlProjectVentilations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlProjectVentilation> StlProjectVentilations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSalePrevisionManuals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSalePrevisionManual> StlSalePrevisionManuals { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTrancheVentilationItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTrancheVentilationItem> StlTrancheVentilationItems { get; set; }

        [Newtonsoft.Json.JsonProperty("synPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynPricing> SynPricings { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StkLeveling
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProject> PrjProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelingLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkLevelingLine> StkLevelingLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyFolderPrjProjectVentilation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyFolder BuyFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyVentilationExpense
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjAchivementVersion
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("versionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? VersionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("achivementDates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AchivementDates { get; set; }

        [Newtonsoft.Json.JsonProperty("achivementValues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string AchivementValues { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjGanttTask
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("taskGuid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? TaskGuid { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("taskId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? TaskId { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("versionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? VersionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("percentComplete", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PercentComplete { get; set; }

        [Newtonsoft.Json.JsonProperty("level", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Level { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjLinePrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("achievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Achievement { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("amountNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountNet { get; set; }

        [Newtonsoft.Json.JsonProperty("prevAchievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PrevAchievement { get; set; }

        [Newtonsoft.Json.JsonProperty("prevAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PrevAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("userPrevAchievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UserPrevAchievement { get; set; }

        [Newtonsoft.Json.JsonProperty("userPrevAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UserPrevAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("documentReference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocumentReference { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjPrevisionVersionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid PrjPrevisionVersionId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjPrevisionVersion", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjPrevisionVersion PrjPrevisionVersion { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjPrevisionVersion
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("versionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? VersionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("versionValues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VersionValues { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("prjLinePrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjLinePrevision> PrjLinePrevisions { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PrevisionYear { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionMonth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PrevisionMonth { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PrevisionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjProjectAchievementPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("achievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Achievement { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjProjectAchievementReal
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("achievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Achievement { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjProject
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultVentilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultVentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("isVentilated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsVentilated { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkLevelingId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("referenceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ReferenceId { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("manageProrataPrjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ManageProrataPrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isAcommon", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAcommon { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierManager { get; set; }

        [Newtonsoft.Json.JsonProperty("manageProrataPrjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket ManageProrataPrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("reference", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject Reference { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLeveling", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkLeveling StkLeveling { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserHabilitations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUserHabilitation> AdmUserHabilitations { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeeting> BulMeetings { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolderPrjProjectVentilations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyFolderPrjProjectVentilation> BuyFolderPrjProjectVentilations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoan> BuyLoans { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("buyVentilationExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyVentilationExpense> BuyVentilationExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheLevelingDefinitions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTrancheLevelingDefinition> CfgTrancheLevelingDefinitions { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDays { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseReference", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProject> InverseReference { get; set; }

        [Newtonsoft.Json.JsonProperty("prjAchivementVersions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjAchivementVersion> PrjAchivementVersions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjCoefficientCosts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjCoefficientCost> PrjCoefficientCosts { get; set; }

        [Newtonsoft.Json.JsonProperty("prjGanttTasks", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjGanttTask> PrjGanttTasks { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }

        [Newtonsoft.Json.JsonProperty("prjPrevisionVersions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjPrevisionVersion> PrjPrevisionVersions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjPrevision> PrjPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectAchievementPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectAchievementPrevision> PrjProjectAchievementPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectAchievementReals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectAchievementReal> PrjProjectAchievementReals { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectBuildingPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectBuildingPrevision> PrjProjectBuildingPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectCfgTrancheVentilations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectCfgTrancheVentilation> PrjProjectCfgTrancheVentilations { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectProgressCriteriaLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectProgressCriteriaLine> PrjProjectProgressCriteriaLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketLineGroupingEstimation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketLineGrouping
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketOfferLineGrouping
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketOffer PrjMarketOffer { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketOfferLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("weightingRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WeightingRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineGroupingId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineGroupingId { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping1Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping1Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping2Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping2Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping3Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping3Id { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketOffer PrjMarketOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketOfferStockLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketOffer PrjMarketOffer { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketOffer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("isTheLast", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTheLast { get; set; }

        [Newtonsoft.Json.JsonProperty("launchOfTenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LaunchOfTenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("withdrawalTenderDocumentsDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WithdrawalTenderDocumentsDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderMaturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderMaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersresortDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersresortDate { get; set; }

        [Newtonsoft.Json.JsonProperty("bidOpeningDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BidOpeningDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersreportDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersreportDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferLineGroupings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOfferLineGrouping> PrjMarketOfferLineGroupings { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOfferLine> PrjMarketOfferLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferStockLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOfferStockLine> PrjMarketOfferStockLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOfferSupplier> PrjMarketOfferSuppliers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketOfferSupplier
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("consultationLetterSendDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ConsultationLetterSendDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderAcquisitionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderAcquisitionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderDepositDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderDepositDate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isRejected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRejected { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("officeOrderRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string OfficeOrderRef { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketOffer PrjMarketOffer { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketPaymentPrevisionManual
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("achievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Achievement { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketPaymentPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PaymentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Amount { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("achievement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Achievement { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("pointTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointTime { get; set; }

        [Newtonsoft.Json.JsonProperty("pointDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PointDate { get; set; }

        [Newtonsoft.Json.JsonProperty("pointAchivement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointAchivement { get; set; }

        [Newtonsoft.Json.JsonProperty("pointPayment", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointPayment { get; set; }

        [Newtonsoft.Json.JsonProperty("pointAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PointAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketReceptionKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isFinal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsFinal { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketReception> PrjMarketReceptions { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketReceptionType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketReception> PrjMarketReceptions { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketReceptionCfgTier
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketReceptionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReception", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketReception PrjMarketReception { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketReceptionReserve
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isFixed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsFixed { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketReceptionId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReception", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketReception PrjMarketReception { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketReception
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("meetingPlace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string MeetingPlace { get; set; }

        [Newtonsoft.Json.JsonProperty("requiredBySupplier", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? RequiredBySupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketReceptionTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketReceptionKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketReceptionKind PrjMarketReceptionKind { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketReceptionType PrjMarketReceptionType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketReceptionCfgTier> PrjMarketReceptionCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionReserves", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketReceptionReserve> PrjMarketReceptionReserves { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketVentilationCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketWarrantyLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ratio { get; set; }

        [Newtonsoft.Json.JsonProperty("echeanceDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EcheanceDate { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjPrevisionDate
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrevisionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PrevisionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PrevisionDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjStockLineEstimation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarket
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecamount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcamount { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcratio { get; set; }

        [Newtonsoft.Json.JsonProperty("proportionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProportionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("massChangeRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MassChangeRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PaymentDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMultiSupplier", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMultiSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("percentComplete", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PercentComplete { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultVat { get; set; }

        [Newtonsoft.Json.JsonProperty("executedQuantityBasedInsert", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ExecutedQuantityBasedInsert { get; set; }

        [Newtonsoft.Json.JsonProperty("duplicateInsertAutorised", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DuplicateInsertAutorised { get; set; }

        [Newtonsoft.Json.JsonProperty("stockPileRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockPileRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelingLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkLevelingLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("applyDiscountOnAdditionalWork", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ApplyDiscountOnAdditionalWork { get; set; }

        [Newtonsoft.Json.JsonProperty("applyWithholdingTaxOnAdditionalWork", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ApplyWithholdingTaxOnAdditionalWork { get; set; }

        [Newtonsoft.Json.JsonProperty("totalPoints", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? TotalPoints { get; set; }

        [Newtonsoft.Json.JsonProperty("withMarketView", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithMarketView { get; set; }

        [Newtonsoft.Json.JsonProperty("launchOfTenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LaunchOfTenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderMaturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderMaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceOrderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ServiceOrderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workLaunchDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkLaunchDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workCompletionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkCompletionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("reattachmentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReattachmentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CancellationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("bidOpeningDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BidOpeningDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersResortDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersResortDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersReportDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersReportDate { get; set; }

        [Newtonsoft.Json.JsonProperty("contractSignatureDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ContractSignatureDate { get; set; }

        [Newtonsoft.Json.JsonProperty("achievmentBasedOnQuantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AchievmentBasedOnQuantity { get; set; }

        [Newtonsoft.Json.JsonProperty("withdrawalTenderDocumentsDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WithdrawalTenderDocumentsDate { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedPriceHtmanual", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedPriceHtmanual { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedVatAmountManual", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedVatAmountManual { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedPriceTtcmanual", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedPriceTtcmanual { get; set; }

        [Newtonsoft.Json.JsonProperty("startDateManual", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDateManual { get; set; }

        [Newtonsoft.Json.JsonProperty("delayManual", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DelayManual { get; set; }

        [Newtonsoft.Json.JsonProperty("endDateManual", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDateManual { get; set; }

        [Newtonsoft.Json.JsonProperty("canEditWorkingOutLineByAchivement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanEditWorkingOutLineByAchivement { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationCause", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string CancellationCause { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyInMonths", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyInMonths { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("blokWarrantyRestitution", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BlokWarrantyRestitution { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("includedInPaymentPrevision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IncludedInPaymentPrevision { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosed { get; set; }

        [Newtonsoft.Json.JsonProperty("codeConsultation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("gap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Gap { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketStatus PrjMarketStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketType PrjMarketType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("stkLevelingLine", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkLevelingLine StkLevelingLine { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("bulDelegates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulDelegate> BulDelegates { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingLine> BulMeetingLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClauses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjClause> PrjClauses { get; set; }

        [Newtonsoft.Json.JsonProperty("prjLinePrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjLinePrevision> PrjLinePrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketDocumentToAttach> PrjMarketDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketHierarchies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketHierarchy> PrjMarketHierarchies { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineEstimations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLineEstimation> PrjMarketLineEstimations { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineGroupingEstimations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLineGroupingEstimation> PrjMarketLineGroupingEstimations { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineGroupings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLineGrouping> PrjMarketLineGroupings { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLine> PrjMarketLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOfferSupplier> PrjMarketOfferSuppliers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOffer> PrjMarketOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPaymentPrevisionManuals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketPaymentPrevisionManual> PrjMarketPaymentPrevisionManuals { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPaymentPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketPaymentPrevision> PrjMarketPaymentPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketPrevision> PrjMarketPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketReception> PrjMarketReceptions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketStatusHistory> PrjMarketStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketVentilationCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketVentilationCategory> PrjMarketVentilationCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketViews", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketView> PrjMarketViews { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWarrantyLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketWarrantyLine> PrjMarketWarrantyLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjPrevisionDates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjPrevisionDate> PrjPrevisionDates { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProject> PrjProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("prjStockLineEstimations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjStockLineEstimation> PrjStockLineEstimations { get; set; }

        [Newtonsoft.Json.JsonProperty("prjStockLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjStockLine> PrjStockLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOuts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOut> PrjWorkingOuts { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimPrjMarketClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaimPrjMarketClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimPrjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaimPrjMarkets { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySelectionGroup
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySelection BuySelection { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySelectionPaymentTerm
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("ratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Ratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySelection BuySelection { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySelectionSupplier
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("officeOrderRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string OfficeOrderRef { get; set; }

        [Newtonsoft.Json.JsonProperty("selectionLetterSendDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? SelectionLetterSendDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderAcquisitionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderAcquisitionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderDepositDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderDepositDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isRejected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRejected { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySelection BuySelection { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuySelection
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultVat { get; set; }

        [Newtonsoft.Json.JsonProperty("priceEstimatedHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceEstimatedHt { get; set; }

        [Newtonsoft.Json.JsonProperty("priceEstimatedTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceEstimatedTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("priceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("priceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("launchOfTenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LaunchOfTenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("withdrawalTenderDocumentsDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WithdrawalTenderDocumentsDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderMaturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderMaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersResortDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersResortDate { get; set; }

        [Newtonsoft.Json.JsonProperty("bidOpeningDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BidOpeningDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersReportDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersReportDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("contractSignatureDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ContractSignatureDate { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceOrderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ServiceOrderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workLaunchDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkLaunchDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workCompletionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkCompletionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("reattachmentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReattachmentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CancellationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationCause", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string CancellationCause { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("textLetterSelection", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TextLetterSelection { get; set; }

        [Newtonsoft.Json.JsonProperty("isTheLast", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTheLast { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("groupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("paymentDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PaymentDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySelectionKind BuySelectionKind { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketType PrjMarketType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementType StlSettlementType { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrStatus StrStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionGroup> BuySelectionGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionLine> BuySelectionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionPaymentTerms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionPaymentTerm> BuySelectionPaymentTerms { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionStockLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionStockLine> BuySelectionStockLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionSupplier> BuySelectionSuppliers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class PrjMarketType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlowDocumentToAttach> BuyDocumentWorkFlowDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpenseTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkExpenseType> StkExpenseTypes { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentWorkFlowDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("forFirstWorkingOut", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ForFirstWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("forIntermediateWorkingOut", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ForIntermediateWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("forFinalWorkingOut", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ForFinalWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentWorkFlow BuyDocumentWorkFlow { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketType PrjMarketType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("startStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StartStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("endStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? EndStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("notesMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? NotesMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("supplierMandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string SupplierMandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("isValidatedByCfgTierTrigger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsValidatedByCfgTierTrigger { get; set; }

        [Newtonsoft.Json.JsonProperty("withNotification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithNotification { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sendEmailToUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SendEmailToUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("notifyCfgTierTrigger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? NotifyCfgTierTrigger { get; set; }

        [Newtonsoft.Json.JsonProperty("sendEmailToCfgTierTrigger", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? SendEmailToCfgTierTrigger { get; set; }

        [Newtonsoft.Json.JsonProperty("endStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentStatus EndStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("startStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentStatus StartStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentDocumentToAttach> BuyDocumentDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlowAdmRole> BuyDocumentWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlowDocumentToAttach> BuyDocumentWorkFlowDocumentToAttaches { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentWorkFlow BuyDocumentWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentStatusDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("withTitle", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentStatus BuyDocumentStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class RntFolderDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmAttachedFileType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeStrEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmAttachedFileTypeStrEntity> AdmAttachedFileTypeStrEntities { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFiles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmAttachedFile> AdmAttachedFiles { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationDocumentToAttach> BuyConsultationDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentDocumentToAttach> BuyDocumentDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentStatusDocumentToAttach> BuyDocumentStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlowDocumentToAttach> BuyDocumentWorkFlowDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderDocumentToAttach> ComFolderDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusDocumentToAttach> ComFolderStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlementDocumentToAttach> ComSettlementDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketDocumentToAttach> PrjMarketDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderDocumentToAttach> RntFolderDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderStatusDocumentToAttach> RntFolderStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderWorkFlowDocumentToAttach> RntFolderWorkFlowDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyStatusDocumentToAttach> StkFeasibilityStudyStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyWorkFlowDocumentToAttach> StkFeasibilityStudyWorkFlowDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("strAttachments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrAttachment> StrAttachments { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderWorkFlowDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderWorkFlowDocumentToAttach> SynFolderWorkFlowDocumentToAttaches { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationDocumentToAttach
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmAttachedFileTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmAttachedFileType AdmAttachedFileType { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationStatus BuyConsultationStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationWorkFlow BuyConsultationWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationWorkFlow
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusStartId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationStatusStartId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusEndId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationStatusEndId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusEnd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationStatus BuyConsultationStatusEnd { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusStart", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationStatus BuyConsultationStatusStart { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationDocumentToAttach> BuyConsultationDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationWorkFlowAdmRole> BuyConsultationWorkFlowAdmRoles { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationWorkFlowAdmRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlow", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationWorkFlow BuyConsultationWorkFlow { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmRole
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("withReportRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithReportRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("withDeleteAttachementRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithDeleteAttachementRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withAuditRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithAuditRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withSpecificFieldsRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithSpecificFieldsRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withAddActionMessageRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithAddActionMessageRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withEditActionMessageRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithEditActionMessageRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withDeleteActionMessageRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithDeleteActionMessageRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withEditAttachementRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithEditAttachementRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withAddAttachementRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithAddAttachementRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("withSequenceFreeRestriction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithSequenceFreeRestriction { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportDataRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmReportDataRole> AdmReportDataRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("admRights", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmRight> AdmRights { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUserRole> AdmUserRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("admUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUser> AdmUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebRights", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebRight> AdmWebRights { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationWorkFlowAdmRole> BuyConsultationWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlowAdmRole> BuyDocumentWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderWorkFlowAdmRole> ComFolderWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketWorkFlowAdmRole> PrjMarketWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderWorkFlowAdmRole> RntFolderWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlowAdmRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyWorkFlowAdmRole> StkFeasibilityStudyWorkFlowAdmRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("strInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrIntervener> StrInterveners { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmReportDataRole
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportDataId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmReportDataId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportData", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmReportDatum AdmReportData { get; set; }

        [Newtonsoft.Json.JsonProperty("admRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole AdmRole { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrReport
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmReportId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("queryTest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string QueryTest { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admReport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmReportDatum AdmReport { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmReportDatum
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Type { get; set; }

        [Newtonsoft.Json.JsonProperty("isSystem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSystem { get; set; }

        [Newtonsoft.Json.JsonProperty("reportFile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public byte[] ReportFile { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("groupName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GroupName { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("categoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("category", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Category { get; set; }

        [Newtonsoft.Json.JsonProperty("openBeeSendActivated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? OpenBeeSendActivated { get; set; }

        [Newtonsoft.Json.JsonProperty("openBeeFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? OpenBeeFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgImage CfgImage { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportDataRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmReportDataRole> AdmReportDataRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusReports", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusReport> ComFolderStatusReports { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusReports", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketStatusReport> PrjMarketStatusReports { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotifications", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrNotification> StrNotifications { get; set; }

        [Newtonsoft.Json.JsonProperty("strReports", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrReport> StrReports { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgImage
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("imageData", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public byte[] ImageData { get; set; }

        [Newtonsoft.Json.JsonProperty("admReportData", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmReportDatum> AdmReportData { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentStatus> BuyDocumentStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderStatus> RntFolderStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyStatus> StkFeasibilityStudyStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderStatus> SynFolderStatuses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentStatusHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentWorkFlowId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentStatus BuyDocumentStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("isOkForPayement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOkForPayement { get; set; }

        [Newtonsoft.Json.JsonProperty("isValidatedOnAccounting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsValidatedOnAccounting { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmWorkFlowStateTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("supplierMandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string SupplierMandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("isReadOnly", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsReadOnly { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWorkFlowStateType AdmWorkFlowStateType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImage", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgImage CfgImage { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentStatusDocumentToAttach> BuyDocumentStatusDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentStatusHistory> BuyDocumentStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowEndStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlow> BuyDocumentWorkFlowEndStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlowStartStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlow> BuyDocumentWorkFlowStartStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWorkFlowStateType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationStatus> BuyConsultationStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentStatus> BuyDocumentStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketStatus> PrjMarketStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderStatus> RntFolderStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyStatus> StkFeasibilityStudyStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolderStatus> SynFolderStatuses { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationStatusHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationStatus BuyConsultationStatus { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationStatus
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgImageId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgImageId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("mandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string MandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("tierMandatoryFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TierMandatoryFields { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("delay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Delay { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmWorkFlowStateTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("withPrevision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithPrevision { get; set; }

        [Newtonsoft.Json.JsonProperty("withBordereau", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithBordereau { get; set; }

        [Newtonsoft.Json.JsonProperty("withDepouillement", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithDepouillement { get; set; }

        [Newtonsoft.Json.JsonProperty("withDecomposition", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithDecomposition { get; set; }

        [Newtonsoft.Json.JsonProperty("withMarketAdvance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithMarketAdvance { get; set; }

        [Newtonsoft.Json.JsonProperty("withWorkingOutAdvance", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithWorkingOutAdvance { get; set; }

        [Newtonsoft.Json.JsonProperty("withWorkingOut", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("withTendersOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithTendersOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("isCancellation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("isAmarketEffectif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAmarketEffectif { get; set; }

        [Newtonsoft.Json.JsonProperty("admWorkFlowStateType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWorkFlowStateType AdmWorkFlowStateType { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationDocumentToAttach> BuyConsultationDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationStatusHistory> BuyConsultationStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlowBuyConsultationStatusEnds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationWorkFlow> BuyConsultationWorkFlowBuyConsultationStatusEnds { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationWorkFlowBuyConsultationStatusStarts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationWorkFlow> BuyConsultationWorkFlowBuyConsultationStatusStarts { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationEstimationGroup
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationGroup
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isStock", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsStock { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationOfferGroup
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationOffer BuyConsultationOffer { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationOfferLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("vatRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VatRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("unitPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? UnitPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("unity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Unity { get; set; }

        [Newtonsoft.Json.JsonProperty("quantity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Quantity { get; set; }

        [Newtonsoft.Json.JsonProperty("weightingRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WeightingRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationGroupId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationGroupId { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping1Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping1Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping2Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping2Id { get; set; }

        [Newtonsoft.Json.JsonProperty("groupping3Id", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? Groupping3Id { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("fodecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Fodecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketLineId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationOffer BuyConsultationOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationOffer
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("isTheLast", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTheLast { get; set; }

        [Newtonsoft.Json.JsonProperty("launchOfTenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LaunchOfTenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("withdrawalTenderDocumentsDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WithdrawalTenderDocumentsDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderMaturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderMaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersresortDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersresortDate { get; set; }

        [Newtonsoft.Json.JsonProperty("bidOpeningDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BidOpeningDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersreportDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersreportDate { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSupplierId { get; set; }

        [Newtonsoft.Json.JsonProperty("textLetterOffre", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TextLetterOffre { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSupplier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSupplier { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOfferGroup> BuyConsultationOfferGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOfferLine> BuyConsultationOfferLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOfferSupplier> BuyConsultationOfferSuppliers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultationOfferSupplier
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("consultationLetterSendDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ConsultationLetterSendDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderAcquisitionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderAcquisitionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderDepositDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderDepositDate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isRejected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRejected { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("officeOrderRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string OfficeOrderRef { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationOffer BuyConsultationOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyConsultation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DefaultVat { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedPriceManualHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedPriceManualHt { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedPriceManualTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedPriceManualTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedPriceTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedPriceTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("estimatedPriceHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? EstimatedPriceHt { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("launchOfTenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LaunchOfTenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("withdrawalTenderDocumentsDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WithdrawalTenderDocumentsDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderMaturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderMaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersResortDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersResortDate { get; set; }

        [Newtonsoft.Json.JsonProperty("bidOpeningDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BidOpeningDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tendersReportDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TendersReportDate { get; set; }

        [Newtonsoft.Json.JsonProperty("tenderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? TenderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("contractSignatureDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ContractSignatureDate { get; set; }

        [Newtonsoft.Json.JsonProperty("serviceOrderDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ServiceOrderDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workLaunchDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkLaunchDate { get; set; }

        [Newtonsoft.Json.JsonProperty("workCompletionDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? WorkCompletionDate { get; set; }

        [Newtonsoft.Json.JsonProperty("reattachmentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReattachmentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("textLetterConsultation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TextLetterConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CancellationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cancellationCause", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string CancellationCause { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultationStatus BuyConsultationStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketType PrjMarketType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationEstimationGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationEstimationGroup> BuyConsultationEstimationGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationEstimationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationEstimationLine> BuyConsultationEstimationLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationGroup> BuyConsultationGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationLine> BuyConsultationLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOfferSupplier> BuyConsultationOfferSuppliers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOffer> BuyConsultationOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationStatusHistory> BuyConsultationStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlCurrencyConversion
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyFromId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyFromId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyToId { get; set; }

        [Newtonsoft.Json.JsonProperty("convertValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ConvertValue { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("unit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Unit { get; set; }

        [Newtonsoft.Json.JsonProperty("convertValueBuy", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ConvertValueBuy { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyFrom", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrencyFrom { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrencyTo { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlCurrency
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("codeIso", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeIso { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CurrencyFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("currencySymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CurrencySymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyDecimalDigits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CurrencyDecimalDigits { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompany> CfgCompanies { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOuts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOut> PrjWorkingOuts { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccount> StlAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyConversionStlCurrencyFroms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlCurrencyConversion> StlCurrencyConversionStlCurrencyFroms { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyConversionStlCurrencyTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlCurrencyConversion> StlCurrencyConversionStlCurrencyTos { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> StlDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementStlCurrencies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlementStlCurrencies { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementStlCurrencyAffectations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlementStlCurrencyAffectations { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActDefaultJournal
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournalId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActJournalId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("isSystem", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSystem { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActJournal ActJournal { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlAccount
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBankId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgBankId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("bankCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string BankCode { get; set; }

        [Newtonsoft.Json.JsonProperty("agencyCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string AgencyCode { get; set; }

        [Newtonsoft.Json.JsonProperty("accountNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string AccountNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("accountKey", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public string AccountKey { get; set; }

        [Newtonsoft.Json.JsonProperty("iban", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string Iban { get; set; }

        [Newtonsoft.Json.JsonProperty("codeBic", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string CodeBic { get; set; }

        [Newtonsoft.Json.JsonProperty("agencyAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string AgencyAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("companyAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CompanyAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("creationPlace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CreationPlace { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string CurrencyCode { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyLabel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CurrencyLabel { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBank", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgBank { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlementKind StlSettlementKind { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultAccount> ActDefaultAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultJournals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultJournal> ActDefaultJournals { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultSettlement> ActDefaultSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountPositions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccountPosition> StlAccountPositions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDeposits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAcountDeposit> StlAcountDeposits { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlCategory> StlCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferStlAccountTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferStlAccountTos { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferStlAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferStlAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlip> StlSlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyVentilationCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("ventilationRate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VentilationRate { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmMatrimonialRegime
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhAgreementType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhDepartment
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhManager { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhEchelon
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhEmployeeCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTierType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierKinds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTierKind> CfgTierKinds { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTierKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTierType CfgTierType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhPaySlipModelKind
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModels", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipModel> GrhPaySlipModels { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhPaySlipModelLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("credit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Credit { get; set; }

        [Newtonsoft.Json.JsonProperty("debit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Debit { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelUnityId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModel GrhPaySlipModel { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModelUnity GrhPaySlipModelUnity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhPaySlipModel
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("validityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("baseMonthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseMonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseWorkedDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseWorkedDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseVacationDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseVacationDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModelKind GrhPaySlipModelKind { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipModelLine> GrhPaySlipModelLines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhEmployeeHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDepartmentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhDepartmentId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAgreementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhAgreementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEchelonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEchelonId { get; set; }

        [Newtonsoft.Json.JsonProperty("admFamilySituationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmFamilySituationId { get; set; }

        [Newtonsoft.Json.JsonProperty("admMatrimonialRegimeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmMatrimonialRegimeId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("nbrChildren", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NbrChildren { get; set; }

        [Newtonsoft.Json.JsonProperty("nbrChildrenHandicap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NbrChildrenHandicap { get; set; }

        [Newtonsoft.Json.JsonProperty("salaryBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalaryBase { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("baseMonthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseMonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseWorkedDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseWorkedDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseVacationDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseVacationDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("admFamilySituation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmFamilySituation AdmFamilySituation { get; set; }

        [Newtonsoft.Json.JsonProperty("admMatrimonialRegime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmMatrimonialRegime AdmMatrimonialRegime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAgreementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhAgreementType GrhAgreementType { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDepartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhDepartment GrhDepartment { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEchelon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhEchelon GrhEchelon { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhEmployeeCategory GrhEmployeeCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTierKind GrhEmployeeKind { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModel GrhPaySlipModel { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmFamilySituation
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isHouseHolder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsHouseHolder { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhPaySlip
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("baseWorkedDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseWorkedDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseVacationDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseVacationDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseSalary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseSalary { get; set; }

        [Newtonsoft.Json.JsonProperty("workedDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WorkedDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("netToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? NetToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GrhEmployeeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GrhEmployeeDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeSocialSecurityNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GrhEmployeeSocialSecurityNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("admFamilySituationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmFamilySituationId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAgreementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhAgreementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEchelonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEchelonId { get; set; }

        [Newtonsoft.Json.JsonProperty("nbrChildren", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NbrChildren { get; set; }

        [Newtonsoft.Json.JsonProperty("nbrChildrenHandicap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NbrChildrenHandicap { get; set; }

        [Newtonsoft.Json.JsonProperty("baseMonthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseMonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("vacationDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? VacationDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("workedDaysCharged", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WorkedDaysCharged { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeIdnumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string GrhEmployeeIdnumber { get; set; }

        [Newtonsoft.Json.JsonProperty("overTimeCharged", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OverTimeCharged { get; set; }

        [Newtonsoft.Json.JsonProperty("admFamilySituation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmFamilySituation AdmFamilySituation { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAgreementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhAgreementType GrhAgreementType { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEchelon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhEchelon GrhEchelon { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier GrhEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhEmployeeCategory GrhEmployeeCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTierKind GrhEmployeeKind { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModel GrhPaySlipModel { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModelKind GrhPaySlipModelKind { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipLine> GrhPaySlipLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhPaySlipLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("credit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Credit { get; set; }

        [Newtonsoft.Json.JsonProperty("debit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Debit { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelUnityId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlip", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlip GrhPaySlip { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModelUnity GrhPaySlipModelUnity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhPaySlipModelUnityEntityValue
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelUnityId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isPercentOfSalary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPercentOfSalary { get; set; }

        [Newtonsoft.Json.JsonProperty("docValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? DocValue { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModelUnity GrhPaySlipModelUnity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class GrhPaySlipModelUnity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("isSalary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSalary { get; set; }

        [Newtonsoft.Json.JsonProperty("isIndemnity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsIndemnity { get; set; }

        [Newtonsoft.Json.JsonProperty("isContribuation", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsContribuation { get; set; }

        [Newtonsoft.Json.JsonProperty("isDeduction", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsDeduction { get; set; }

        [Newtonsoft.Json.JsonProperty("isTaxe", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTaxe { get; set; }

        [Newtonsoft.Json.JsonProperty("isRetention", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRetention { get; set; }

        [Newtonsoft.Json.JsonProperty("isForCompany", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsForCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("isPrintable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPrintable { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryBase { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryWorked", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryWorked { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryGross", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryGross { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryContributory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryContributory { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryTaxableBd", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryTaxableBd { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryTaxable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryTaxable { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryNet", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryNet { get; set; }

        [Newtonsoft.Json.JsonProperty("isAddedToSalaryToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAddedToSalaryToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipLine> GrhPaySlipLines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipModelLine> GrhPaySlipModelLines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnityEntityValues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipModelUnityEntityValue> GrhPaySlipModelUnityEntityValues { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlCategoryPrevision
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PrevisionYear { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionMonth", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PrevisionMonth { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PrevisionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StlCategory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("codeCountable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeCountable { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("parentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ParentId { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithoutPrevision", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithoutPrevision { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("isCharge", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCharge { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountForPaymentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountForPaymentId { get; set; }

        [Newtonsoft.Json.JsonProperty("isProduct", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlAccount StlAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultAccount> ActDefaultAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationExclusions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationExclusion> ActStockVariationExclusions { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationEstimationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationEstimationLine> BuyConsultationEstimationLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationLine> BuyConsultationLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOfferLine> BuyConsultationOfferLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentLine> BuyDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyItem> BuyItems { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanTypeBaseStlCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoanType> BuyLoanTypeBaseStlCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanTypeCommissionStlCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoanType> BuyLoanTypeCommissionStlCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanTypeInterestStlCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoanType> BuyLoanTypeInterestStlCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionLine> BuySelectionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("buyVentilationCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyVentilationCategory> BuyVentilationCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlementCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlementCategory> ComSettlementCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("fsprevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Fsprevision> Fsprevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipModelUnity> GrhPaySlipModelUnities { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClauseLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjClauseLine> PrjClauseLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLineEstimations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLineEstimation> PrjMarketLineEstimations { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketLine> PrjMarketLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOfferLine> PrjMarketOfferLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPrevisionModels", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketPrevisionModel> PrjMarketPrevisionModels { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketVentilationCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketVentilationCategory> PrjMarketVentilationCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectProgressCriteriaLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProjectProgressCriteriaLine> PrjProjectProgressCriteriaLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLineExtras", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLineExtra> PrjWorkingOutLineExtras { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOutLine> PrjWorkingOutLines { get; set; }

        [Newtonsoft.Json.JsonProperty("prvSettlementPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvSettlementPrevision> PrvSettlementPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTurnoverPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvTurnoverPrevision> PrvTurnoverPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlementCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntSettlementCategory> RntSettlementCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savComplaintCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavComplaintCategory> SavComplaintCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpenseTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkExpenseType> StkExpenseTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFsprevisionStkTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFsprevisionStkTranche> StkFsprevisionStkTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemCategory> StkItemCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItemType> StkItemTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlCategoryPrevision> StlCategoryPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocumentLine> StlDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinitions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemDefinition> StlItemDefinitions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItem> StlItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlVentilationCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlVentilationCategory> StlVentilationCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrEntity> StrEntities { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmNotification
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("note", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Note { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("entityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? EntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("fromUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FromUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("toUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ToUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("isRead", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRead { get; set; }

        [Newtonsoft.Json.JsonProperty("isOpened", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOpened { get; set; }

        [Newtonsoft.Json.JsonProperty("fromUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser FromUser { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("toUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser ToUser { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmToDoListLineState
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isDone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsDone { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Color { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoListLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmToDoListLine> AdmToDoListLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmToDoListLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoListLineStateId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmToDoListLineStateId { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoListId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmToDoListId { get; set; }

        [Newtonsoft.Json.JsonProperty("entityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? EntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoList", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmToDoList AdmToDoList { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoListLineState", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmToDoListLineState AdmToDoListLineState { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmToDoList
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("note", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Note { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoListLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmToDoListLine> AdmToDoListLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("objectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ObjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string AdmUserDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkflowId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrWorkflowId { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkflowDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string StrWorkflowDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatusDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string StrStatusDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class StrEntity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("isCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("withWorkFlow", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? WithWorkFlow { get; set; }

        [Newtonsoft.Json.JsonProperty("isCharge", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsCharge { get; set; }

        [Newtonsoft.Json.JsonProperty("queryString", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string QueryString { get; set; }

        [Newtonsoft.Json.JsonProperty("reportsQueryString", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ReportsQueryString { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccountable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccountable { get; set; }

        [Newtonsoft.Json.JsonProperty("objectPath", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ObjectPath { get; set; }

        [Newtonsoft.Json.JsonProperty("objectForm", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ObjectForm { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultAccountCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ActDefaultAccountCode { get; set; }

        [Newtonsoft.Json.JsonProperty("isProduct", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("strTierFieldId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrTierFieldId { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField001Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField001Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField002Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField002Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField003Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField003Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField004Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField004Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField005Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField005Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField006Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField006Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField007Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField007Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField008Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField008Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField009Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField009Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField010Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField010Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField011Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField011Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField012Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField012Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField013Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField013Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField014Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField014Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField015Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField015Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField016Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField016Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField017Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField017Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField018Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField018Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField019Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField019Label { get; set; }

        [Newtonsoft.Json.JsonProperty("boolField020Label", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BoolField020Label { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCategory StlCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActAccount> ActAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntryStrEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntryStrEntities { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntryStrEntityRelations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntryStrEntityRelations { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActJournal> ActJournals { get; set; }

        [Newtonsoft.Json.JsonProperty("admAttachedFileTypeStrEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmAttachedFileTypeStrEntity> AdmAttachedFileTypeStrEntities { get; set; }

        [Newtonsoft.Json.JsonProperty("admEvents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmEvent> AdmEvents { get; set; }

        [Newtonsoft.Json.JsonProperty("admNotifications", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmNotification> AdmNotifications { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoLists", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmToDoList> AdmToDoLists { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentWorkFlow> BuyDocumentWorkFlows { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoan> BuyLoans { get; set; }

        [Newtonsoft.Json.JsonProperty("buyRequests", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyRequest> BuyRequests { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAdvances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhAdvance> GrhAdvances { get; set; }

        [Newtonsoft.Json.JsonProperty("grhCredits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhCredit> GrhCredits { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDisciplines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhDiscipline> GrhDisciplines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhOverTimes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhOverTime> GrhOverTimes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }

        [Newtonsoft.Json.JsonProperty("grhResignations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhResignation> GrhResignations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhTerminations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhTermination> GrhTerminations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacationGroup> GrhVacationGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacation> GrhVacations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDays { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketPaymentPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketPaymentPrevision> PrjMarketPaymentPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarkets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarket> PrjMarkets { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolderWorkFlow> RntFolderWorkFlows { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudy> StkFeasibilityStudies { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyWorkFlow> StkFeasibilityStudyWorkFlows { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountPositions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccountPosition> StlAccountPositions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDeposits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAcountDeposit> StlAcountDeposits { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> StlDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransfers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransfers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlip> StlSlips { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheets", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheets { get; set; }

        [Newtonsoft.Json.JsonProperty("strAttachments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrAttachment> StrAttachments { get; set; }

        [Newtonsoft.Json.JsonProperty("strFields", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrField> StrFields { get; set; }

        [Newtonsoft.Json.JsonProperty("strHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrHistory> StrHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("strInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrIntervener> StrInterveners { get; set; }

        [Newtonsoft.Json.JsonProperty("strNotifications", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrNotification> StrNotifications { get; set; }

        [Newtonsoft.Json.JsonProperty("strReports", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrReport> StrReports { get; set; }

        [Newtonsoft.Json.JsonProperty("strStatuses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrStatus> StrStatuses { get; set; }

        [Newtonsoft.Json.JsonProperty("strWorkFlows", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrWorkFlow> StrWorkFlows { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActJournal
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournalTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActJournalTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournalType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActJournalType ActJournalType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultJournals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultJournal> ActDefaultJournals { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActEntry
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("docCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocCode { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournalId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActJournalId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlSettlementId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalCancellationId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProductId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalProductId { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComSaleWithdrawalClientId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityRelationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityRelationId { get; set; }

        [Newtonsoft.Json.JsonProperty("relationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RelationId { get; set; }

        [Newtonsoft.Json.JsonProperty("relationCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RelationCode { get; set; }

        [Newtonsoft.Json.JsonProperty("relationDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RelationDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActJournal ActJournal { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalCancellation ComSaleWithdrawalCancellation { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClient", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalClient ComSaleWithdrawalClient { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProduct", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComSaleWithdrawalProduct ComSaleWithdrawalProduct { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlDocument StlDocument { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlSettlement StlSettlement { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityRelation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntityRelation { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntryLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntryLine> ActEntryLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmModule
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("prvSettlementPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvSettlementPrevision> PrvSettlementPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTurnoverPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvTurnoverPrevision> PrvTurnoverPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> StlDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemDefinitions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemDefinition> StlItemDefinitions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrEntity> StrEntities { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocumentOrigin
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyOrigin", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BuyOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocument", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyDocument { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyDocument
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("amountHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountHt { get; set; }

        [Newtonsoft.Json.JsonProperty("amountVat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountVat { get; set; }

        [Newtonsoft.Json.JsonProperty("amountTtc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountTtc { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalStamp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FiscalStamp { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("maturityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? MaturityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("docType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("isSelected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSelected { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("docRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DocRef { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRegul", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRegul { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosed { get; set; }

        [Newtonsoft.Json.JsonProperty("referenceType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ReferenceType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketId { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("warrantyAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WarrantyAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("proportionRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProportionRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("proportionAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProportionAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecratio { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecamount { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcratio { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcamount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcamount { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceRest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceRest { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceDecrest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceDecrest { get; set; }

        [Newtonsoft.Json.JsonProperty("insuranceTrcrest", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? InsuranceTrcrest { get; set; }

        [Newtonsoft.Json.JsonProperty("supplierDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SupplierDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("canBePayed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanBePayed { get; set; }

        [Newtonsoft.Json.JsonProperty("linesCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LinesCount { get; set; }

        [Newtonsoft.Json.JsonProperty("previsionDeliveryDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? PrevisionDeliveryDate { get; set; }

        [Newtonsoft.Json.JsonProperty("parentDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string ParentDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyLoanId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanScheduleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyLoanScheduleId { get; set; }

        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string State { get; set; }

        [Newtonsoft.Json.JsonProperty("personToContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PersonToContact { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpenseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkExpenseId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModuleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmModuleId { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmountToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmountToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("workingOutAdvanceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? WorkingOutAdvanceAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("isRejected", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRejected { get; set; }

        [Newtonsoft.Json.JsonProperty("retainedAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RetainedAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("prorataRefundAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? ProrataRefundAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuationsToPay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FluctuationsToPay { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjProjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyDocumentStatusId { get; set; }

        [Newtonsoft.Json.JsonProperty("statusValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StatusValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultRsbasedOnRetainedAmounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? DefaultRsbasedOnRetainedAmounts { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTriggerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierTriggerId { get; set; }

        [Newtonsoft.Json.JsonProperty("invoiceSourceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? InvoiceSourceId { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOutId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjWorkingOutId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyOrderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyOrderId { get; set; }

        [Newtonsoft.Json.JsonProperty("orderAdvanceRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? OrderAdvanceRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("buyQuoteId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyQuoteId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyInvoiceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyInvoiceId { get; set; }

        [Newtonsoft.Json.JsonProperty("amountToPayOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountToPayOld { get; set; }

        [Newtonsoft.Json.JsonProperty("amountBeforeRsOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountBeforeRsOld { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRsOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AmountRsOld { get; set; }

        [Newtonsoft.Json.JsonProperty("amountRsbasedOnAmountOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? AmountRsbasedOnAmountOld { get; set; }

        [Newtonsoft.Json.JsonProperty("rsratioOld", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RsratioOld { get; set; }

        [Newtonsoft.Json.JsonProperty("isFinancialRefund", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsFinancialRefund { get; set; }

        [Newtonsoft.Json.JsonProperty("notes2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Notes2 { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjMarketTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("officeOrderRef", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string OfficeOrderRef { get; set; }

        [Newtonsoft.Json.JsonProperty("isPropotionCharged", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPropotionCharged { get; set; }

        [Newtonsoft.Json.JsonProperty("stockAmountToPayHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? StockAmountToPayHt { get; set; }

        [Newtonsoft.Json.JsonProperty("fluctuationsToPayHt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FluctuationsToPayHt { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationId { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyConsultationOfferId { get; set; }

        [Newtonsoft.Json.JsonProperty("isAccounted", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsAccounted { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuySelectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RntFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SynFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClauseId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? PrjClauseId { get; set; }

        [Newtonsoft.Json.JsonProperty("admModule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmModule AdmModule { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyConsultation BuyConsultation { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocumentStatus BuyDocumentStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyFolder BuyFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("buyInvoice", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyInvoice { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoan", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyLoan BuyLoan { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoanSchedule", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyLoanSchedule BuyLoanSchedule { get; set; }

        [Newtonsoft.Json.JsonProperty("buyOrder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyOrder { get; set; }

        [Newtonsoft.Json.JsonProperty("buyQuote", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument BuyQuote { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuySelection BuySelection { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTrigger", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTierTrigger { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComFolder ComFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("invoiceSource", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyDocument InvoiceSource { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClause", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjClause PrjClause { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarket", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarket PrjMarket { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOffer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketOffer PrjMarketOffer { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjMarketType PrjMarketType { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProject", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjProject PrjProject { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOut", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public PrjWorkingOut PrjWorkingOut { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public RntFolder RntFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("stkExpense", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkExpense StkExpense { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SynFolder SynFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentDocumentToAttaches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentDocumentToAttach> BuyDocumentDocumentToAttaches { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentLine> BuyDocumentLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentOrigins", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentOrigin> BuyDocumentOrigins { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentStatusHistory> BuyDocumentStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("buySettlementLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySettlementLine> BuySettlementLines { get; set; }

        [Newtonsoft.Json.JsonProperty("buyVentilationCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyVentilationCategory> BuyVentilationCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("buyVentilationExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyVentilationExpense> BuyVentilationExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseBuyInvoice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> InverseBuyInvoice { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseBuyOrder", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> InverseBuyOrder { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseBuyQuote", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> InverseBuyQuote { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseInvoiceSource", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> InverseInvoiceSource { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOuts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOut> PrjWorkingOuts { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountingEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccountingEntry> StlAccountingEntries { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class BuyFolder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosed { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolderPrjProjectVentilations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyFolderPrjProjectVentilation> BuyFolderPrjProjectVentilations { get; set; }

        [Newtonsoft.Json.JsonProperty("comActions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComAction> ComActions { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComAction
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("colorName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ColorName { get; set; }

        [Newtonsoft.Json.JsonProperty("isActive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsActive { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? BuyFolderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("budget", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Budget { get; set; }

        [Newtonsoft.Json.JsonProperty("canAddTotalCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanAddTotalCost { get; set; }

        [Newtonsoft.Json.JsonProperty("totalCost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? TotalCost { get; set; }

        [Newtonsoft.Json.JsonProperty("buyFolder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public BuyFolder BuyFolder { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionCfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionCfgTranche> ComActionCfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalesCommissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSalesCommission> ComSalesCommissions { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionClosingReason
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspection
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("docDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? DocDate { get; set; }

        [Newtonsoft.Json.JsonProperty("area", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Area { get; set; }

        [Newtonsoft.Json.JsonProperty("price", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Price { get; set; }

        [Newtonsoft.Json.JsonProperty("advanceAmount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AdvanceAmount { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProspectId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProspectId { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("areaTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? AreaTo { get; set; }

        [Newtonsoft.Json.JsonProperty("priceTo", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? PriceTo { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkVocationId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("fundingOwnBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FundingOwnBase { get; set; }

        [Newtonsoft.Json.JsonProperty("fundingCredit", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FundingCredit { get; set; }

        [Newtonsoft.Json.JsonProperty("fundingOther", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? FundingOther { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginSupportId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionOriginSupportId { get; set; }

        [Newtonsoft.Json.JsonProperty("alertValidityDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AlertValidityDate { get; set; }

        [Newtonsoft.Json.JsonProperty("alertMessage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string AlertMessage { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercialId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCommercialId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkHierarchyId { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StkItemId { get; set; }

        [Newtonsoft.Json.JsonProperty("isClosed", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsClosed { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("closingDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ClosingDate { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionClosingReasonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionClosingReasonId { get; set; }

        [Newtonsoft.Json.JsonProperty("closingReasonText", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ClosingReasonText { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProposerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgProposerId { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComActionMessageTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("isOldCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOldCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("isPreProspection", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPreProspection { get; set; }

        [Newtonsoft.Json.JsonProperty("tempDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("tempEmail", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempEmail { get; set; }

        [Newtonsoft.Json.JsonProperty("tempTel", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempTel { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField1 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField2 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField3 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField4", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField4 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField5", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField5 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField6", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField6 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField7", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField7 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField8", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField8 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField9", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField9 { get; set; }

        [Newtonsoft.Json.JsonProperty("tempField10", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TempField10 { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("mapLatitude", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MapLatitude { get; set; }

        [Newtonsoft.Json.JsonProperty("mapLongitude", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MapLongitude { get; set; }

        [Newtonsoft.Json.JsonProperty("mapRadius", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MapRadius { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgIntermediateId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgIntermediateId { get; set; }

        [Newtonsoft.Json.JsonProperty("comPaymentMethodId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComPaymentMethodId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercial", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCommercial { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgIntermediate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgIntermediate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProposer", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgProposer { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProspect", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgProspect { get; set; }

        [Newtonsoft.Json.JsonProperty("comAction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComAction ComAction { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComActionMessageType ComActionMessageType { get; set; }

        [Newtonsoft.Json.JsonProperty("comPaymentMethod", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComPaymentMethod ComPaymentMethod { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionClosingReason", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionClosingReason ComProspectionClosingReason { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionKind ComProspectionKind { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOrigin", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOrigin ComProspectionOrigin { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionOriginSupport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspectionOriginSupport ComProspectionOriginSupport { get; set; }

        [Newtonsoft.Json.JsonProperty("stkHierarchy", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTranche StkHierarchy { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItem", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkItem StkItem { get; set; }

        [Newtonsoft.Json.JsonProperty("stkVocation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StkVocation StkVocation { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderGifts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderGift> ComFolderGifts { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("comOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOffer> ComOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionCategory> ComProspectionCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionCity> ComProspectionCities { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionProject> ComProspectionProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionSelectedProfiles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionSelectedProfile> ComProspectionSelectedProfiles { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionTypes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionType> ComProspectionTypes { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolders { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ComProspectionCity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admCityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCityId { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ComProspectionId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCity AdmCity { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspection", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ComProspection ComProspection { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmCity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspectionCity> ComProspectionCities { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmCountry
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("isoalpha3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Isoalpha3 { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionAn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string DescriptionAn { get; set; }

        [Newtonsoft.Json.JsonProperty("isoname", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Isoname { get; set; }

        [Newtonsoft.Json.JsonProperty("nationCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string NationCode { get; set; }

        [Newtonsoft.Json.JsonProperty("phoneCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PhoneCode { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("phoneFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string PhoneFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("webPhoneFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string WebPhoneFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("admCities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmCity> AdmCities { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompany> CfgCompanies { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgProject> CfgProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierAdmCountries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTierAdmCountries { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierAdmCountryResidences", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTierAdmCountryResidences { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspections { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLands", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLands { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItems", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItems { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgCompanyShareholder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("sharingNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SharingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgShareholderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgShareholderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgShareholder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgShareholder CfgShareholder { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgShareholder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyShareholders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompanyShareholder> CfgCompanyShareholders { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgGroupShareholderLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgGroupShareholderLine> CfgGroupShareholderLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgGroupShareholderLine
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgGroupShareholderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgGroupShareholderId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgShareholderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgShareholderId { get; set; }

        [Newtonsoft.Json.JsonProperty("sharingNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SharingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgGroupShareholder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgGroupShareholder CfgGroupShareholder { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgShareholder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgShareholder CfgShareholder { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgGroupShareholder
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompany> CfgCompanies { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgGroupShareholderLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgGroupShareholderLine> CfgGroupShareholderLines { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmSequence
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("seqYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SeqYear { get; set; }

        [Newtonsoft.Json.JsonProperty("seqYearNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SeqYearNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("seqValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SeqValue { get; set; }

        [Newtonsoft.Json.JsonProperty("seqValueNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SeqValueNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("separator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Separator { get; set; }

        [Newtonsoft.Json.JsonProperty("basedOnSystemYear", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? BasedOnSystemYear { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("typeCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string TypeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("seqPrefix", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SeqPrefix { get; set; }

        [Newtonsoft.Json.JsonProperty("seqSuffix", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SeqSuffix { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgCompany
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FiscalNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("commercialRegister", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CommercialRegister { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("mobile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Mobile { get; set; }

        [Newtonsoft.Json.JsonProperty("phone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Phone { get; set; }

        [Newtonsoft.Json.JsonProperty("fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Fax { get; set; }

        [Newtonsoft.Json.JsonProperty("webSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string WebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("address2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address2 { get; set; }

        [Newtonsoft.Json.JsonProperty("address3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address3 { get; set; }

        [Newtonsoft.Json.JsonProperty("zipCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ZipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string City { get; set; }

        [Newtonsoft.Json.JsonProperty("signatureCity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SignatureCity { get; set; }

        [Newtonsoft.Json.JsonProperty("legalForm", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string LegalForm { get; set; }

        [Newtonsoft.Json.JsonProperty("creationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("capital", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Capital { get; set; }

        [Newtonsoft.Json.JsonProperty("cnss", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Cnss { get; set; }

        [Newtonsoft.Json.JsonProperty("patent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Patent { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admSignatoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmSignatoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("totalSharing", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? TotalSharing { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTechnicalManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTechnicalManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSalesManagerId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgSalesManagerId { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionLong", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string DescriptionLong { get; set; }

        [Newtonsoft.Json.JsonProperty("ice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Ice { get; set; }

        [Newtonsoft.Json.JsonProperty("sharingNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SharingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("liquidationDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? LiquidationDate { get; set; }

        [Newtonsoft.Json.JsonProperty("isActive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsActive { get; set; }

        [Newtonsoft.Json.JsonProperty("homePart", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? HomePart { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgGroupShareholderId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgGroupShareholderId { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("admSignatory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier AdmSignatory { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgGroupShareholder", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgGroupShareholder CfgGroupShareholder { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgSalesManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgSalesManager { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTechnicalManager", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTechnicalManager { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActAccount> ActAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultAccount> ActDefaultAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultJournals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultJournal> ActDefaultJournals { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultSettlement> ActDefaultSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntry> ActEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActJournal> ActJournals { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationCoefs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationCoef> ActStockVariationCoefs { get; set; }

        [Newtonsoft.Json.JsonProperty("actStockVariationExclusions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActStockVariationExclusion> ActStockVariationExclusions { get; set; }

        [Newtonsoft.Json.JsonProperty("actTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActTier> ActTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("admSequences", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmSequence> AdmSequences { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserHabilitations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUserHabilitation> AdmUserHabilitations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("buyLoans", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyLoan> BuyLoans { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyShareholders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompanyShareholder> CfgCompanyShareholders { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgProject> CfgProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierKinds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTierKind> CfgTierKinds { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentPaymentMethods", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocumentPaymentMethod> ComDocumentPaymentMethods { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAdvances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhAdvance> GrhAdvances { get; set; }

        [Newtonsoft.Json.JsonProperty("grhCredits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhCredit> GrhCredits { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDepartments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhDepartment> GrhDepartments { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDisciplines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhDiscipline> GrhDisciplines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEchelons", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEchelon> GrhEchelons { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeCategory> GrhEmployeeCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhOverTimes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhOverTime> GrhOverTimes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelUnityEntityValues", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlipModelUnityEntityValue> GrhPaySlipModelUnityEntityValues { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }

        [Newtonsoft.Json.JsonProperty("grhResignations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhResignation> GrhResignations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhTerminations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhTermination> GrhTerminations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacationGroup> GrhVacationGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacation> GrhVacations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDays", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDays { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProject> PrjProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("prvSettlementPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvSettlementPrevision> PrvSettlementPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("prvTurnoverPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrvTurnoverPrevision> PrvTurnoverPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("savServiceExpenses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavServiceExpense> SavServiceExpenses { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudy> StkFeasibilityStudies { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCfgCompanies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItemCfgCompanies { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCfgCompanySyndics", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItemCfgCompanySyndics { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountingEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccountingEntry> StlAccountingEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccount> StlAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategoryPrevisions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlCategoryPrevision> StlCategoryPrevisions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDeposits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDeposit> StlDeposits { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> StlDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferCfgCompanies", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferCfgCompanies { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferCfgCompanyTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferCfgCompanyTos { get; set; }

        [Newtonsoft.Json.JsonProperty("stlItemPricings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlItemPricing> StlItemPricings { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlProjectVentilations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlProjectVentilation> StlProjectVentilations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolders", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolders { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlip> StlSlips { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTrancheVentilations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTrancheVentilation> StlTrancheVentilations { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetCfgCompanyFroms", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheetCfgCompanyFroms { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetCfgCompanyTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheetCfgCompanyTos { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class ActAccount
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("isTierAccountMandatory", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsTierAccountMandatory { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StrEntityId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccountType ActAccountType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StrEntity StrEntity { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultAccount> ActDefaultAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("actDefaultSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActDefaultSettlement> ActDefaultSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("actEntryLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActEntryLine> ActEntryLines { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTranches", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTranches { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCategories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlCategory> StlCategories { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeActAccountCredits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlementType> StlSettlementTypeActAccountCredits { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTypeActAccountDebits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlementType> StlSettlementTypeActAccountDebits { get; set; }

        [Newtonsoft.Json.JsonProperty("strEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrEntity> StrEntities { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmIdentityDocumentType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmLiability
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("isExonarated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsExonarated { get; set; }

        [Newtonsoft.Json.JsonProperty("isMajorated", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsMajorated { get; set; }

        [Newtonsoft.Json.JsonProperty("majorationValue", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? MajorationValue { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmNationality
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmProfession
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("isWithSalary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsWithSalary { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmRank
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("rank", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Rank { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmResidenceType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmSalary
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmTierTitle
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admSexTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmSexTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admSexType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmSexType AdmSexType { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmSexType
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admTierTitles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmTierTitle> AdmTierTitles { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmSocialForm
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("isPerson", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsPerson { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> CfgTiers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmMailModel
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Type { get; set; }

        [Newtonsoft.Json.JsonProperty("modelFile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public byte[] ModelFile { get; set; }

        [Newtonsoft.Json.JsonProperty("sorting", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Sorting { get; set; }

        [Newtonsoft.Json.JsonProperty("admMailings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmMailing> AdmMailings { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmMailing
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("tierFromId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? TierFromId { get; set; }

        [Newtonsoft.Json.JsonProperty("tierToId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? TierToId { get; set; }

        [Newtonsoft.Json.JsonProperty("tierCcid", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? TierCcid { get; set; }

        [Newtonsoft.Json.JsonProperty("massage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Massage { get; set; }

        [Newtonsoft.Json.JsonProperty("mailObject", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string MailObject { get; set; }

        [Newtonsoft.Json.JsonProperty("admMailModelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmMailModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("relationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? RelationId { get; set; }

        [Newtonsoft.Json.JsonProperty("relationNameSpace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string RelationNameSpace { get; set; }

        [Newtonsoft.Json.JsonProperty("isSent", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsSent { get; set; }

        [Newtonsoft.Json.JsonProperty("admMailModel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmMailModel AdmMailModel { get; set; }

        [Newtonsoft.Json.JsonProperty("tierCc", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier TierCc { get; set; }

        [Newtonsoft.Json.JsonProperty("tierTo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier TierTo { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTierContact
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContactId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgContactId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgRelationTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgRelationTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgContact { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTierVatExonaration
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgTier { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class CfgTier
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("phone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string Phone { get; set; }

        [Newtonsoft.Json.JsonProperty("phone1", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string Phone1 { get; set; }

        [Newtonsoft.Json.JsonProperty("phone2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string Phone2 { get; set; }

        [Newtonsoft.Json.JsonProperty("fax", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string Fax { get; set; }

        [Newtonsoft.Json.JsonProperty("mobile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public string Mobile { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("webSite", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string WebSite { get; set; }

        [Newtonsoft.Json.JsonProperty("socialReason", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SocialReason { get; set; }

        [Newtonsoft.Json.JsonProperty("notes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Notes { get; set; }

        [Newtonsoft.Json.JsonProperty("bankAgency", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BankAgency { get; set; }

        [Newtonsoft.Json.JsonProperty("rib", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Rib { get; set; }

        [Newtonsoft.Json.JsonProperty("iban", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Iban { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FiscalCode { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalRegistry", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FiscalRegistry { get; set; }

        [Newtonsoft.Json.JsonProperty("fiscalDouane", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FiscalDouane { get; set; }

        [Newtonsoft.Json.JsonProperty("firstName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FirstName { get; set; }

        [Newtonsoft.Json.JsonProperty("lastName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string LastName { get; set; }

        [Newtonsoft.Json.JsonProperty("birthPlace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string BirthPlace { get; set; }

        [Newtonsoft.Json.JsonProperty("birthDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? BirthDate { get; set; }

        [Newtonsoft.Json.JsonProperty("nbrChildren", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NbrChildren { get; set; }

        [Newtonsoft.Json.JsonProperty("asset", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Asset { get; set; }

        [Newtonsoft.Json.JsonProperty("quality", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string Quality { get; set; }

        [Newtonsoft.Json.JsonProperty("idnumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Idnumber { get; set; }

        [Newtonsoft.Json.JsonProperty("iddate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? Iddate { get; set; }

        [Newtonsoft.Json.JsonProperty("idplace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Idplace { get; set; }

        [Newtonsoft.Json.JsonProperty("idvalidateDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? IdvalidateDate { get; set; }

        [Newtonsoft.Json.JsonProperty("idvalidatePlace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string IdvalidatePlace { get; set; }

        [Newtonsoft.Json.JsonProperty("isProspect", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsProspect { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBankId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgBankId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercialId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCommercialId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContactId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgContactId { get; set; }

        [Newtonsoft.Json.JsonProperty("codeCountable", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeCountable { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierKindId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgTierKindId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admTierTitleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmTierTitleId { get; set; }

        [Newtonsoft.Json.JsonProperty("fatherName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string FatherName { get; set; }

        [Newtonsoft.Json.JsonProperty("motherName", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string MotherName { get; set; }

        [Newtonsoft.Json.JsonProperty("employer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Employer { get; set; }

        [Newtonsoft.Json.JsonProperty("address", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address { get; set; }

        [Newtonsoft.Json.JsonProperty("address2", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address2 { get; set; }

        [Newtonsoft.Json.JsonProperty("address3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Address3 { get; set; }

        [Newtonsoft.Json.JsonProperty("zipCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string ZipCode { get; set; }

        [Newtonsoft.Json.JsonProperty("city", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string City { get; set; }

        [Newtonsoft.Json.JsonProperty("antiquity", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Antiquity { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryResidenceId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCountryResidenceId { get; set; }

        [Newtonsoft.Json.JsonProperty("admSocialFormId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmSocialFormId { get; set; }

        [Newtonsoft.Json.JsonProperty("admLiabilityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmLiabilityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admFamilySituationId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmFamilySituationId { get; set; }

        [Newtonsoft.Json.JsonProperty("admResidenceTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmResidenceTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admMatrimonialRegimeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmMatrimonialRegimeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admIdentityDocumentTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmIdentityDocumentTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admSexTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmSexTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("admNationalityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmNationalityId { get; set; }

        [Newtonsoft.Json.JsonProperty("admProfessionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmProfessionId { get; set; }

        [Newtonsoft.Json.JsonProperty("admSalaryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmSalaryId { get; set; }

        [Newtonsoft.Json.JsonProperty("mobileIndicatif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string MobileIndicatif { get; set; }

        [Newtonsoft.Json.JsonProperty("phoneIndicatif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string PhoneIndicatif { get; set; }

        [Newtonsoft.Json.JsonProperty("phone1Indicatif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string Phone1Indicatif { get; set; }

        [Newtonsoft.Json.JsonProperty("phone2Indicatif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string Phone2Indicatif { get; set; }

        [Newtonsoft.Json.JsonProperty("faxIndicatif", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public string FaxIndicatif { get; set; }

        [Newtonsoft.Json.JsonProperty("admCityId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmCityId { get; set; }

        [Newtonsoft.Json.JsonProperty("codeCountableCollective", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string CodeCountableCollective { get; set; }

        [Newtonsoft.Json.JsonProperty("admRankId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmRankId { get; set; }

        [Newtonsoft.Json.JsonProperty("isOldCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsOldCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("isExtern", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsExtern { get; set; }

        [Newtonsoft.Json.JsonProperty("ice", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Ice { get; set; }

        [Newtonsoft.Json.JsonProperty("isRntCustomer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRntCustomer { get; set; }

        [Newtonsoft.Json.JsonProperty("isVisibleInList", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsVisibleInList { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccountId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActAccountId { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournalId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ActJournalId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDepartmentId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhDepartmentId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCategoryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEmployeeCategoryId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEchelonId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhEchelonId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAgreementTypeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhAgreementTypeId { get; set; }

        [Newtonsoft.Json.JsonProperty("socialSecurityNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SocialSecurityNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgCompanyId { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModelId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? GrhPaySlipModelId { get; set; }

        [Newtonsoft.Json.JsonProperty("hireDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? HireDate { get; set; }

        [Newtonsoft.Json.JsonProperty("agreementDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? AgreementDate { get; set; }

        [Newtonsoft.Json.JsonProperty("fireDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? FireDate { get; set; }

        [Newtonsoft.Json.JsonProperty("nbrChildrenHandicap", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NbrChildrenHandicap { get; set; }

        [Newtonsoft.Json.JsonProperty("salaryBase", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? SalaryBase { get; set; }

        [Newtonsoft.Json.JsonProperty("baseMonthNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseMonthNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseWorkedDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseWorkedDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("baseVacationDaysNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? BaseVacationDaysNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? StlCurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("rsRatio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? RsRatio { get; set; }

        [Newtonsoft.Json.JsonProperty("isFundReader", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsFundReader { get; set; }

        [Newtonsoft.Json.JsonProperty("vatratio", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double? Vatratio { get; set; }

        [Newtonsoft.Json.JsonProperty("actAccount", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActAccount ActAccount { get; set; }

        [Newtonsoft.Json.JsonProperty("actJournal", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public ActJournal ActJournal { get; set; }

        [Newtonsoft.Json.JsonProperty("admCity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCity AdmCity { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountry", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountry { get; set; }

        [Newtonsoft.Json.JsonProperty("admCountryResidence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmCountry AdmCountryResidence { get; set; }

        [Newtonsoft.Json.JsonProperty("admFamilySituation", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmFamilySituation AdmFamilySituation { get; set; }

        [Newtonsoft.Json.JsonProperty("admIdentityDocumentType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmIdentityDocumentType AdmIdentityDocumentType { get; set; }

        [Newtonsoft.Json.JsonProperty("admLiability", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmLiability AdmLiability { get; set; }

        [Newtonsoft.Json.JsonProperty("admMatrimonialRegime", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmMatrimonialRegime AdmMatrimonialRegime { get; set; }

        [Newtonsoft.Json.JsonProperty("admNationality", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmNationality AdmNationality { get; set; }

        [Newtonsoft.Json.JsonProperty("admProfession", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmProfession AdmProfession { get; set; }

        [Newtonsoft.Json.JsonProperty("admRank", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRank AdmRank { get; set; }

        [Newtonsoft.Json.JsonProperty("admResidenceType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmResidenceType AdmResidenceType { get; set; }

        [Newtonsoft.Json.JsonProperty("admSalary", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmSalary AdmSalary { get; set; }

        [Newtonsoft.Json.JsonProperty("admSexType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmSexType AdmSexType { get; set; }

        [Newtonsoft.Json.JsonProperty("admSocialForm", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmSocialForm AdmSocialForm { get; set; }

        [Newtonsoft.Json.JsonProperty("admTierTitle", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmTierTitle AdmTierTitle { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgBank", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgBank { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCommercial", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgCommercial { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompany", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgCompany CfgCompany { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgContact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgContact { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierKind", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTierKind CfgTierKind { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTierType CfgTierType { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAgreementType", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhAgreementType GrhAgreementType { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDepartment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhDepartment GrhDepartment { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEchelon", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhEchelon GrhEchelon { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeCategory", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhEmployeeCategory GrhEmployeeCategory { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlipModel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public GrhPaySlipModel GrhPaySlipModel { get; set; }

        [Newtonsoft.Json.JsonProperty("stlCurrency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public StlCurrency StlCurrency { get; set; }

        [Newtonsoft.Json.JsonProperty("actTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ActTier> ActTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("admEvents", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmEvent> AdmEvents { get; set; }

        [Newtonsoft.Json.JsonProperty("admMailingTierCcs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmMailing> AdmMailingTierCcs { get; set; }

        [Newtonsoft.Json.JsonProperty("admMailingTierTos", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmMailing> AdmMailingTierTos { get; set; }

        [Newtonsoft.Json.JsonProperty("admUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUser> AdmUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("bulDelegateContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulDelegateContact> BulDelegateContacts { get; set; }

        [Newtonsoft.Json.JsonProperty("bulDelegates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulDelegate> BulDelegates { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingContact> BulMeetingContacts { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetingLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeetingLine> BulMeetingLines { get; set; }

        [Newtonsoft.Json.JsonProperty("bulMeetings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BulMeeting> BulMeetings { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOfferSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOfferSupplier> BuyConsultationOfferSuppliers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationOffer> BuyConsultationOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultation> BuyConsultations { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentCfgTierTriggers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocumentCfgTierTriggers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocument> BuyDocumentCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("buyRequests", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyRequest> BuyRequests { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelectionSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelectionSupplier> BuySelectionSuppliers { get; set; }

        [Newtonsoft.Json.JsonProperty("buySelections", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuySelection> BuySelections { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyAdmSignatories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompany> CfgCompanyAdmSignatories { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyCfgSalesManagers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompany> CfgCompanyCfgSalesManagers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyCfgTechnicalManagers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompany> CfgCompanyCfgTechnicalManagers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgCompanyCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgCompany> CfgCompanyCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectAdmSignatories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgProject> CfgProjectAdmSignatories { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectCfgSalesManagers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgProject> CfgProjectCfgSalesManagers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgProjectCfgTechnicalManagers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgProject> CfgProjectCfgTechnicalManagers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierContactCfgContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTierContact> CfgTierContactCfgContacts { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierContactCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTierContact> CfgTierContactCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTierVatExonarations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTierVatExonaration> CfgTierVatExonarations { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheCfgClaimsManagers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTrancheCfgClaimsManagers { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgTrancheCfgTierOthers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTranche> CfgTrancheCfgTierOthers { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageCfgEmployees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessageCfgEmployees { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessageCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessageCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("comActions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComAction> ComActions { get; set; }

        [Newtonsoft.Json.JsonProperty("comCommissionLines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComCommissionLine> ComCommissionLines { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentCfgContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocumentCfgContacts { get; set; }

        [Newtonsoft.Json.JsonProperty("comDocumentCfgDebtCollectors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComDocument> ComDocumentCfgDebtCollectors { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCfgCommercials", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolderCfgCommercials { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCfgCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolderCfgCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCfgLawyers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolderCfgLawyers { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCfgOwners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolderCfgOwners { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCfgSaleManager2s", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolderCfgSaleManager2s { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCfgSaleManagers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolderCfgSaleManagers { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCreditBanks", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolder> ComFolderCreditBanks { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderCustomer> ComFolderCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComOffer> ComOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCfgCommercials", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspectionCfgCommercials { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCfgIntermediates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspectionCfgIntermediates { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCfgProposers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspectionCfgProposers { get; set; }

        [Newtonsoft.Json.JsonProperty("comProspectionCfgProspects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComProspection> ComProspectionCfgProspects { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationCfgBanks", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellationCfgBanks { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationCfgContacts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellationCfgContacts { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalCancellationCfgOldCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalCancellation> ComSaleWithdrawalCancellationCfgOldCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientCfgCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClient> ComSaleWithdrawalClientCfgCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientCfgOldCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClient> ComSaleWithdrawalClientCfgOldCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientNewCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClientNewCustomer> ComSaleWithdrawalClientNewCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalClientOldCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalClientOldCustomer> ComSaleWithdrawalClientOldCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("comSaleWithdrawalProducts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSaleWithdrawalProduct> ComSaleWithdrawalProducts { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalesCommissionCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSalesCommission> ComSalesCommissionCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("comSalesCommissionComEmployees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSalesCommission> ComSalesCommissionComEmployees { get; set; }

        [Newtonsoft.Json.JsonProperty("comSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComSettlement> ComSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("grhAdvances", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhAdvance> GrhAdvances { get; set; }

        [Newtonsoft.Json.JsonProperty("grhCredits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhCredit> GrhCredits { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDepartments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhDepartment> GrhDepartments { get; set; }

        [Newtonsoft.Json.JsonProperty("grhDisciplines", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhDiscipline> GrhDisciplines { get; set; }

        [Newtonsoft.Json.JsonProperty("grhEmployeeHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhEmployeeHistory> GrhEmployeeHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("grhOverTimes", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhOverTime> GrhOverTimes { get; set; }

        [Newtonsoft.Json.JsonProperty("grhPaySlips", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhPaySlip> GrhPaySlips { get; set; }

        [Newtonsoft.Json.JsonProperty("grhResignations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhResignation> GrhResignations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhTerminations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhTermination> GrhTerminations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacationGroupGrhEmployees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacationGroupGrhEmployee> GrhVacationGroupGrhEmployees { get; set; }

        [Newtonsoft.Json.JsonProperty("grhVacations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhVacation> GrhVacations { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDayCfgCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDayCfgCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("grhWorkedDayCfgEmployees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<GrhWorkedDay> GrhWorkedDayCfgEmployees { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseCfgBank", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> InverseCfgBank { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseCfgCommercial", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> InverseCfgCommercial { get; set; }

        [Newtonsoft.Json.JsonProperty("inverseCfgContact", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CfgTier> InverseCfgContact { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLandCfgLawyers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLandCfgLawyers { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLandCfgMiddlemen", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLandCfgMiddlemen { get; set; }

        [Newtonsoft.Json.JsonProperty("lndLandCfgSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<LndLand> LndLandCfgSuppliers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjClauses", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjClause> PrjClauses { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOfferSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOfferSupplier> PrjMarketOfferSuppliers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketOffers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketOffer> PrjMarketOffers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketReceptionCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketReceptionCfgTier> PrjMarketReceptionCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("prjProjects", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjProject> PrjProjects { get; set; }

        [Newtonsoft.Json.JsonProperty("prjWorkingOuts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjWorkingOut> PrjWorkingOuts { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferCfgCommercials", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOfferCfgCommercials { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferCfgCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOfferCfgCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferCfgIntermediates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOfferCfgIntermediates { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferCfgOwners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOfferCfgOwners { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferCfgProposers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOfferCfgProposers { get; set; }

        [Newtonsoft.Json.JsonProperty("prmRequestOfferCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrmRequestOffer> PrmRequestOfferCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntDocuments", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntDocument> RntDocuments { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderCfgCommercials", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolderCfgCommercials { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderCfgCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolderCfgCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderCfgLawyers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolderCfgLawyers { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderCfgOwners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolderCfgOwners { get; set; }

        [Newtonsoft.Json.JsonProperty("rntFolderCfgTierBailiffs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntFolder> RntFolderCfgTierBailiffs { get; set; }

        [Newtonsoft.Json.JsonProperty("rntRevivals", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntRevival> RntRevivals { get; set; }

        [Newtonsoft.Json.JsonProperty("rntSettlements", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<RntSettlement> RntSettlements { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaimGroups", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaimGroup> SavClaimGroups { get; set; }

        [Newtonsoft.Json.JsonProperty("savClaims", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavClaim> SavClaims { get; set; }

        [Newtonsoft.Json.JsonProperty("savServices", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SavService> SavServices { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCfgLawyers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItemCfgLawyers { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCfgMiddlemen", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItemCfgMiddlemen { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCfgOwners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItemCfgOwners { get; set; }

        [Newtonsoft.Json.JsonProperty("stkItemCfgSuppliers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkItem> StkItemCfgSuppliers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccountingEntries", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccountingEntry> StlAccountingEntries { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAccounts", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAccount> StlAccounts { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDepositGrhEmployeeClosings", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAcountDeposit> StlAcountDepositGrhEmployeeClosings { get; set; }

        [Newtonsoft.Json.JsonProperty("stlAcountDepositGrhEmployees", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlAcountDeposit> StlAcountDepositGrhEmployees { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentCfgDebtCollectors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> StlDocumentCfgDebtCollectors { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDocumentCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDocument> StlDocumentCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferCfgTierEmissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferCfgTierEmissions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferCfgTierReceptions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferCfgTierReceptions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlInternalTransferCfgTierTransmissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlInternalTransfer> StlInternalTransferCfgTierTransmissions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizationCfgTierOthers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizationCfgTierOthers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlPaymentAuthorizationCfgTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlPaymentAuthorization> StlPaymentAuthorizationCfgTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderCfgCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolderCfgCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderCfgDebtCollectors", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolderCfgDebtCollectors { get; set; }

        [Newtonsoft.Json.JsonProperty("stlRecoveryFolderCfgDebtManagers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlRecoveryFolder> StlRecoveryFolderCfgDebtManagers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementCfgBanks", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlementCfgBanks { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementCfgLawyers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlementCfgLawyers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementCfgTierOthers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlementCfgTierOthers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTierPayers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlementTierPayers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementTiers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlement> StlSettlementTiers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlipCfgTierEmissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlip> StlSlipCfgTierEmissions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSlipCfgTierTransmissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSlip> StlSlipCfgTierTransmissions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetCfgTierEmissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheetCfgTierEmissions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetCfgTierReceptions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheetCfgTierReceptions { get; set; }

        [Newtonsoft.Json.JsonProperty("stlTransmissionSheetCfgTierTransmissions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlTransmissionSheet> StlTransmissionSheetCfgTierTransmissions { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderCfgCommercials", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolderCfgCommercials { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderCfgCustomers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolderCfgCustomers { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderCfgLawyers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolderCfgLawyers { get; set; }

        [Newtonsoft.Json.JsonProperty("synFolderCfgTierBailiffs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<SynFolder> SynFolderCfgTierBailiffs { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebAlertDefinition
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUser> AdmUsers { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebCountry
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("isoalpha3", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Isoalpha3 { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptionAn", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DescriptionAn { get; set; }

        [Newtonsoft.Json.JsonProperty("isoname", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Isoname { get; set; }

        [Newtonsoft.Json.JsonProperty("nationCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NationCode { get; set; }

        [Newtonsoft.Json.JsonProperty("phoneCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PhoneCode { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebSystemParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebSystemParam> AdmWebSystemParams { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebCurrencyHistory
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid CurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("effectiveDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset EffectiveDate { get; set; }

        [Newtonsoft.Json.JsonProperty("rate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public double Rate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebCurrency Currency { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebCurrency
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebCurrencyHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebCurrencyHistory> AdmWebCurrencyHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebSystemParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebSystemParam> AdmWebSystemParams { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebSystemParam
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("cultureId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CultureId { get; set; }

        [Newtonsoft.Json.JsonProperty("countryId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CountryId { get; set; }

        [Newtonsoft.Json.JsonProperty("currencyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CurrencyId { get; set; }

        [Newtonsoft.Json.JsonProperty("languageId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid LanguageId { get; set; }

        [Newtonsoft.Json.JsonProperty("defaultMailFrom", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DefaultMailFrom { get; set; }

        [Newtonsoft.Json.JsonProperty("smtphost", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Smtphost { get; set; }

        [Newtonsoft.Json.JsonProperty("smtpport", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int Smtpport { get; set; }

        [Newtonsoft.Json.JsonProperty("serverAddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string ServerAddress { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("country", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebCountry Country { get; set; }

        [Newtonsoft.Json.JsonProperty("culture", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebCulture Culture { get; set; }

        [Newtonsoft.Json.JsonProperty("currency", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebCurrency Currency { get; set; }

        [Newtonsoft.Json.JsonProperty("language", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebLanguage Language { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebLanguage
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebCultures", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebCulture> AdmWebCultures { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebSystemParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebSystemParam> AdmWebSystemParams { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebCulture
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("dateExtjsShortFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateExtjsShortFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("dateExtjsLongFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateExtjsLongFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("dateExtjsAltFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateExtjsAltFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("dateShortFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateShortFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("dateLongFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateLongFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("dateSeparator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DateSeparator { get; set; }

        [Newtonsoft.Json.JsonProperty("numberNegativeFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NumberNegativeFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("numberGrouping", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NumberGrouping { get; set; }

        [Newtonsoft.Json.JsonProperty("numberDecimalCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? NumberDecimalCount { get; set; }

        [Newtonsoft.Json.JsonProperty("numberGroupingSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NumberGroupingSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("numberDecimalSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NumberDecimalSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("numberNegativeSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NumberNegativeSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("numberPosifiveSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string NumberPosifiveSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageNegativeFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PercentageNegativeFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("percentagePositiveFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PercentagePositiveFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageGroupingNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PercentageGroupingNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageNumberofDecimal", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PercentageNumberofDecimal { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PercentageSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageNumberGroupingSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PercentageNumberGroupingSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageDecimalSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PercentageDecimalSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("percentageThousandSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string PercentageThousandSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("timeExtjsFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TimeExtjsFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("timeShortFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TimeShortFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("timeLongFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TimeLongFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("timeSeparator", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TimeSeparator { get; set; }

        [Newtonsoft.Json.JsonProperty("timeMorningSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TimeMorningSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("timeEveningSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TimeEveningSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("deviceNegativeFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DeviceNegativeFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("devicePositiveFormat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DevicePositiveFormat { get; set; }

        [Newtonsoft.Json.JsonProperty("deviseGrouping", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DeviseGrouping { get; set; }

        [Newtonsoft.Json.JsonProperty("deviseDecimalCount", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? DeviseDecimalCount { get; set; }

        [Newtonsoft.Json.JsonProperty("deviseGroupingSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DeviseGroupingSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("deviseDecimalSymbol", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DeviseDecimalSymbol { get; set; }

        [Newtonsoft.Json.JsonProperty("languageId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid LanguageId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("language", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebLanguage Language { get; set; }

        [Newtonsoft.Json.JsonProperty("admUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUser> AdmUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebSystemParams", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebSystemParam> AdmWebSystemParams { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmChat
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("fromUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? FromUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("toUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? ToUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("sentDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? SentDate { get; set; }

        [Newtonsoft.Json.JsonProperty("message", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string Message { get; set; }

        [Newtonsoft.Json.JsonProperty("isRead", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsRead { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("fromUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser FromUser { get; set; }

        [Newtonsoft.Json.JsonProperty("toUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser ToUser { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmFormsLog
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("nameSpace", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string NameSpace { get; set; }

        [Newtonsoft.Json.JsonProperty("actionDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? ActionDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userDescription", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string UserDescription { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmUserId { get; set; }

        [Newtonsoft.Json.JsonProperty("admSessionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? AdmSessionId { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("admUser", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser AdmUser { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebLockEntity
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("lockDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset LockDate { get; set; }

        [Newtonsoft.Json.JsonProperty("sessionId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid SessionId { get; set; }

        [Newtonsoft.Json.JsonProperty("dataObjectId", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid DataObjectId { get; set; }

        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int State { get; set; }

        [Newtonsoft.Json.JsonProperty("session", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebSession Session { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmWebSession
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("webSession", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string WebSession { get; set; }

        [Newtonsoft.Json.JsonProperty("userId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? UserId { get; set; }

        [Newtonsoft.Json.JsonProperty("userDesc", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string UserDesc { get; set; }

        [Newtonsoft.Json.JsonProperty("startDate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset StartDate { get; set; }

        [Newtonsoft.Json.JsonProperty("endDate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? EndDate { get; set; }

        [Newtonsoft.Json.JsonProperty("ipaddress", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Ipaddress { get; set; }

        [Newtonsoft.Json.JsonProperty("state", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int State { get; set; }

        [Newtonsoft.Json.JsonProperty("systemVersion", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string SystemVersion { get; set; }

        [Newtonsoft.Json.JsonProperty("user", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmUser User { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebLockEntities", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebLockEntity> AdmWebLockEntities { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.3.8.0 (Newtonsoft.Json v12.0.0.0)")]
    public partial class AdmUser
    {
        [Newtonsoft.Json.JsonProperty("pkey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Pkey { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Code { get; set; }

        [Newtonsoft.Json.JsonProperty("pass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Pass { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string Description { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserCreate { get; set; }

        [Newtonsoft.Json.JsonProperty("userCreateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserCreateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdate", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string UserUpdate { get; set; }

        [Newtonsoft.Json.JsonProperty("userUpdateDateTime", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTimeOffset? UserUpdateDateTime { get; set; }

        [Newtonsoft.Json.JsonProperty("email", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Email { get; set; }

        [Newtonsoft.Json.JsonProperty("phone", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Phone { get; set; }

        [Newtonsoft.Json.JsonProperty("mobile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Mobile { get; set; }

        [Newtonsoft.Json.JsonProperty("linesPerPage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LinesPerPage { get; set; }

        [Newtonsoft.Json.JsonProperty("confirmDelete", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? ConfirmDelete { get; set; }

        [Newtonsoft.Json.JsonProperty("lockDelay", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? LockDelay { get; set; }

        [Newtonsoft.Json.JsonProperty("webRoleId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? WebRoleId { get; set; }

        [Newtonsoft.Json.JsonProperty("webCultureId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? WebCultureId { get; set; }

        [Newtonsoft.Json.JsonProperty("webAlertDefinitionId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? WebAlertDefinitionId { get; set; }

        [Newtonsoft.Json.JsonProperty("disabled", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? Disabled { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployeeId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? CfgEmployeeId { get; set; }

        [Newtonsoft.Json.JsonProperty("isVisibleForChat", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? IsVisibleForChat { get; set; }

        [Newtonsoft.Json.JsonProperty("canDisapearNotification", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? CanDisapearNotification { get; set; }

        [Newtonsoft.Json.JsonProperty("emailPassword", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string EmailPassword { get; set; }

        [Newtonsoft.Json.JsonProperty("emailPortNumber", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? EmailPortNumber { get; set; }

        [Newtonsoft.Json.JsonProperty("emailSmtpserver", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string EmailSmtpserver { get; set; }

        [Newtonsoft.Json.JsonProperty("emailSslactive", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool? EmailSslactive { get; set; }

        [Newtonsoft.Json.JsonProperty("openBeeCode", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string OpenBeeCode { get; set; }

        [Newtonsoft.Json.JsonProperty("openBeePass", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string OpenBeePass { get; set; }

        [Newtonsoft.Json.JsonProperty("cfgEmployee", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public CfgTier CfgEmployee { get; set; }

        [Newtonsoft.Json.JsonProperty("webAlertDefinition", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebAlertDefinition WebAlertDefinition { get; set; }

        [Newtonsoft.Json.JsonProperty("webCulture", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmWebCulture WebCulture { get; set; }

        [Newtonsoft.Json.JsonProperty("webRole", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AdmRole WebRole { get; set; }

        [Newtonsoft.Json.JsonProperty("admChatFromUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmChat> AdmChatFromUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("admChatToUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmChat> AdmChatToUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("admFormsLogs", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmFormsLog> AdmFormsLogs { get; set; }

        [Newtonsoft.Json.JsonProperty("admNotificationFromUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmNotification> AdmNotificationFromUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("admNotificationToUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmNotification> AdmNotificationToUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("admToDoLists", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmToDoList> AdmToDoLists { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserHabilitations", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUserHabilitation> AdmUserHabilitations { get; set; }

        [Newtonsoft.Json.JsonProperty("admUserRoles", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmUserRole> AdmUserRoles { get; set; }

        [Newtonsoft.Json.JsonProperty("admWebSessions", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<AdmWebSession> AdmWebSessions { get; set; }

        [Newtonsoft.Json.JsonProperty("buyConsultationStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyConsultationStatusHistory> BuyConsultationStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("buyDocumentStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<BuyDocumentStatusHistory> BuyDocumentStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("comActionMessages", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComActionMessage> ComActionMessages { get; set; }

        [Newtonsoft.Json.JsonProperty("comFolderStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<ComFolderStatusHistory> ComFolderStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("prjMarketStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<PrjMarketStatusHistory> PrjMarketStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("stkFeasibilityStudyStatusHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StkFeasibilityStudyStatusHistory> StkFeasibilityStudyStatusHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("stlDepositUsers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlDepositUser> StlDepositUsers { get; set; }

        [Newtonsoft.Json.JsonProperty("stlSettlementHistories", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StlSettlementHistory> StlSettlementHistories { get; set; }

        [Newtonsoft.Json.JsonProperty("strInterveners", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<StrIntervener> StrInterveners { get; set; }


    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.10.6.0 (NJsonSchema v10.3.8.0 (Newtonsoft.Json v12.0.0.0))")]
    public partial class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.10.6.0 (NJsonSchema v10.3.8.0 (Newtonsoft.Json v12.0.0.0))")]
    public partial class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore 472
#pragma warning restore 114
#pragma warning restore 108