@using YesSIMobileModels.Models
@page "/List"
@inject HttpClient Http

<h1>License Data</h1>
<p>This component demonstrates fetching License data from the server.</p>
<p>
    <a href="/AddLicense">Create New</a>
</p>
@if (List2 == null)
{
    <p><em>Loading...</em></p>
    <p>@List2.ToString()</p>
}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Pkey</th>
                <th>Company</th>
                <th>Admin Email</th>
                <th>DB</th>
                <th>Activated mobile users</th>
                <th>Date Activated</th>
                <th>Expire Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in List2)
            {
            <tr>
                <td>@emp.Pkey</td>
                <td>@emp.Description</td>
                <td>@emp.AdmUserEmail</td>
                <td>@emp.ServerUrl</td>
                <td><center>@emp.UserNumber</center> </td>
                <td>@emp.DateActivated</td>
                <td>@emp.ExpireDate</td>
                <td>
                    <a href='/editLicense/@emp.Pkey'>Edit</a>
                </td>
            </tr>

            }
        </tbody>
    </table>
}


@code{

    AdmLicense[] List2 = { };

    HttpClient Client = new();
    protected override async Task OnInitializedAsync()
    {
        //List2 = await Client.GetFromJsonAsync<AdmLicense[]>("http://192.168.1.103:5000/WebApi/GetLicenseList");
        List2 = await Client.GetFromJsonAsync<AdmLicense[]>("https://localhost:44386/WebApi/GetLicenseList");

    }

}

@*@functions {

        IEnumerable<AdmLicense> List2 = new List<AdmLicense>();


        AdmLicense[] List1;
        protected override async Task OnInitializedAsync()
        {
            List1 = await Http.GetFromJsonAsync<AdmLicense[]>
            ("https://192.168.1.103:5001/WebApi/GetLicenseList");

        }
    }*@  